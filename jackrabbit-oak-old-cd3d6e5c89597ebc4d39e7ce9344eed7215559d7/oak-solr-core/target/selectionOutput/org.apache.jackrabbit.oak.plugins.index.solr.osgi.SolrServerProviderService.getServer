org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : r14 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if $r3 == null
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r5 = "none"
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : return r14
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r5 = "none" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if $z0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.util.Map solrServerConfigurationProviders>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : return r14
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.util.Map solrServerConfigurationProviders> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : r1 = (org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider) $r8
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : r1 = (org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if r1 == null
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : return r14
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : specialinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r13 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r12 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r12 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("could not get a SolrServerProvider of type {}", $r12, $r11)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("could not get a SolrServerProvider of type {}", $r12, $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : return r14
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : specialinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : r14 = $r9
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : specialinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : r14 = $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : r14 = $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("created new SolrServer {}", $r9)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("created new SolrServer {}", $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : goto [?= return r14]
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("created new SolrServer {}", $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : goto [?= return r14] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.getServer : return r14
