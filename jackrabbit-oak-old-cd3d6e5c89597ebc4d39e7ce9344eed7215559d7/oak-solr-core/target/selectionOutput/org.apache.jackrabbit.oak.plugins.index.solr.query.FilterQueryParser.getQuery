org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r9 = new org.apache.solr.client.solrj.SolrQuery >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: void setDefaults(org.apache.solr.client.solrj.SolrQuery,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>($r9, r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: void setDefaults(org.apache.solr.client.solrj.SolrQuery,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>($r9, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r10 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r5 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r5 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r5 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r5 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r192 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: java.lang.String parseFullTextExpression(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>(r5, r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r5 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r11 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getFulltextConditions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r11 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getFulltextConditions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r11 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r11 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r195 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getFulltextConditions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r11 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r198 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.util.List getSortOrder()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r198 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.util.List getSortOrder()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r198 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r198 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r199 = interfaceinvoke r198.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r198 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r203 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r203 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r203 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r203 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z4 = interfaceinvoke r203.<java.util.Collection: boolean isEmpty()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r203 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z33 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPrimaryTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z33 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPrimaryTypes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z33 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z33 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r51 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Set getPrimaryTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z33 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r12 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getQueryStatement()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r12 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getQueryStatement()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r12 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r12 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r42 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getQueryStatement()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r12 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z34 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPathRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z34 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPathRestrictions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z34 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z34 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r234 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z34 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z35 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z35 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r19 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z35 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i4 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i4 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i4 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*:*")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r237 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r237 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setQuery(java.lang.String)>(r237)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setQuery(java.lang.String)>(r237) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r14 = <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r14 = <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z0 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z0 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r15 = <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : return $r9
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r15 = <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r16 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getQueryStatement()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r16 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getQueryStatement()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r17 = virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r17 = virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("JCR query {} has been converted to Solr query {}", $r16, $r17)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("JCR query {} has been converted to Solr query {}", $r16, $r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : return $r9
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*:*") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r237 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r19 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r20 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{!collapse field=")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{!collapse field=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r22 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCollapsedPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r22 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCollapsedPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min=")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r25 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathDepthField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r25 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathDepthField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hint=top_fc nullPolicy=expand}")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hint=top_fc nullPolicy=expand}") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r19[0] = $r28
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r19[0] = $r28 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFilterQuery(java.lang.String[])>($r19)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFilterQuery(java.lang.String[])>($r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i4 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r234 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r234 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r234 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r30 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.lang.String getPathPrefix()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r234 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r30 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.lang.String getPathPrefix()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r235 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: java.lang.String purgePath(org.apache.jackrabbit.oak.spi.query.Filter,java.lang.String)>(r0, $r30)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r235 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: java.lang.String purgePath(org.apache.jackrabbit.oak.spi.query.Filter,java.lang.String)>(r0, $r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r236 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldForPathRestriction(org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction)>(r234)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r236 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldForPathRestriction(org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction)>(r234) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r236 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r236 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r31 = <org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction ALL_CHILDREN>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r236 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r31 = <org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction ALL_CHILDREN> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z1 = virtualinvoke r234.<org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: boolean equals(java.lang.Object)>($r31)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z1 = virtualinvoke r234.<org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: boolean equals(java.lang.Object)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r35 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r236)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r236) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r235)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r235) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r35 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r36 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r36 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r236)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r236) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r235)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r235) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r35[0] = $r40
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r35[0] = $r40 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFilterQuery(java.lang.String[])>($r35)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFilterQuery(java.lang.String[])>($r35) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z35 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r42 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getQueryStatement()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z2 = virtualinvoke $r42.<java.lang.String: boolean contains(java.lang.CharSequence)>("rep:excerpt")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z2 = virtualinvoke $r42.<java.lang.String: boolean contains(java.lang.CharSequence)>("rep:excerpt") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z3 = virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: boolean getHighlight()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z34 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPathRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z3 = virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: boolean getHighlight()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z3 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setHighlight(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z34 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPathRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setHighlight(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r44 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r44 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r44[0] = "*"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r44[0] = "*" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("hl.fl", $r44)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("hl.fl", $r44) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r46 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r46 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r46[0] = "html"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r46[0] = "html" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("hl.encoder", $r46)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("hl.encoder", $r46) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,boolean)>("hl.mergeContiguous", 1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,boolean)>("hl.mergeContiguous", 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setHighlightSimplePre(java.lang.String)>("<strong>")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setHighlightSimplePre(java.lang.String)>("<strong>") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setHighlightSimplePost(java.lang.String)>("</strong>")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setHighlightSimplePost(java.lang.String)>("</strong>") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z34 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPathRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r51 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Set getPrimaryTypes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r52 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Set getPrimaryTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r52 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Set getPrimaryTypes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i5 = interfaceinvoke $r52.<java.util.Set: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i5 = interfaceinvoke $r52.<java.util.Set: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r53 = newarray (java.lang.String)[$i5]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r53 = newarray (java.lang.String)[$i5] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r54 = interfaceinvoke $r51.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r53)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r54 = interfaceinvoke $r51.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r53) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r227 = (java.lang.String[]) $r54
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r227 = (java.lang.String[]) $r54 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r55 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r55 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i21 = 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i21 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i6 = lengthof r227
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i6 = lengthof r227 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 >= $i6
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 >= $i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r229 = r227[i21]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 >= $i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r56 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r56 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r56[0] = $r57
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r56[0] = $r57 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFilterQuery(java.lang.String[])>($r56)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFilterQuery(java.lang.String[])>($r56) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r12 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getQueryStatement()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r229 = r227[i21] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i7 = lengthof r227
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r230 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jcr\\:primaryType")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r230 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jcr\\:primaryType") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r231 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r231 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r232 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r229)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r232 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r229) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r233 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r232)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r233 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r232) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i22 = lengthof r227
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i22 = lengthof r227 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i23 = $i22 - 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i23 = $i22 - 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 != $i23
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 != $i23 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 != $i23 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i21 = i21 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i21 = i21 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $i6 = lengthof r227]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $i6 = lengthof r227] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i6 = lengthof r227
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i21 = i21 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i7 = lengthof r227 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 >= $i7
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 >= $i7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OR ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 >= $i7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r230 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jcr\\:primaryType")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OR ") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r230 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jcr\\:primaryType")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i21 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z4 = interfaceinvoke r203.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z4 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r204 = interfaceinvoke r203.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z33 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPrimaryTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r204 = interfaceinvoke r203.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z27 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z27 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r64 = interfaceinvoke r204.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z27 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z33 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPrimaryTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r64 = interfaceinvoke r204.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r205 = (org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction) $r64
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r205 = (org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction) $r64 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z5 = virtualinvoke r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean isNullRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z5 = virtualinvoke r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean isNullRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z5 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r66 = "rep:facet"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r66 = "rep:facet" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r65 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r65 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z6 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>($r65)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z6 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>($r65) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z6 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z6 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setFacetMinCount(int)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z6 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r68 = "native*solr"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r68 = "native*solr" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r67 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r67 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z7 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>($r67)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z7 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>($r67) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z7 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z7 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r103 = "native*lucene"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z7 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r70 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r70 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r69 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r69 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r71 = interfaceinvoke $r69.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r71 = interfaceinvoke $r69.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r72 = interfaceinvoke $r70.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r71)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r72 = interfaceinvoke $r70.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r71) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r207 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r72)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r207 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r72) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z8 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: boolean isSupportedHttpRequest(java.lang.String)>(r207)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z8 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: boolean isSupportedHttpRequest(java.lang.String)>(r207) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z8 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z8 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i8 = virtualinvoke r207.<java.lang.String: int indexOf(int)>(63)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z8 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r207)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r207) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i8 = virtualinvoke r207.<java.lang.String: int indexOf(int)>(63) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r208 = virtualinvoke r207.<java.lang.String: java.lang.String substring(int,int)>(0, $i8)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r208 = virtualinvoke r207.<java.lang.String: java.lang.String substring(int,int)>(0, $i8) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r75 = "select"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r75 = "select" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z9 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>(r208)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z9 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>(r208) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z9 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z9 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $c11 = virtualinvoke r208.<java.lang.String: char charAt(int)>(0)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z9 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i18 = virtualinvoke r207.<java.lang.String: int indexOf(int)>(63)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i18 = virtualinvoke r207.<java.lang.String: int indexOf(int)>(63) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i19 = $i18 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i19 = $i18 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r209 = virtualinvoke r207.<java.lang.String: java.lang.String substring(int)>($i19)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r209 = virtualinvoke r207.<java.lang.String: java.lang.String substring(int)>($i19) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r210 = virtualinvoke r209.<java.lang.String: java.lang.String[] split(java.lang.String)>("&")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r210 = virtualinvoke r209.<java.lang.String: java.lang.String[] split(java.lang.String)>("&") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i0 = lengthof r210
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i0 = lengthof r210 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i20 = 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i20 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i20 >= i0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i20 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r6 = r210[i20]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i20 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : return $r9
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r6 = r210[i20] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("=")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i9 = lengthof r7
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i9 = lengthof r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i9 == 2
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i9 == 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r97 = new java.lang.RuntimeException
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i9 == 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r76 = "/mlt"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r76 = "/mlt" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z10 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r208)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z10 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r208) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z10 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z10 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r85 = "stream.body"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z10 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r214 = "/spellcheck"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r214 = "/spellcheck" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z29 = virtualinvoke $r214.<java.lang.String: boolean equals(java.lang.Object)>(r208)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z29 = virtualinvoke $r214.<java.lang.String: boolean equals(java.lang.Object)>(r208) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z29 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z29 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r82 = "term"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z29 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r215 = "/suggest"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r215 = "/suggest" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z30 = virtualinvoke $r215.<java.lang.String: boolean equals(java.lang.Object)>(r208)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z30 = virtualinvoke $r215.<java.lang.String: boolean equals(java.lang.Object)>(r208) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z30 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z30 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r79 = "term"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z30 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r216 = r7[0]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r216 = r7[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r217 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r217 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r218 = r7[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r218 = r7[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r217[0] = $r218
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r217[0] = $r218 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>($r216, $r217)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>($r216, $r217) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i20 = i20 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i20 = i20 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i20 >= i0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r79 = "term" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r78 = r7[0]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r78 = r7[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z11 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>($r78)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z11 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>($r78) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z11 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z11 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[0] = "suggest.q"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z11 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,boolean)>("suggest", 1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,boolean)>("suggest", 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r216 = r7[0]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[0] = "suggest.q" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,boolean)>("suggest", 1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r82 = "term" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r81 = r7[0]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r81 = r7[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z12 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>($r81)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z12 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>($r81) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z12 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z12 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[0] = "spellcheck.q"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z12 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,boolean)>("spellcheck", 1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,boolean)>("spellcheck", 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r215 = "/suggest"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[0] = "spellcheck.q" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,boolean)>("spellcheck", 1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r85 = "stream.body" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r84 = r7[0]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r84 = r7[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z13 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>($r84)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z13 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>($r84) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z13 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z13 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[0] = "q"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z13 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r212 = "mlt.fl"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r212 = "mlt.fl" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r213 = r7[0]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r213 = r7[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z28 = virtualinvoke $r212.<java.lang.String: boolean equals(java.lang.Object)>($r213)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z28 = virtualinvoke $r212.<java.lang.String: boolean equals(java.lang.Object)>($r213) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z28 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z28 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r87 = ":path"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z28 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r214 = "/spellcheck"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r87 = ":path" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r86 = r7[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r86 = r7[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z14 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>($r86)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z14 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>($r86) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z14 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z14 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r88 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCatchAllField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z14 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r214 = "/spellcheck"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r88 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCatchAllField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[1] = $r88
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[1] = $r88 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r214 = "/spellcheck"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[0] = "q" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r8 = "mlt.fl="
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r8 = "mlt.fl=" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i1 = virtualinvoke r209.<java.lang.String: int indexOf(java.lang.String)>("mlt.fl=")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i1 = virtualinvoke r209.<java.lang.String: int indexOf(java.lang.String)>("mlt.fl=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i1 <= -1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i1 <= -1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i10 = virtualinvoke r8.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i1 <= -1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r212 = "mlt.fl"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i10 = virtualinvoke r8.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i2 = i1 + $i10
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i2 = i1 + $i10 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i3 = virtualinvoke r209.<java.lang.String: int indexOf(int,int)>(38, i2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : i3 = virtualinvoke r209.<java.lang.String: int indexOf(int,int)>(38, i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i3 <= i2
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i3 <= i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r211 = virtualinvoke r209.<java.lang.String: java.lang.String substring(int,int)>(i2, i3)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if i3 <= i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r211 = virtualinvoke r209.<java.lang.String: java.lang.String substring(int)>(i2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r211 = virtualinvoke r209.<java.lang.String: java.lang.String substring(int)>(i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r89 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r89 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r89.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r89.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_query_:\"{!dismax qf=")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_query_:\"{!dismax qf=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r211)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r211) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" q.op=OR}")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" q.op=OR}") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r93 = r7[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r93 = r7[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[1] = $r96
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r7[1] = $r96 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r212 = "mlt.fl"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r211 = virtualinvoke r209.<java.lang.String: java.lang.String substring(int,int)>(i2, i3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $r89 = new java.lang.StringBuilder]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $r89 = new java.lang.StringBuilder] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r89 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r97 = new java.lang.RuntimeException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r97.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unparsable native HTTP Solr query")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r97.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unparsable native HTTP Solr query") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : throw $r97
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $c11 = virtualinvoke r208.<java.lang.String: char charAt(int)>(0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $c11 == 47
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $c11 == 47 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r99 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $c11 == 47 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setRequestHandler(java.lang.String)>(r208)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setRequestHandler(java.lang.String)>(r208) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i18 = virtualinvoke r207.<java.lang.String: int indexOf(int)>(63)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r99 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r99.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r99.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r208)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r208) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r208 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r208 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setRequestHandler(java.lang.String)>(r208)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r103 = "native*lucene" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r102 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r102 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z15 = virtualinvoke $r103.<java.lang.String: boolean equals(java.lang.Object)>($r102)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z15 = virtualinvoke $r103.<java.lang.String: boolean equals(java.lang.Object)>($r102) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z15 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z15 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r70 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z15 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z16 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: boolean isIgnoredProperty(org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>(r205, r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z16 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: boolean isIgnoredProperty(org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>(r205, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z16 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z16 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z16 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r219 = null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r219 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r104 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r104 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r104 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r104 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r155 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r104 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r220 = null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r220 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r105 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r105 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r105 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r105 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r149 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r105 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r221 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldForPropertyRestriction(org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction)>(r205)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r221 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldForPropertyRestriction(org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction)>(r205) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r221 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r221 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r222 = r221
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if r221 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r222 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r222 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r223 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r222)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r223 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r222) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r106 = "jcr\\:path"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r106 = "jcr\\:path" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r107 = interfaceinvoke r223.<java.lang.CharSequence: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r107 = interfaceinvoke r223.<java.lang.CharSequence: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z17 = virtualinvoke $r106.<java.lang.String: boolean equals(java.lang.Object)>($r107)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z17 = virtualinvoke $r106.<java.lang.String: boolean equals(java.lang.Object)>($r107) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z17 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z17 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r144 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z17 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r108 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r108 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r108 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r108 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r138 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r108 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r224 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r224 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r224 != null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r224 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r129 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r224 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r109 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r109 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r109 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r109 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r128 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r109 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r110 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r110 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r110 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r110 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r127 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r110 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r112 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r112 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r111 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r111 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z18 = virtualinvoke $r112.<java.lang.Object: boolean equals(java.lang.Object)>($r111)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z18 = virtualinvoke $r112.<java.lang.Object: boolean equals(java.lang.Object)>($r111) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z18 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z18 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r225 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z18 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z19 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean isLike>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z19 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean isLike> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z19 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z19 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r114 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z19 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r113 = new java.lang.RuntimeException
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r113 = new java.lang.RuntimeException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r113.<java.lang.RuntimeException: void <init>(java.lang.String)>("[unexpected!] not handled case")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r113.<java.lang.RuntimeException: void <init>(java.lang.String)>("[unexpected!] not handled case") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : throw $r113
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r114 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r117 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r117 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r116 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r116 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r118 = interfaceinvoke $r116.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r118 = interfaceinvoke $r116.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r119 = interfaceinvoke $r117.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r118)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r119 = interfaceinvoke $r117.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r118) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r120 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r119)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r120 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r119) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r121 = virtualinvoke $r120.<java.lang.String: java.lang.String replace(char,char)>(37, 42)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r121 = virtualinvoke $r120.<java.lang.String: java.lang.String replace(char,char)>(37, 42) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r122 = virtualinvoke $r121.<java.lang.String: java.lang.String replace(char,char)>(95, 63)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r122 = virtualinvoke $r121.<java.lang.String: java.lang.String replace(char,char)>(95, 63) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r123 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r122)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r123 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r122) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r123)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r123) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r225 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z31 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean firstIncluding>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z31 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean firstIncluding> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z32 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean lastIncluding>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z32 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: boolean lastIncluding> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r226 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: java.lang.String createRangeQuery(java.lang.String,java.lang.String,boolean,boolean)>(r219, r220, $z31, $z32)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r226 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: java.lang.String createRangeQuery(java.lang.String,java.lang.String,boolean,boolean)>(r219, r220, $z31, $z32) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r226)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r226) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r127 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r127 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r127 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r112 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r127 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r225 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r128 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r128 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r128 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r110 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r128 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r225 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r129 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r129 != null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r129 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r130 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r129 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r109 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r130 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r131 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r131 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r131.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r131.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r223)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r223) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z20 = virtualinvoke $r130.<java.lang.String: boolean contains(java.lang.CharSequence)>($r134)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z20 = virtualinvoke $r130.<java.lang.String: boolean contains(java.lang.CharSequence)>($r134) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z20 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z20 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r135 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z20 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r135 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r138 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r138 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r138 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r140 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $r138 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r224 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r140 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r139 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r139 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z21 = virtualinvoke $r140.<java.lang.Object: boolean equals(java.lang.Object)>($r139)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z21 = virtualinvoke $r140.<java.lang.Object: boolean equals(java.lang.Object)>($r139) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z21 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z21 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r141 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z21 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r224 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r141 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r223) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r219)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r219) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r144 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r219)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r219) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r222 = r221 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= r223 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r222)]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= r223 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r222)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r223 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r222)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r149 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r148 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r148 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue last> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r150 = interfaceinvoke $r148.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r150 = interfaceinvoke $r148.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r151 = interfaceinvoke $r149.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r150)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r151 = interfaceinvoke $r149.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r150) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r152 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r151)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r152 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r151) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r153 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r152)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r153 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r152) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r220 = interfaceinvoke $r153.<java.lang.CharSequence: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r220 = interfaceinvoke $r153.<java.lang.CharSequence: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r221 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldForPropertyRestriction(org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction)>(r205)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r155 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r154 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r154 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r156 = interfaceinvoke $r154.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r156 = interfaceinvoke $r154.<org.apache.jackrabbit.oak.api.PropertyValue: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r157 = interfaceinvoke $r155.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r156)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r157 = interfaceinvoke $r155.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r156) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r158 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r157)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r158 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r157) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r159 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r158)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r159 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r158) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r219 = interfaceinvoke $r159.<java.lang.CharSequence: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r219 = interfaceinvoke $r159.<java.lang.CharSequence: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r220 = null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setFacetMinCount(int)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setFacet(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setFacet(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r163 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r163 = r205.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: org.apache.jackrabbit.oak.api.PropertyValue first> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r162 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r162 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r164 = interfaceinvoke $r163.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r162)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r164 = interfaceinvoke $r163.<org.apache.jackrabbit.oak.api.PropertyValue: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r162) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r206 = (java.lang.String) $r164
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r206 = (java.lang.String) $r164 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r165 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r165 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r166 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r166 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r166.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : specialinvoke $r166.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r167 = "rep:facet"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r167 = "rep:facet" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i12 = virtualinvoke $r167.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i12 = virtualinvoke $r167.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i13 = $i12 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i13 = $i12 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i14 = virtualinvoke r206.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i14 = virtualinvoke r206.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i15 = $i14 - 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i15 = $i14 - 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r168 = virtualinvoke r206.<java.lang.String: java.lang.String substring(int,int)>($i13, $i15)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r168 = virtualinvoke r206.<java.lang.String: java.lang.String substring(int,int)>($i13, $i15) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r169 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r168)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r169 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r168) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_facet")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_facet") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r165[0] = $r171
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r165[0] = $r171 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFacetField(java.lang.String[])>($r165)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addFacetField(java.lang.String[])>($r165) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r68 = "native*solr"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z27 = interfaceinvoke r204.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r199 = interfaceinvoke r198.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z26 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z26 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r173 = interfaceinvoke r199.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z26 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r203 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r173 = interfaceinvoke r199.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r200 = (org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry) $r173
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r200 = (org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry) $r173 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r174 = <org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order: org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order ASCENDING>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r174 = <org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order: org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order ASCENDING> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r175 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order getOrder()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r175 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order getOrder()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z22 = virtualinvoke $r174.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order: boolean equals(java.lang.Object)>($r175)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z22 = virtualinvoke $r174.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry$Order: boolean equals(java.lang.Object)>($r175) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z22 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z22 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r201 = <org.apache.solr.client.solrj.SolrQuery$ORDER: org.apache.solr.client.solrj.SolrQuery$ORDER asc>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z22 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r201 = <org.apache.solr.client.solrj.SolrQuery$ORDER: org.apache.solr.client.solrj.SolrQuery$ORDER desc>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r201 = <org.apache.solr.client.solrj.SolrQuery$ORDER: org.apache.solr.client.solrj.SolrQuery$ORDER desc> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r176 = "jcr:path"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r176 = "jcr:path" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r177 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r177 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z23 = virtualinvoke $r176.<java.lang.String: boolean equals(java.lang.Object)>($r177)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z23 = virtualinvoke $r176.<java.lang.String: boolean equals(java.lang.Object)>($r177) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z23 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z23 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r187 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z23 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r178 = "jcr:score"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r178 = "jcr:score" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r179 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r179 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z24 = virtualinvoke $r178.<java.lang.String: boolean equals(java.lang.Object)>($r179)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z24 = virtualinvoke $r178.<java.lang.String: boolean equals(java.lang.Object)>($r179) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z24 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z24 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r202 = "score"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z24 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r180 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r180 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i16 = virtualinvoke $r180.<java.lang.String: int indexOf(int)>(47)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i16 = virtualinvoke $r180.<java.lang.String: int indexOf(int)>(47) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i16 < 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i16 < 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r186 = <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $i16 < 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r181 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: org.apache.jackrabbit.oak.api.Type getPropertyType()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r181 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: org.apache.jackrabbit.oak.api.Type getPropertyType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i17 = virtualinvoke $r181.<org.apache.jackrabbit.oak.api.Type: int tag()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $i17 = virtualinvoke $r181.<org.apache.jackrabbit.oak.api.Type: int tag()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r182 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r182 = virtualinvoke r200.<org.apache.jackrabbit.oak.spi.query.QueryIndex$OrderEntry: java.lang.String getPropertyName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r183 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.String getSortingField(int,java.lang.String)>($i17, $r182)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r183 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.String getSortingField(int,java.lang.String)>($i17, $r182) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r184 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r183)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r184 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r183) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r202 = interfaceinvoke $r184.<java.lang.CharSequence: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r202 = interfaceinvoke $r184.<java.lang.CharSequence: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r186 = <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : interfaceinvoke $r186.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("cannot sort on relative properties, ignoring {} clause", r200)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : interfaceinvoke $r186.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("cannot sort on relative properties, ignoring {} clause", r200) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z26 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r202 = "score" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201)]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r187 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r188 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r187)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r188 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>($r187) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r202 = interfaceinvoke $r188.<java.lang.CharSequence: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r202 = interfaceinvoke $r188.<java.lang.CharSequence: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201)]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r9.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String,org.apache.solr.client.solrj.SolrQuery$ORDER)>(r202, r201)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r201 = <org.apache.solr.client.solrj.SolrQuery$ORDER: org.apache.solr.client.solrj.SolrQuery$ORDER asc> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $r176 = "jcr:path"]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $r176 = "jcr:path"] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r176 = "jcr:path"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r195 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getFulltextConditions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r196 = interfaceinvoke r195.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r196 = interfaceinvoke r195.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z25 = interfaceinvoke r196.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z25 = interfaceinvoke r196.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z25 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z25 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r189 = interfaceinvoke r196.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : if $z25 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r198 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.util.List getSortOrder()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r189 = interfaceinvoke r196.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r197 = (java.lang.String) $r189
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r197 = (java.lang.String) $r189 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r190 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r197)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r190 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r197) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z25 = interfaceinvoke r196.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= $z25 = interfaceinvoke r196.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $z25 = interfaceinvoke r196.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : $r192 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser: java.lang.String parseFullTextExpression(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>(r5, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r192)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r192) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= r198 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.util.List getSortOrder()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : goto [?= r198 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.util.List getSortOrder()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.getQuery : r198 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan: java.util.List getSortOrder()>()
