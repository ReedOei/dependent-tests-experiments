org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : r2 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if r1 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : return $r4
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $i0 <= 1
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $i0 <= 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $i0 <= 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $i2 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $i2 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $i2 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $i2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : r2 = "/"
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : if $i2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : r2 = "/" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.FilterQueryParser.purgePath : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.CharSequence partialEscape(java.lang.CharSequence)>(r2)
