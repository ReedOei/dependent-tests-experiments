org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r5 = new java.util.LinkedList >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : specialinvoke $r5.<java.util.LinkedList: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : specialinvoke $r5.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r6 = new org.apache.tika.metadata.Metadata
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r6 = new org.apache.tika.metadata.Metadata >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : specialinvoke $r6.<org.apache.tika.metadata.Metadata: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : specialinvoke $r6.<org.apache.tika.metadata.Metadata: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r7 = "jcr:data"
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r7 = "jcr:data" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r11 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.String getString(java.lang.String)>("jcr:mimeType")
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r13 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r13 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r14 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r13)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r14 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r15 = (java.lang.Iterable) $r14
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r15 = (java.lang.Iterable) $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r16 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r16 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r9 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : return $r5
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r9 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r17 = (org.apache.jackrabbit.oak.api.Blob) $r9
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r17 = (org.apache.jackrabbit.oak.api.Blob) $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r10 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String parseStringValue(org.apache.jackrabbit.oak.api.Blob,org.apache.tika.metadata.Metadata)>(r17, $r6)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r10 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String parseStringValue(org.apache.jackrabbit.oak.api.Blob,org.apache.tika.metadata.Metadata)>(r17, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r11 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.String getString(java.lang.String)>("jcr:mimeType") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if r11 == null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if r11 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : virtualinvoke $r6.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", r11)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if r11 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r12 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.String getString(java.lang.String)>("jcr:encoding")
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r12 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.String getString(java.lang.String)>("jcr:encoding") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if r12 == null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if r12 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : virtualinvoke $r6.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Encoding", r12)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : if r12 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r13 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : virtualinvoke $r6.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Encoding", r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : $r13 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : virtualinvoke $r6.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.extractTextValues : r12 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.String getString(java.lang.String)>("jcr:encoding")
