org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $r12 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: void <init>(org.apache.jackrabbit.oak.spi.state.NodeState)>(r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: void <init>(org.apache.jackrabbit.oak.spi.state.NodeState)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r4 = virtualinvoke $r12.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: java.util.Collection collectIndexNodePaths(org.apache.jackrabbit.oak.spi.query.Filter)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r4 = virtualinvoke $r12.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: java.util.Collection collectIndexNodePaths(org.apache.jackrabbit.oak.spi.query.Filter)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $i0 = interfaceinvoke r4.<java.util.Collection: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $i0 = interfaceinvoke r4.<java.util.Collection: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>($i0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r6 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r6 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : return r5
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r7 = (java.lang.String) $r13
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r7 = (java.lang.String) $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r8 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration getConfiguration(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)>(r7, r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r8 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration getConfiguration(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)>(r7, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r9 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.solr.client.solrj.SolrClient getServer(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)>(r7, r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r9 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.solr.client.solrj.SolrClient getServer(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)>(r7, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r8 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r8 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r9 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r8 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r9 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r10 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator getEstimator(java.lang.String)>(r7)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r9 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r10 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator getEstimator(java.lang.String)>(r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r11 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan getIndexPlan(org.apache.jackrabbit.oak.spi.query.Filter,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator,java.util.List,java.lang.String)>(r1, r8, r10, r2, r7)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r11 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan getIndexPlan(org.apache.jackrabbit.oak.spi.query.Filter,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator,java.util.List,java.lang.String)>(r1, r8, r10, r2, r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r11 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r11 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r11 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
