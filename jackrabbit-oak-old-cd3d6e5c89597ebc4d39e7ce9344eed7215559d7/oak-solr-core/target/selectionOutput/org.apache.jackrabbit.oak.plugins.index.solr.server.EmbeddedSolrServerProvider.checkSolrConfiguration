org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r6 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r8 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r8 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("checking configuration at {}", $r8)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("checking configuration at {}", $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z8 = virtualinvoke $r6.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z1 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z1 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z1 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r51 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r9 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r9 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z2 = virtualinvoke $r9.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z2 = virtualinvoke $r9.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z2 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r37 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z3 = virtualinvoke $r9.<java.io.File: boolean isDirectory()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z3 = virtualinvoke $r9.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z3 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r31 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r10 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r10 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r11 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/index")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/index") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r16)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r16) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z4 = virtualinvoke $r10.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z4 = virtualinvoke $r10.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z4 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z4 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z4 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r64 = virtualinvoke $r6.<java.io.File: java.lang.String[] list()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r64 = virtualinvoke $r6.<java.io.File: java.lang.String[] list()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if r64 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if r64 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r64)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if r64 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : return
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r64) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $i0 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r64, r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $i0 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r64, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $i0 >= 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $i0 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r17 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $i0 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : return
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r17 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r18 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not find a directory with the coreName \'")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not find a directory with the coreName \'") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in the solrHomePath \'")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in the solrHomePath \'") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r24)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : throw $r17
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>("deleting stale lock files")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>("deleting stale lock files") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r26 = dynamicinvoke "accept" <java.io.FilenameFilter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/io/File;Ljava/lang/String;)Z", handle: <org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: boolean lambda$checkSolrConfiguration$0(java.io.File,java.lang.String)>, class "(Ljava/io/File;Ljava/lang/String;)Z")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r26 = dynamicinvoke "accept" <java.io.FilenameFilter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/io/File;Ljava/lang/String;)Z", handle: <org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: boolean lambda$checkSolrConfiguration$0(java.io.File,java.lang.String)>, class "(Ljava/io/File;Ljava/lang/String;)Z") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r62 = virtualinvoke $r10.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r26)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r62 = virtualinvoke $r10.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r26) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r27 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r27 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $i1 = lengthof r62
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $i1 = lengthof r62 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("found {} lock files", $r28)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("found {} lock files", $r28) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $i2 = lengthof r62
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $i2 = lengthof r62 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $i2 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $i2 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : i3 = lengthof r62
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $i2 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r64 = virtualinvoke $r6.<java.io.File: java.lang.String[] list()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : i3 = lengthof r62 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : i4 = 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : i4 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if i4 >= i3
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if i4 >= i3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r5 = r62[i4]
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if i4 >= i3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r64 = virtualinvoke $r6.<java.io.File: java.lang.String[] list()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r5 = r62[i4] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r5)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r29 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r29 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r30 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r30 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("deleted {}", $r30)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("deleted {}", $r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : i4 = i4 + 1
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : i4 = i4 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if i4 >= i3
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r31 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r32 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a non directory file with the specified name already exists for the given Solr core path\'")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a non directory file with the specified name already exists for the given Solr core path\'") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r34 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r34 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r36)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : throw $r31
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r37 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r37.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "conf")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r37.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "conf") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z5 = virtualinvoke $r37.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z5 = virtualinvoke $r37.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z5 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z5 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r50 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z5 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r57 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r57 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r38 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r38 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r39 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r39 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r39.<java.io.File: void <init>(java.lang.String)>(r57)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r39.<java.io.File: void <init>(java.lang.String)>(r57) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r38.<java.io.File: void <init>(java.io.File,java.lang.String)>($r39, "core.properties")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r38.<java.io.File: void <init>(java.io.File,java.lang.String)>($r39, "core.properties") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z6 = <org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: boolean $assertionsDisabled>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z6 = <org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: boolean $assertionsDisabled> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z6 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z6 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z7 = virtualinvoke $r38.<java.io.File: boolean createNewFile()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z6 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r40 = new java.io.FileOutputStream
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r40 = new java.io.FileOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.io.File)>($r38)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.io.File)>($r38) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r41 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r41 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r45 = virtualinvoke $r44.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r45 = virtualinvoke $r44.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void writeBytes(java.io.OutputStream,byte[])>($r40, $r45)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void writeBytes(java.io.OutputStream,byte[])>($r40, $r45) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void flush()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void close()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r46 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r46 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/conf/")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/conf/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r60 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r60 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/oak/conf/schema.xml", r60)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/oak/conf/schema.xml", r60) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/oak/conf/solrconfig.xml", r60)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/oak/conf/solrconfig.xml", r60) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : goto [?= $r10 = new java.io.File]
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : goto [?= $r10 = new java.io.File] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r10 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z7 = virtualinvoke $r38.<java.io.File: boolean createNewFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z7 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z7 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r49 = new java.lang.AssertionError
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z7 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r40 = new java.io.FileOutputStream
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r49 = new java.lang.AssertionError >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r49.<java.lang.AssertionError: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r49.<java.lang.AssertionError: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : throw $r49
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r50 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r50.<java.io.IOException: void <init>(java.lang.String)>("could not create nested core directory in solrHomePath/solrCoreName/conf")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r50.<java.io.IOException: void <init>(java.lang.String)>("could not create nested core directory in solrHomePath/solrCoreName/conf") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : throw $r50
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r51 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r52 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r52 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a non directory file with the specified name already exists for the given solrHomePath \'")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a non directory file with the specified name already exists for the given solrHomePath \'") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r51.<java.io.IOException: void <init>(java.lang.String)>($r55)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r51.<java.io.IOException: void <init>(java.lang.String)>($r55) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : throw $r51
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z8 = virtualinvoke $r6.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z8 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z8 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r56 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z8 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/solr.xml", r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/solr.xml", r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/zoo.cfg", r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/zoo.cfg", r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : goto [?= $r9 = new java.io.File]
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : goto [?= $r9 = new java.io.File] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r9 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r56 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r56.<java.io.IOException: void <init>(java.lang.String)>("could not create solrHomePath directory")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r56.<java.io.IOException: void <init>(java.lang.String)>("could not create solrHomePath directory") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : throw $r56
