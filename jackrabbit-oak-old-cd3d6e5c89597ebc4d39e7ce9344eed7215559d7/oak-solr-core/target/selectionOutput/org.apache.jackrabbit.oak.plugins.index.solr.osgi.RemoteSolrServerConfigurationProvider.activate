org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r2 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r3 = virtualinvoke $r2.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.http.url")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r3 = virtualinvoke $r2.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.http.url") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrHttpUrl> = $r4
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrHttpUrl> = $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r5 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r5 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r6 = virtualinvoke $r5.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.zk.host")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r6 = virtualinvoke $r5.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.zk.host") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrZkHost> = $r7
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrZkHost> = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r8 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r8 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r9 = virtualinvoke $r8.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.collection")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r9 = virtualinvoke $r8.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.collection") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrCollection> = $r10
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrCollection> = $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r11 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r11 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r12 = virtualinvoke $r11.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.shards.no")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r12 = virtualinvoke $r11.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.shards.no") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r13)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrShardsNo> = $r14
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrShardsNo> = $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r15 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r15 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r16 = virtualinvoke $r15.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.replication.factor")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r16 = virtualinvoke $r15.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.replication.factor") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r17)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrReplicationFactor> = $r18
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrReplicationFactor> = $r18 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r19 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r19 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r20 = virtualinvoke $r19.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.conf.dir")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r20 = virtualinvoke $r19.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.conf.dir") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrConfDir> = $r21
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrConfDir> = $r21 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r22 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r22 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r23 = virtualinvoke $r22.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.socket.timeout")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r23 = virtualinvoke $r22.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.socket.timeout") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r24)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : i0 = virtualinvoke $r25.<java.lang.Integer: int intValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : i0 = virtualinvoke $r25.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r26 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r26 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r27 = virtualinvoke $r26.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.connection.timeout")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r27 = virtualinvoke $r26.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("solr.connection.timeout") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r28)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r28) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : i1 = virtualinvoke $r29.<java.lang.Integer: int intValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : i1 = virtualinvoke $r29.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r32 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrZkHost>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r32 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrZkHost> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r33 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrCollection>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r33 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrCollection> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r31 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrShardsNo>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r31 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrShardsNo> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $i2 = virtualinvoke $r31.<java.lang.Integer: int intValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $i2 = virtualinvoke $r31.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r34 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrReplicationFactor>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r34 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.Integer solrReplicationFactor> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $i3 = virtualinvoke $r34.<java.lang.Integer: int intValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $i3 = virtualinvoke $r34.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r37 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrConfDir>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r37 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrConfDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r35 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r35 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r36 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrHttpUrl>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r36 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: java.lang.String solrHttpUrl> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r35[0] = $r36
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : $r35[0] = $r36 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : specialinvoke $r30.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,int,int,java.lang.String[])>($r32, $r33, $i2, $i3, $r37, i0, i1, $r35)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : specialinvoke $r30.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,int,int,java.lang.String[])>($r32, $r33, $i2, $i3, $r37, i0, i1, $r35) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> = $r30
org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> = $r30 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider.activate : return
