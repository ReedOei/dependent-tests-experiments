org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : l2 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : if i3 >= 5
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : if i3 >= 5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d0 = (double) l2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : if i3 >= 5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l0 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l2)
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l0 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : return $l0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d0 = (double) l2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $r2 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: double[] weights>
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $r2 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: double[] weights> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d1 = $r2[i3]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d1 = $r2[i3] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: long getInput(org.apache.jackrabbit.oak.spi.query.Filter,int)>(r1, i3)
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: long getInput(org.apache.jackrabbit.oak.spi.query.Filter,int)>(r1, i3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d2 = (double) $l1
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d2 = (double) $l1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d3 = $d1 * $d2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d3 = $d1 * $d2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d4 = $d0 + $d3
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d4 = $d0 + $d3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : l2 = (long) $d4
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : l2 = (long) $d4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = i3 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = i3 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : if i3 >= 5
