org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r3 = new org.apache.solr.client.solrj.impl.CloudSolrClient >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r5 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrZkHost()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r5 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrZkHost()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void <init>(java.lang.String)>($r5)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $i0 = virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getConnectionTimeout()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $i0 = virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getConnectionTimeout()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setZkConnectTimeout(int)>($i0)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setZkConnectTimeout(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $i1 = virtualinvoke $r7.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSocketTimeout()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $i1 = virtualinvoke $r7.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSocketTimeout()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setZkClientTimeout(int)>($i1)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setZkClientTimeout(int)>($i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setIdField(java.lang.String)>("path_exact")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setIdField(java.lang.String)>("path_exact") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: boolean connectToZK(org.apache.solr.client.solrj.impl.CloudSolrClient)>($r3)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: boolean connectToZK(org.apache.solr.client.solrj.impl.CloudSolrClient)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r15 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r8 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r8 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r9 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not connect to Zookeeper hosted at ")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not connect to Zookeeper hosted at ") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r12 = virtualinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrZkHost()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r12 = virtualinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrZkHost()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r14)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : throw $r8
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r15 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>("CloudSolrServer connected")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>("CloudSolrServer connected") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setDefaultCollection(java.lang.String)>("collection1")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setDefaultCollection(java.lang.String)>("collection1") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void createCollectionIfNeeded(org.apache.solr.client.solrj.impl.CloudSolrClient)>($r3)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setDefaultCollection(java.lang.String)>("collection1") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r23 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $z2 = interfaceinvoke $r23.<org.slf4j.Logger: boolean isWarnEnabled()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $z2 = interfaceinvoke $r23.<org.slf4j.Logger: boolean isWarnEnabled()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r28 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r28 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r29 = virtualinvoke $r28.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrCollection()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r29 = virtualinvoke $r28.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrCollection()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setDefaultCollection(java.lang.String)>($r29)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setDefaultCollection(java.lang.String)>($r29) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r30 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r30 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String)>("waiting for CloudSolrServer to come alive")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String)>("waiting for CloudSolrServer to come alive") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : i3 = 0
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : i3 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if i3 >= 3
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if i3 >= 3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : r31 = virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.client.solrj.response.SolrPingResponse ping()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if i3 >= 3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void close()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if i3 >= 3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r18 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r19 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $z1 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r19 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r21 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : i3 = i3 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if i3 >= 3
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $z1 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $z1 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r21 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r20 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : staticinvoke <java.lang.Thread: void sleep(long)>(3000L)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r21 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : staticinvoke <java.lang.Thread: void sleep(long)>(3000L) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : goto [?= i3 = i3 + 1]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : staticinvoke <java.lang.Thread: void sleep(long)>(3000L) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r21 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : goto [?= i3 = i3 + 1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : i3 = i3 + 1
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r20 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("server is not alive yet, wait a bit", $r18)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r20 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r21 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("server is not alive yet, wait a bit", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : staticinvoke <java.lang.Thread: void sleep(long)>(3000L)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("server is not alive yet, wait a bit", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r21 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r16 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r16 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("the found SolrCloud server is not alive")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("the found SolrCloud server is not alive") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : throw $r16
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : r31 = virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.client.solrj.response.SolrPingResponse ping()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if r31 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : r31 = virtualinvoke $r3.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.client.solrj.response.SolrPingResponse ping()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r18 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if r31 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $i2 = virtualinvoke r31.<org.apache.solr.client.solrj.response.SolrPingResponse: int getStatus()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if r31 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r17 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if r31 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r18 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r17 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("the found SolrCloud server is not alive")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r17 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r18 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("the found SolrCloud server is not alive") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : throw $r17
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("the found SolrCloud server is not alive") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r18 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : throw $r17 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r18 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $i2 = virtualinvoke r31.<org.apache.solr.client.solrj.response.SolrPingResponse: int getStatus()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if 0 != $i2
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $i2 = virtualinvoke r31.<org.apache.solr.client.solrj.response.SolrPingResponse: int getStatus()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r18 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if 0 != $i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : return $r3
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : if 0 != $i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r17 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r24 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r24 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r26 = virtualinvoke $r24.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrZkHost()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r26 = virtualinvoke $r24.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrZkHost()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("could not create the collection on {}", $r26, $r22)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("could not create the collection on {}", $r26, $r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r28 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void createCollectionIfNeeded(org.apache.solr.client.solrj.impl.CloudSolrClient)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : goto [?= $r28 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void createCollectionIfNeeded(org.apache.solr.client.solrj.impl.CloudSolrClient)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : goto [?= $r28 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithCloudSolrServer : $r28 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
