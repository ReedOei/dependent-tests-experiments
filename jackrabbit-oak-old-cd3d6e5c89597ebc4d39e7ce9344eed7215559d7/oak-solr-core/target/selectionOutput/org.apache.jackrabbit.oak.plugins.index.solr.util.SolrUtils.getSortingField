org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : lookupswitch(i0) {     case 2: >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r9 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : lookupswitch(i0) {     case 2: >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r5 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : lookupswitch(i0) {     case 2: >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r1 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : lookupswitch(i0) {     case 2: >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r13 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_string_sort")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_string_sort") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : return $r16
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_double_sort")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_double_sort") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : return $r4
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_double_sort")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_double_sort") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : return $r8
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_binary_sort")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_binary_sort") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : return $r12
