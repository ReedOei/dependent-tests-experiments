org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r3 = new org.apache.solr.client.solrj.impl.HttpSolrClient >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r5 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String[] getSolrHttpUrls()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r5 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String[] getSolrHttpUrls()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r6 = $r5[0]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r6 = $r5[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : specialinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: void <init>(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : specialinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $i0 = virtualinvoke $r7.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getConnectionTimeout()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $i0 = virtualinvoke $r7.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getConnectionTimeout()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: void setConnectionTimeout(int)>($i0)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: void setConnectionTimeout(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r8 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r8 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $i1 = virtualinvoke $r8.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSocketTimeout()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $i1 = virtualinvoke $r8.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSocketTimeout()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: void setSoTimeout(int)>($i1)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : virtualinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: void setSoTimeout(int)>($i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : r2 = virtualinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: org.apache.solr.client.solrj.response.SolrPingResponse ping()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : r2 = virtualinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrClient: org.apache.solr.client.solrj.response.SolrPingResponse ping()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : if r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $i2 = virtualinvoke r2.<org.apache.solr.client.solrj.response.SolrPingResponse: int getStatus()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r9 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r9 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("the found HTTP Solr server is not alive")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("the found HTTP Solr server is not alive") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : throw $r9
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $i2 = virtualinvoke r2.<org.apache.solr.client.solrj.response.SolrPingResponse: int getStatus()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : if 0 != $i2
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : if 0 != $i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : return $r3
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : if 0 != $i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.initializeWithExistingHttpServer : $r9 = new java.io.IOException
