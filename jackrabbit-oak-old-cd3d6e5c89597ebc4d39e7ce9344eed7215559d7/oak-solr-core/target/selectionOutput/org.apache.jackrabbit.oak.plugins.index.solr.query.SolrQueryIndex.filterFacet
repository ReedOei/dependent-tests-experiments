org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r8 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.util.Collection getFieldNames()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r9 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r9 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z0 = interfaceinvoke $r8.<java.util.Collection: boolean contains(java.lang.Object)>($r9)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z0 = interfaceinvoke $r8.<java.util.Collection: boolean contains(java.lang.Object)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r10 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : return
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r10 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r3 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.util.Collection getFieldValues(java.lang.String)>($r10)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r3 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.util.Collection getFieldValues(java.lang.String)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if r3 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : return
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : return
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r11 = new java.util.LinkedList
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r11 = new java.util.LinkedList >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : specialinvoke $r11.<java.util.LinkedList: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : specialinvoke $r11.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r12 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.util.List getValues()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r12 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.util.List getValues()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r18 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r18 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r16 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r20 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r20 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z3 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r13 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r13 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r21 = (org.apache.solr.client.solrj.response.FacetField$Count) $r13
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r21 = (org.apache.solr.client.solrj.response.FacetField$Count) $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z4 = <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: boolean $assertionsDisabled>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z4 = <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: boolean $assertionsDisabled> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z4 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r14 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.util.List getValues()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r14 = virtualinvoke r2.<org.apache.solr.client.solrj.response.FacetField: java.util.List getValues()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z5 = interfaceinvoke $r14.<java.util.List: boolean remove(java.lang.Object)>(r21)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z5 = interfaceinvoke $r14.<java.util.List: boolean remove(java.lang.Object)>(r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z5 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z5 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r15 = new java.lang.AssertionError
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z5 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r15 = new java.lang.AssertionError >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : specialinvoke $r15.<java.lang.AssertionError: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : specialinvoke $r15.<java.lang.AssertionError: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : throw $r15
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r16 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r19 = (org.apache.solr.client.solrj.response.FacetField$Count) $r16
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : r19 = (org.apache.solr.client.solrj.response.FacetField$Count) $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : l0 = virtualinvoke r19.<org.apache.solr.client.solrj.response.FacetField$Count: long getCount()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : l0 = virtualinvoke r19.<org.apache.solr.client.solrj.response.FacetField$Count: long getCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r17 = virtualinvoke r19.<org.apache.solr.client.solrj.response.FacetField$Count: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $r17 = virtualinvoke r19.<org.apache.solr.client.solrj.response.FacetField$Count: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r17)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z6 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z6 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $b1 = l0 cmp 1L
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $z6 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $b1 = l0 cmp 1L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $l2 = l0 - 1L
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r19)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : $l2 = l0 - 1L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : virtualinvoke r19.<org.apache.solr.client.solrj.response.FacetField$Count: void setCount(long)>($l2)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : virtualinvoke r19.<org.apache.solr.client.solrj.response.FacetField$Count: void setCount(long)>($l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.filterFacet : goto [?= $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
