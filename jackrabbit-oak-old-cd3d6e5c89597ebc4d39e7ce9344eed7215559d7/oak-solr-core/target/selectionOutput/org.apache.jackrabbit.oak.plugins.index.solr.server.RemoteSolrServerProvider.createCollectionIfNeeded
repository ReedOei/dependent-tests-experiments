org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r2 = virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrCollection()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r2 = virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrCollection()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r3 = virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.common.cloud.ZkStateReader getZkStateReader()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r3 = virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.common.cloud.ZkStateReader getZkStateReader()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r4 = virtualinvoke r3.<org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.SolrZkClient getZkClient()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r4 = virtualinvoke r3.<org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.SolrZkClient getZkClient()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating {} collection if needed", r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating {} collection if needed", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $z0 = virtualinvoke r4.<org.apache.solr.common.cloud.SolrZkClient: boolean isConnected()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating {} collection if needed", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r20 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("could not create collection {}", r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("could not create collection {}", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r21 = new org.apache.solr.client.solrj.SolrServerException
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r21 = new org.apache.solr.client.solrj.SolrServerException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r21.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.Throwable)>($r19)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r21.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.Throwable)>($r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : throw $r21
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $z0 = virtualinvoke r4.<org.apache.solr.common.cloud.SolrZkClient: boolean isConnected()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $z0 = virtualinvoke r4.<org.apache.solr.common.cloud.SolrZkClient: boolean isConnected()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r8 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : goto [?= return]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : return
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/configs/")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/configs/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/configs/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r12 = virtualinvoke r4.<org.apache.solr.common.cloud.SolrZkClient: java.lang.Boolean exists(java.lang.String,boolean)>($r11, 0)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r12 = virtualinvoke r4.<org.apache.solr.common.cloud.SolrZkClient: java.lang.Boolean exists(java.lang.String,boolean)>($r11, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r12 = virtualinvoke r4.<org.apache.solr.common.cloud.SolrZkClient: java.lang.Boolean exists(java.lang.String,boolean)>($r11, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $z1 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r13 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : goto [?= return]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r13 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r22 = virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrConfDir()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r13 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r22 = virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrConfDir()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if r22 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r22 = virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: java.lang.String getSolrConfDir()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if r22 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i0 = virtualinvoke r22.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if r22 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r14 = newarray (java.nio.file.attribute.FileAttribute)[0]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if r22 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r14 = newarray (java.nio.file.attribute.FileAttribute)[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r24 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])>("oak-solr-conf", $r14)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r14 = newarray (java.nio.file.attribute.FileAttribute)[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r24 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])>("oak-solr-conf", $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void copy(java.lang.String,java.nio.file.Path)>("schema", r24)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r24 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])>("oak-solr-conf", $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void copy(java.lang.String,java.nio.file.Path)>("schema", r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void copy(java.lang.String,java.nio.file.Path)>("solrconfig", r24)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void copy(java.lang.String,java.nio.file.Path)>("schema", r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void copy(java.lang.String,java.nio.file.Path)>("solrconfig", r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r15 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: void copy(java.lang.String,java.nio.file.Path)>("solrconfig", r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r15 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("uploading config from {}", r24)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r15 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("uploading config from {}", r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r23 = r24
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("uploading config from {}", r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r23 = r24 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r23 = r24 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("uploading config from {}", r23)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("uploading config from {}", r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: void uploadConfig(java.nio.file.Path,java.lang.String)>(r23, r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("uploading config from {}", r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: void uploadConfig(java.nio.file.Path,java.lang.String)>(r23, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r26 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: void uploadConfig(java.nio.file.Path,java.lang.String)>(r23, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r26 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating collection {}", r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r26 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating collection {}", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r27 = new org.apache.solr.client.solrj.request.CollectionAdminRequest$Create
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating collection {}", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r27 = new org.apache.solr.client.solrj.request.CollectionAdminRequest$Create >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r27.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r27 = new org.apache.solr.client.solrj.request.CollectionAdminRequest$Create >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r27.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r29 = virtualinvoke $r27.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest setCollectionName(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : specialinvoke $r27.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r29 = virtualinvoke $r27.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest setCollectionName(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r30 = (org.apache.solr.client.solrj.request.CollectionAdminRequest$Create) $r29
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r29 = virtualinvoke $r27.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest setCollectionName(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r30 = (org.apache.solr.client.solrj.request.CollectionAdminRequest$Create) $r29 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r31 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r30 = (org.apache.solr.client.solrj.request.CollectionAdminRequest$Create) $r29 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r31 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i1 = virtualinvoke $r31.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSolrReplicationFactor()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r31 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i1 = virtualinvoke $r31.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSolrReplicationFactor()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i1 = virtualinvoke $r31.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSolrReplicationFactor()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r33 = virtualinvoke $r30.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setReplicationFactor(java.lang.Integer)>($r32)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r33 = virtualinvoke $r30.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setReplicationFactor(java.lang.Integer)>($r32) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r34 = virtualinvoke $r33.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setConfigName(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r33 = virtualinvoke $r30.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setReplicationFactor(java.lang.Integer)>($r32) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r34 = virtualinvoke $r33.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setConfigName(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r35 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r34 = virtualinvoke $r33.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setConfigName(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r35 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i2 = virtualinvoke $r35.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSolrShardsNo()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r35 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i2 = virtualinvoke $r35.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSolrShardsNo()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i2 = virtualinvoke $r35.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration: int getSolrShardsNo()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r37 = virtualinvoke $r34.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setNumShards(java.lang.Integer)>($r36)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r37 = virtualinvoke $r34.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setNumShards(java.lang.Integer)>($r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r38 = virtualinvoke $r37.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.SolrResponse process(org.apache.solr.client.solrj.SolrClient)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r37 = virtualinvoke $r34.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.request.CollectionAdminRequest$Create setNumShards(java.lang.Integer)>($r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r38 = virtualinvoke $r37.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.SolrResponse process(org.apache.solr.client.solrj.SolrClient)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r5 = (org.apache.solr.client.solrj.response.CollectionAdminResponse) $r38
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r38 = virtualinvoke $r37.<org.apache.solr.client.solrj.request.CollectionAdminRequest$Create: org.apache.solr.client.solrj.SolrResponse process(org.apache.solr.client.solrj.SolrClient)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r5 = (org.apache.solr.client.solrj.response.CollectionAdminResponse) $r38 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r39 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r5 = (org.apache.solr.client.solrj.response.CollectionAdminResponse) $r38 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r39 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("collection creation response {}", r5)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r39 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("collection creation response {}", r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setParallelUpdates(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("collection creation response {}", r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setParallelUpdates(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest)>($r27)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setParallelUpdates(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest)>($r27) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : goto [?= return]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : virtualinvoke r1.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest)>($r27) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i0 = virtualinvoke r22.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $i0 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $i0 = virtualinvoke r22.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $i0 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r17 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $i0 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r14 = newarray (java.nio.file.attribute.FileAttribute)[0]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : if $i0 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r17 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("uploading config from {}", r22)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r17 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("uploading config from {}", r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r18 = newarray (java.lang.String)[0]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("uploading config from {}", r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r18 = newarray (java.lang.String)[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r23 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r22, $r18)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r18 = newarray (java.lang.String)[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r23 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r22, $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : goto [?= $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>]
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : r23 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r22, $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : goto [?= $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : goto [?= $r25 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider: org.slf4j.Logger log>] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider.createCollectionIfNeeded : $r19 := @caughtexception
