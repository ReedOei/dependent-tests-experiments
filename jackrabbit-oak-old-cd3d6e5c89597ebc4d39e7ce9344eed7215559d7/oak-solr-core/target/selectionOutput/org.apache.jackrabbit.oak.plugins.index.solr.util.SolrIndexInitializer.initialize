org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $z0 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>("oak:index") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r4 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder getChildNode(java.lang.String)>("oak:index")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : return
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r4 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder getChildNode(java.lang.String)>("oak:index") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $z1 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>("solr")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $z1 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>("solr") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z1 != 0
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder getChildNode(java.lang.String)>("oak:index")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : return
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder getChildNode(java.lang.String)>("oak:index") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String name>
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String name> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $z2 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>($r5)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $z2 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z2 != 0
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String name>
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : return
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String name> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : r3 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder child(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : r3 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder child(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r7 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type NAME>
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r7 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type NAME> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r8 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object,org.apache.jackrabbit.oak.api.Type)>("jcr:primaryType", "oak:QueryIndexDefinition", $r7)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r8 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object,org.apache.jackrabbit.oak.api.Type)>("jcr:primaryType", "oak:QueryIndexDefinition", $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r9 = interfaceinvoke $r8.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("type", "solr")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r9 = interfaceinvoke $r8.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("type", "solr") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $z3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: boolean reindex>
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $z3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: boolean reindex> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : interfaceinvoke $r9.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("reindex", $r10)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : interfaceinvoke $r9.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("reindex", $r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r12 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String async>
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r12 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String async> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $r12 == null
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $r12 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r13 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String async>
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : if $r12 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : return
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : $r13 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: java.lang.String async> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("async", $r13)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("async", $r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.initialize : return
