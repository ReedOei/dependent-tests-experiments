org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration val$configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r5 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.lang.Object getFieldValue(java.lang.String)>($r4)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r5 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.lang.Object getFieldValue(java.lang.String)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r6 = ""
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r6 = "" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r13)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r13 = "/"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.lang.String val$parent>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.lang.String val$parent> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z1 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $i0 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: int val$parentDepth>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : f0 = 0.0F
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : f0 = 0.0F >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r2 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.lang.Object get(java.lang.Object)>("score")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r2 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.lang.Object get(java.lang.Object)>("score") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r10 = (java.lang.Float) r2
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.util.Collection facetFields>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.util.Collection facetFields> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow: void <init>(java.lang.String,float,org.apache.solr.common.SolrDocument,java.util.Collection)>(r13, f0, r1, $r9)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow: void <init>(java.lang.String,float,org.apache.solr.common.SolrDocument,java.util.Collection)>(r13, f0, r1, $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : return $r8
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r10 = (java.lang.Float) r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $i0 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: int val$parentDepth> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r13 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: java.lang.String getAncestorPath(java.lang.String,int)>(r13, $i0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r13 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: java.lang.String getAncestorPath(java.lang.String,int)>(r13, $i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.util.Set seenPaths>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.util.Set seenPaths> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r13)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : return null
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r12 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.util.Set seenPaths>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r12 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.util.Set seenPaths> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r13)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : f0 = 0.0F
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : r13 = "/" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2.convertToRow : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$2: java.lang.String val$parent>
