org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r3 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : r2 = virtualinvoke $r3.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("query.aggregation")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : r2 = virtualinvoke $r3.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("query.aggregation") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : z0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: boolean toBoolean(java.lang.Object,boolean)>(r2, 0)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : z0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: boolean toBoolean(java.lang.Object,boolean)>(r2, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider solrServerProvider>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider solrServerProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if $r4 == null
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if $r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if $r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : return
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if $r5 == null
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if $r5 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r6 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if $r5 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : return
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r6 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider solrServerProvider>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider solrServerProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r8 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r8 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.spi.query.QueryIndex$NodeAggregator nodeAggregator>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.apache.jackrabbit.oak.spi.query.QueryIndex$NodeAggregator nodeAggregator> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : specialinvoke $r6.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider,org.apache.jackrabbit.oak.spi.query.QueryIndex$NodeAggregator)>($r9, $r8, $r7)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : specialinvoke $r6.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider,org.apache.jackrabbit.oak.spi.query.QueryIndex$NodeAggregator)>($r9, $r8, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : r17 = $r6
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : r17 = $r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r18 = "with"
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r18 = "without"
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r18 = "without" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating Solr query index provider {} query time aggregation", $r18)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating Solr query index provider {} query time aggregation", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : r17 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.aggregate.AggregateIndexProvider: org.apache.jackrabbit.oak.spi.query.QueryIndexProvider wrap(org.apache.jackrabbit.oak.spi.query.QueryIndexProvider)>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: java.util.List regs>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: java.util.List regs> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r12 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r12 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r13 = class "Lorg/apache/jackrabbit/oak/spi/query/QueryIndexProvider;"
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r13 = class "Lorg/apache/jackrabbit/oak/spi/query/QueryIndexProvider;" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r15 = interfaceinvoke $r12.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String,java.lang.Object,java.util.Dictionary)>($r14, r17, null)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r15 = interfaceinvoke $r12.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String,java.lang.Object,java.util.Dictionary)>($r14, r17, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : return
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : r17 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.aggregate.AggregateIndexProvider: org.apache.jackrabbit.oak.spi.query.QueryIndexProvider wrap(org.apache.jackrabbit.oak.spi.query.QueryIndexProvider)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService: java.util.List regs>
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : $r18 = "with" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : goto [?= interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating Solr query index provider {} query time aggregation", $r18)]
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : goto [?= interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating Solr query index provider {} query time aggregation", $r18)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService.activate : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("creating Solr query index provider {} query time aggregation", $r18)
