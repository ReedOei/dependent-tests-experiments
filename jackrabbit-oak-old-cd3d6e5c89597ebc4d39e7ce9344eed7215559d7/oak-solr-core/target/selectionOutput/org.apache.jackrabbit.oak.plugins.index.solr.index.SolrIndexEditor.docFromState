org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r8 = new org.apache.solr.common.SolrInputDocument >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r8.<org.apache.solr.common.SolrInputDocument: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r8.<org.apache.solr.common.SolrInputDocument: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r10 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r10 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r10, r3)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r10, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r12 = interfaceinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathDepthField()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r12 = interfaceinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathDepthField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: int getDepth(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: int getDepth(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r12, $r13)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r12, $r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z0 = interfaceinvoke $r14.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z0 = interfaceinvoke $r14.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : i7 = virtualinvoke r3.<java.lang.String: int lastIndexOf(java.lang.String)>("jcr:content")
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r39 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r39 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r40 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r40 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z5 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r15 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : return $r8
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r15 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r41 = (org.apache.jackrabbit.oak.api.PropertyState) $r15
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r41 = (org.apache.jackrabbit.oak.api.PropertyState) $r15 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r16 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r16 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r17 = interfaceinvoke $r16.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getUsedProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r17 = interfaceinvoke $r16.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getUsedProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i1 = interfaceinvoke $r17.<java.util.Collection: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i1 = interfaceinvoke $r17.<java.util.Collection: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i1 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r32 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r18 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r18 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r19 = interfaceinvoke $r18.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getIgnoredProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r19 = interfaceinvoke $r18.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getIgnoredProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r20 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r20 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z1 = interfaceinvoke $r19.<java.util.Collection: boolean contains(java.lang.Object)>($r20)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z1 = interfaceinvoke $r19.<java.util.Collection: boolean contains(java.lang.Object)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z1 != 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r21 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r21 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r22 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r22 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke $r21.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldNameFor(org.apache.jackrabbit.oak.api.Type)>($r22)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke $r21.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldNameFor(org.apache.jackrabbit.oak.api.Type)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r42 == null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r42 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r31 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r42 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r23 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r23 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i2 = virtualinvoke $r23.<org.apache.jackrabbit.oak.api.Type: int tag()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i2 = virtualinvoke $r23.<org.apache.jackrabbit.oak.api.Type: int tag()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r24 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r24 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i3 = virtualinvoke $r24.<org.apache.jackrabbit.oak.api.Type: int tag()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i3 = virtualinvoke $r24.<org.apache.jackrabbit.oak.api.Type: int tag()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i2 != $i3
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i2 != $i3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.util.List extractTextValues(org.apache.jackrabbit.oak.api.PropertyState,org.apache.jackrabbit.oak.spi.state.NodeState)>(r41, r1)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i2 != $i3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z2 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: boolean isArray()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z2 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: boolean isArray()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r30 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRINGS>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r25 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r25 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r25)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r25) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z6 = r43 instanceof java.lang.Iterable
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z6 = r43 instanceof java.lang.Iterable >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z6 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z6 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r4 = (java.lang.Iterable) r43
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z6 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r26 = virtualinvoke r43.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r26 = virtualinvoke r43.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i4 = virtualinvoke $r26.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i4 = virtualinvoke $r26.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i4 <= 1024
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i4 <= 1024 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r27 = virtualinvoke r43.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i4 <= 1024 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r43
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r43 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i9 = virtualinvoke $r46.<org.apache.jackrabbit.oak.api.Type: int tag()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i9 = virtualinvoke $r46.<org.apache.jackrabbit.oak.api.Type: int tag()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r47 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r47 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r48 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.String getSortingField(int,java.lang.String)>($i9, $r47)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r48 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.String getSortingField(int,java.lang.String)>($i9, $r47) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r48, r45)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r48, r45) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r27 = virtualinvoke r43.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = virtualinvoke $r27.<java.lang.String: java.lang.String substring(int,int)>(0, 1024)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = virtualinvoke $r27.<java.lang.String: java.lang.String substring(int,int)>(0, 1024) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r4 = (java.lang.Iterable) r43 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r28 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r6 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r6 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z3 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r44 != null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r44 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r44 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r44
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r44 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r44
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i5 = virtualinvoke $r28.<java.lang.StringBuilder: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i5 = virtualinvoke $r28.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i5 <= 1024
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i5 <= 1024 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, 1024)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i5 <= 1024 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, 1024) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r44 != null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r30 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRINGS> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r30)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.util.List extractTextValues(org.apache.jackrabbit.oak.api.PropertyState,org.apache.jackrabbit.oak.spi.state.NodeState)>(r41, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r31 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r31)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r32 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r33 = interfaceinvoke $r32.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getUsedProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r33 = interfaceinvoke $r32.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getUsedProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r34 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r34 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z4 = interfaceinvoke $r33.<java.util.Collection: boolean contains(java.lang.Object)>($r34)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z4 = interfaceinvoke $r33.<java.util.Collection: boolean contains(java.lang.Object)>($r34) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z4 != 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r18 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r21 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : i7 = virtualinvoke r3.<java.lang.String: int lastIndexOf(java.lang.String)>("jcr:content") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if i7 < 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if i7 < 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r35 = "jcr:content"
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if i7 < 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r39 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r35 = "jcr:content" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i6 = virtualinvoke $r35.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i6 = virtualinvoke $r35.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : i8 = i7 + $i6
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : i8 = i7 + $i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r38 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i8)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r38 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i8) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r36 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r36 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r37 = interfaceinvoke $r36.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCollapsedPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r37 = interfaceinvoke $r36.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCollapsedPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r37, r38)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r37, r38) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r39 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>()
