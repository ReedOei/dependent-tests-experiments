org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("usedProperties") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if r1 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : $r4 = new java.util.LinkedList
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : return r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : $r4 = new java.util.LinkedList >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : specialinvoke $r4.<java.util.LinkedList: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : specialinvoke $r4.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = $r4
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : goto [?= return r6]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : goto [?= return r6] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : return r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r3 = (java.lang.String) $r5
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>(r3)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
