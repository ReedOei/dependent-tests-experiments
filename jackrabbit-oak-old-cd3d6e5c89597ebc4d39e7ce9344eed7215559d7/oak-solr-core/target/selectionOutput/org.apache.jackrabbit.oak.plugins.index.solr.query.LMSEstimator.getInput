org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z0 = <org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: boolean $assertionsDisabled> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 < 5
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r10 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 1
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z1 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: boolean containsNativeConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 3
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r4 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 4
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r3 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l9 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l9 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l9
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r3 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i1 = virtualinvoke $r3.<org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression: int getPrecedence()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i1 = virtualinvoke $r3.<org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression: int getPrecedence()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l9 = (long) $i1
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l9 = (long) $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l9]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l9] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l9
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r4 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r4 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r5 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l8 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l8 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l8
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r5 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r6 = virtualinvoke $r5.<org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r6 = virtualinvoke $r5.<org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i2 = lengthof $r7
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i2 = lengthof $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l8 = (long) $i2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l8 = (long) $i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l8]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l8] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l8
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r8 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r8 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r9 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r8 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l7 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l7 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l7
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r9 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i3 = virtualinvoke $r9.<org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: int ordinal()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i3 = virtualinvoke $r9.<org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: int ordinal()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l7 = (long) $i3
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l7 = (long) $i3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l7]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l7] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l7
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z1 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: boolean containsNativeConstraint()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l6 = 1L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l6 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l6 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l6
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l6 = 1L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l6]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l6] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l6
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r10 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r10 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r10 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r10 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l5 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l5 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l5
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i4 = interfaceinvoke $r11.<java.util.Collection: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i4 = interfaceinvoke $r11.<java.util.Collection: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l5 = (long) $i4
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l5 = (long) $i4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l5]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l5] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l5
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 < 5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r12 = new java.lang.AssertionError
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 < 5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r12 = new java.lang.AssertionError >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : specialinvoke $r12.<java.lang.AssertionError: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : specialinvoke $r12.<java.lang.AssertionError: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : throw $r12
