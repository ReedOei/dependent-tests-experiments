org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : $r2 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : $r3 = virtualinvoke $r2.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("server.type")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : $r3 = virtualinvoke $r2.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("server.type") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType> = $r4
org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService: java.lang.String serverType> = $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService.activate : return
