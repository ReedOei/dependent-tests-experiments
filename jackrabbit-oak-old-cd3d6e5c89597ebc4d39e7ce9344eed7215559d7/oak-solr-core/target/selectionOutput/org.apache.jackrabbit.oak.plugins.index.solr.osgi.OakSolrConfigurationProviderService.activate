org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r2 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r3 = virtualinvoke $r2.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.child.field")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r3 = virtualinvoke $r2.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.child.field") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathChildrenFieldName> = $r4
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathChildrenFieldName> = $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r5 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r5 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r6 = virtualinvoke $r5.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.parent.field")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r6 = virtualinvoke $r5.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.parent.field") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathParentFieldName> = $r7
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathParentFieldName> = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r8 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r8 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r9 = virtualinvoke $r8.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.exact.field")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r9 = virtualinvoke $r8.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.exact.field") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathExactFieldName> = $r10
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathExactFieldName> = $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r11 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r11 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r12 = virtualinvoke $r11.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("collapsed.path.field")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r12 = virtualinvoke $r11.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("collapsed.path.field") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String collapsedPathField> = $r13
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String collapsedPathField> = $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r14 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r14 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r15 = virtualinvoke $r14.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.desc.field")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r15 = virtualinvoke $r14.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.desc.field") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathDescendantsFieldName> = $r16
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String pathDescendantsFieldName> = $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r17 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r17 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r18 = virtualinvoke $r17.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("catch.all.field")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r18 = virtualinvoke $r17.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("catch.all.field") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String catchAllField> = $r19
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String catchAllField> = $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r20 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r20 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r21 = virtualinvoke $r20.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.depth.field")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r21 = virtualinvoke $r20.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.depth.field") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String depthField> = $r22
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String depthField> = $r22 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r23 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r23 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r24 = virtualinvoke $r23.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("rows")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r24 = virtualinvoke $r23.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("rows") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: int rows> = $i0
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: int rows> = $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r26 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r26 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r27 = virtualinvoke $r26.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("commit.policy")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r27 = virtualinvoke $r26.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("commit.policy") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r29 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration$CommitPolicy: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration$CommitPolicy valueOf(java.lang.String)>($r28)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r29 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration$CommitPolicy: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration$CommitPolicy valueOf(java.lang.String)>($r28) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration$CommitPolicy commitPolicy> = $r29
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration$CommitPolicy commitPolicy> = $r29 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r30 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r30 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r31 = virtualinvoke $r30.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.restrictions")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r31 = virtualinvoke $r30.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("path.restrictions") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r31)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r32)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r32) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z0 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z0 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean useForPathRestrictions> = $z0
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean useForPathRestrictions> = $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r34 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r34 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r35 = virtualinvoke $r34.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("property.restrictions")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r35 = virtualinvoke $r34.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("property.restrictions") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r35)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r35) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r36)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z1 = virtualinvoke $r37.<java.lang.Boolean: boolean booleanValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z1 = virtualinvoke $r37.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean useForPropertyRestrictions> = $z1
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean useForPropertyRestrictions> = $z1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r38 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r38 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r39 = virtualinvoke $r38.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("primarytypes.restrictions")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r39 = virtualinvoke $r38.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("primarytypes.restrictions") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r39)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r39) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r40)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r40) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z2 = virtualinvoke $r41.<java.lang.Boolean: boolean booleanValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z2 = virtualinvoke $r41.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean useForPrimaryTypes> = $z2
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean useForPrimaryTypes> = $z2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r42 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r42 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r43 = virtualinvoke $r42.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("type.mappings")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r43 = virtualinvoke $r42.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("type.mappings") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r44 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r43)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r44 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r43) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] typeMappings> = $r44
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] typeMappings> = $r44 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r45 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r45 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r46 = virtualinvoke $r45.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("ignored.properties")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r46 = virtualinvoke $r45.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("ignored.properties") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r47 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r46)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r47 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r46) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] ignoredProperties> = $r47
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] ignoredProperties> = $r47 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r48 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r48 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r49 = virtualinvoke $r48.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("used.properties")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r49 = virtualinvoke $r48.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("used.properties") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r50 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r49)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r50 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r49) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] usedProperties> = $r50
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] usedProperties> = $r50 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r51 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r51 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r52 = virtualinvoke $r51.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("property.mappings")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r52 = virtualinvoke $r51.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("property.mappings") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r53 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r52)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r53 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String[] toStringArray(java.lang.Object)>($r52) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] propertyMappings> = $r53
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: java.lang.String[] propertyMappings> = $r53 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r54 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r54 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r55 = virtualinvoke $r54.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("collapse.jcrcontent.nodes")
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r55 = virtualinvoke $r54.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("collapse.jcrcontent.nodes") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r56 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r55)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r56 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r55) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r56)
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $r57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r56) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z3 = virtualinvoke $r57.<java.lang.Boolean: boolean booleanValue()>()
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : $z3 = virtualinvoke $r57.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean collapseJcrContentNodes> = $z3
org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : r0.<org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService: boolean collapseJcrContentNodes> = $z3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService.activate : return
