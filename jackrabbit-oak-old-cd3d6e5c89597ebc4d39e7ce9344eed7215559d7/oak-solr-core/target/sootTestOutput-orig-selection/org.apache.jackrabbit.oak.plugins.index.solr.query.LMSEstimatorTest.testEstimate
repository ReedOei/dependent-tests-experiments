org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : l2 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : if i3 >= 5
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : if i3 >= 5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d0 = (double) l2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d0 = (double) l2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $r2 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: double[] weights>
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $r2 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: double[] weights> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d1 = $r2[i3]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d1 = $r2[i3] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: long getInput(org.apache.jackrabbit.oak.spi.query.Filter,int)>(r1, i3)
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: long getInput(org.apache.jackrabbit.oak.spi.query.Filter,int)>(r1, i3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z0 = <org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: boolean $assertionsDisabled>
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z0 = <org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: boolean $assertionsDisabled> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r10 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r10 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r10 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r10 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i4 = interfaceinvoke $r11.<java.util.Collection: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $i4 = interfaceinvoke $r11.<java.util.Collection: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l5 = (long) $i4
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l5 = (long) $i4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l5]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : goto [?= return $l5] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l5
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d2 = (double) $l1
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d2 = (double) $l1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d3 = $d1 * $d2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d3 = $d1 * $d2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d4 = $d0 + $d3
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d4 = $d0 + $d3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : l2 = (long) $d4
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : l2 = (long) $d4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = i3 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = i3 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 1
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z1 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: boolean containsNativeConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z1 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: boolean containsNativeConstraint()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l6 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l6 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l6
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r8 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r8 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l7 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l7 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l7
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 3
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r4 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r4 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r4 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l8 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l8 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l8
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l8 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 4
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if $r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l9 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $l9 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l9
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : return $l9 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l0 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l2)
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l0 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : return $l0
