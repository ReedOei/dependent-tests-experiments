org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r4 = new org.apache.jackrabbit.oak.Oak
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r4 = new org.apache.jackrabbit.oak.Oak >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r4.<org.apache.jackrabbit.oak.Oak: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r4.<org.apache.jackrabbit.oak.Oak: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r5 = new org.apache.jackrabbit.oak.InitialContent
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r5 = new org.apache.jackrabbit.oak.InitialContent >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r5.<org.apache.jackrabbit.oak.InitialContent: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r5.<org.apache.jackrabbit.oak.InitialContent: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r6 = virtualinvoke $r4.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.lifecycle.RepositoryInitializer)>($r5)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r6 = virtualinvoke $r4.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.lifecycle.RepositoryInitializer)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r7 = new org.apache.jackrabbit.oak.spi.security.OpenSecurityProvider
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r7 = new org.apache.jackrabbit.oak.spi.security.OpenSecurityProvider >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r7.<org.apache.jackrabbit.oak.spi.security.OpenSecurityProvider: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r7.<org.apache.jackrabbit.oak.spi.security.OpenSecurityProvider: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r8 = virtualinvoke $r6.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.security.SecurityProvider)>($r7)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r8 = virtualinvoke $r6.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.security.SecurityProvider)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider)>($r2, $r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider)>($r2, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r10 = virtualinvoke $r8.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.query.QueryIndexProvider)>($r9)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r10 = virtualinvoke $r8.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.query.QueryIndexProvider)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r11 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r11 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider)>($r2, $r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : specialinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider)>($r2, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r12 = virtualinvoke $r10.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider)>($r11)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r12 = virtualinvoke $r10.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r13 = virtualinvoke $r12.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.api.ContentRepository createContentRepository()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : $r13 = virtualinvoke $r12.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.api.ContentRepository createContentRepository()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r20 = null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r20 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r8 = "solr"
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r8 = "solr" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : return r20
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : return r20 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : return $r13
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createRepository : return $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.apache.jackrabbit.oak.api.Root root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.apache.jackrabbit.oak.api.Root root> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : r1 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.api.Root: org.apache.jackrabbit.oak.api.Tree getTree(java.lang.String)>("/")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : r1 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.api.Root: org.apache.jackrabbit.oak.api.Tree getTree(java.lang.String)>("/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.apache.jackrabbit.oak.api.Tree createTestIndexNode(org.apache.jackrabbit.oak.api.Tree,java.lang.String)>(r1, "solr")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.apache.jackrabbit.oak.api.Tree createTestIndexNode(org.apache.jackrabbit.oak.api.Tree,java.lang.String)>(r1, "solr") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("pathRestrictions", $r5)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("pathRestrictions", $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("propertyRestrictions", $r6)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("propertyRestrictions", $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("primaryTypes", $r7)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("primaryTypes", $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("commitPolicy", "hard")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("commitPolicy", "hard") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : r3 = interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: org.apache.jackrabbit.oak.api.Tree addChild(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : r3 = interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Tree: org.apache.jackrabbit.oak.api.Tree addChild(java.lang.String)>("server") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("solrServerType", "embedded")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("solrServerType", "embedded") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r8 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target/")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.junit.rules.TestName name>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.junit.rules.TestName name> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r11 = virtualinvoke $r10.<org.junit.rules.TestName: java.lang.String getMethodName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r11 = virtualinvoke $r10.<org.junit.rules.TestName: java.lang.String getMethodName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("solrHomePath", $r13)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("solrHomePath", $r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.apache.jackrabbit.oak.api.Root root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT: org.apache.jackrabbit.oak.api.Root root> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke $r14.<org.apache.jackrabbit.oak.api.Root: void commit()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexIT.createTestIndexNode : interfaceinvoke $r14.<org.apache.jackrabbit.oak.api.Root: void commit()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $z1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: boolean isPersistedConfiguration(org.apache.jackrabbit.oak.spi.state.NodeBuilder)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $z1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: boolean isPersistedConfiguration(org.apache.jackrabbit.oak.spi.state.NodeBuilder)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.isPersistedConfiguration : $z0 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.isPersistedConfiguration : $z0 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>("server") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.isPersistedConfiguration : return $z0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.isPersistedConfiguration : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r21 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r21 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r12 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r12 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: void <init>(org.apache.jackrabbit.oak.spi.state.NodeState)>(r21)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: void <init>(org.apache.jackrabbit.oak.spi.state.NodeState)>(r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r14 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder getChildNode(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r14 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder getChildNode(java.lang.String)>("server") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r15 = interfaceinvoke $r14.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r15 = interfaceinvoke $r14.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: void <init>(org.apache.jackrabbit.oak.spi.state.NodeState)>($r15)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: void <init>(org.apache.jackrabbit.oak.spi.state.NodeState)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : specialinvoke $r16.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider)>($r13)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : specialinvoke $r16.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrServerType", null)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrServerType", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r7 = r2
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r7 = r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: org.apache.jackrabbit.oak.spi.state.NodeState nodeState>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: org.apache.jackrabbit.oak.spi.state.NodeState nodeState> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r3 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r3 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : if r3 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r5 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r5 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r6 = interfaceinvoke r3.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r5)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r6 = interfaceinvoke r3.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r7 = (java.lang.String) $r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r7 = (java.lang.String) $r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : return r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r3 = "embedded"
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r3 = "embedded" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r16 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrHomePath", "solr")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r16 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrHomePath", "solr") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("coreName", "oak")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("coreName", "oak") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r18 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrContext", null)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r18 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrContext", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r12 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("httpPort", "0")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r12 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("httpPort", "0") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : if r18 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : if r18 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: void <init>(java.lang.String,java.lang.String)>(r16, r17)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: void <init>(java.lang.String,java.lang.String)>(r16, r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : return $r13
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : return $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $r5 != null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $r5 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $z0 = $r10 instanceof java.lang.Class
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $z0 = $r10 instanceof java.lang.Class >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r24 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r24 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r25 = (java.lang.Class) $r24
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r25 = (java.lang.Class) $r24 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : goto [?= r1 = $r25]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : goto [?= r1 = $r25] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r1 = $r25
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r1 = $r25 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r2 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r2 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : i0 = lengthof r2
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : i0 = lengthof r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : i2 = 0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : i2 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if i2 >= i0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if i2 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r4 = r2[i2]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r4 = r2[i2] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r20 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r20 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $i1 = lengthof $r20
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $i1 = lengthof $r20 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $i1 != 1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $i1 != 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r21 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r21 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r22 = $r21[0]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r22 = $r21[0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r23 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r23 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $z1 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r23)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $z1 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor> = r4
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor> = r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : i2 = i2 + 1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : i2 = i2 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $r14 != null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : if $r14 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r6 = newarray (java.lang.Object)[1]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r6 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r6[0] = r0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r6[0] = r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r8 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r8 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r9 = (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) $r8
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r9 = (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : return $r9
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : return $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r20 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor getEditor(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.solr.client.solrj.SolrClient,org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback)>($r12, $r16, r4)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r20 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor getEditor(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.solr.client.solrj.SolrClient,org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback)>($r12, $r16, r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : r11 = null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : r11 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : if r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : $r7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : $r7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: void <init>(org.apache.solr.client.solrj.SolrClient,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback)>(r2, r1, r3)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: void <init>(org.apache.solr.client.solrj.SolrClient,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback)>(r2, r1, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : r11 = $r7
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : r11 = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : goto [?= return r11]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : goto [?= return r11] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : return r11
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : return r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : goto [?= return r20]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : goto [?= return r20] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.propertyAdded : r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: boolean propertiesChanged> = 1
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.propertyAdded : r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: boolean propertiesChanged> = 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.childNodeAdded : $r3 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.childNodeAdded : $r3 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.childNodeAdded : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor,java.lang.String)>(r0, r1)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.childNodeAdded : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: void <init>(org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor,java.lang.String)>(r0, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.childNodeAdded : return $r3
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.childNodeAdded : return $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $z0 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: boolean propertiesChanged>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $z0 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: boolean propertiesChanged> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : if $z0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback updateCallback>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback updateCallback> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : interfaceinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback: void indexUpdate()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : interfaceinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback: void indexUpdate()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.solr.client.solrj.SolrClient solrServer>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.solr.client.solrj.SolrClient solrServer> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r5 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.solr.common.SolrInputDocument docFromState(org.apache.jackrabbit.oak.spi.state.NodeState)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r5 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.solr.common.SolrInputDocument docFromState(org.apache.jackrabbit.oak.spi.state.NodeState)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r8 = new org.apache.solr.common.SolrInputDocument
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r8 = new org.apache.solr.common.SolrInputDocument >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r8.<org.apache.solr.common.SolrInputDocument: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r8.<org.apache.solr.common.SolrInputDocument: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : if $r1 != null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : if $r1 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor parent>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor parent> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r2 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r2 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : return $r2
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String name>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String name> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r6 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: java.lang.String concat(java.lang.String,java.lang.String)>($r4, $r5)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r6 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: java.lang.String concat(java.lang.String,java.lang.String)>($r4, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path> = $r6
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path> = $r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r10 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r10 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathField : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("pathField", "path_exact")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathField : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("pathField", "path_exact") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : r7 = r2
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : r7 = r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : r3 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : r3 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : if r3 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : return r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathField : return $r1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathField : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r10, r3)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r10, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r12 = interfaceinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathDepthField()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r12 = interfaceinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathDepthField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathDepthField : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("depthField", "path_depth")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathDepthField : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("depthField", "path_depth") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathDepthField : return $r1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathDepthField : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: int getDepth(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: int getDepth(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r12, $r13)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r12, $r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z0 = interfaceinvoke $r14.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z0 = interfaceinvoke $r14.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean collapseJcrContentNodes()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.collapseJcrContentNodes : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: boolean getBooleanValueFor(java.lang.String,boolean)>("collapseJcrContentNodes", 0)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.collapseJcrContentNodes : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: boolean getBooleanValueFor(java.lang.String,boolean)>("collapseJcrContentNodes", 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : z1 = z0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : z1 = z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : r2 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : r2 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : if r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : return z1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : return z1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.collapseJcrContentNodes : return $z0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.collapseJcrContentNodes : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r39 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r39 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r40 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r40 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z5 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r15 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r15 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r41 = (org.apache.jackrabbit.oak.api.PropertyState) $r15
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r41 = (org.apache.jackrabbit.oak.api.PropertyState) $r15 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r16 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r16 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r17 = interfaceinvoke $r16.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getUsedProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r17 = interfaceinvoke $r16.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getUsedProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("usedProperties")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("usedProperties") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : r6 = null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : r6 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : r2 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : r2 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : if r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : return r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : return r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if r1 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : return r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : return r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i1 = interfaceinvoke $r17.<java.util.Collection: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i1 = interfaceinvoke $r17.<java.util.Collection: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i1 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r18 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r18 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r19 = interfaceinvoke $r18.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getIgnoredProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r19 = interfaceinvoke $r18.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getIgnoredProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("ignoredProperties")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("ignoredProperties") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : if r1 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r6 = <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults: java.util.Collection IGNORED_PROPERTIES>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r6 = <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults: java.util.Collection IGNORED_PROPERTIES> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : return r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : return r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r20 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r20 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z1 = interfaceinvoke $r19.<java.util.Collection: boolean contains(java.lang.Object)>($r20)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z1 = interfaceinvoke $r19.<java.util.Collection: boolean contains(java.lang.Object)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z1 != 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r21 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r21 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r22 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r22 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke $r21.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldNameFor(org.apache.jackrabbit.oak.api.Type)>($r22)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke $r21.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getFieldNameFor(org.apache.jackrabbit.oak.api.Type)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : r2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("typeMappings")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : r2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("typeMappings") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : if r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : return null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : return null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r42 == null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r42 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r23 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r23 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i2 = virtualinvoke $r23.<org.apache.jackrabbit.oak.api.Type: int tag()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i2 = virtualinvoke $r23.<org.apache.jackrabbit.oak.api.Type: int tag()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r24 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r24 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i3 = virtualinvoke $r24.<org.apache.jackrabbit.oak.api.Type: int tag()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i3 = virtualinvoke $r24.<org.apache.jackrabbit.oak.api.Type: int tag()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i2 != $i3
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i2 != $i3 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z2 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: boolean isArray()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z2 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: boolean isArray()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r25 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r25 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r25)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r25) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z6 = r43 instanceof java.lang.Iterable
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z6 = r43 instanceof java.lang.Iterable >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z6 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z6 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r26 = virtualinvoke r43.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r26 = virtualinvoke r43.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i4 = virtualinvoke $r26.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i4 = virtualinvoke $r26.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i4 <= 1024
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i4 <= 1024 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r43
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r43 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i9 = virtualinvoke $r46.<org.apache.jackrabbit.oak.api.Type: int tag()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i9 = virtualinvoke $r46.<org.apache.jackrabbit.oak.api.Type: int tag()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r47 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r47 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r48 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.String getSortingField(int,java.lang.String)>($i9, $r47)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r48 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils: java.lang.String getSortingField(int,java.lang.String)>($i9, $r47) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : lookupswitch(i0) {     case 2:
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : lookupswitch(i0) {     case 2: >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r13 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_string_sort")
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_string_sort") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : return $r16
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : return $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r48, r45)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>($r48, r45) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r30 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRINGS>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r30 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRINGS> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r30)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r43 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r4 = (java.lang.Iterable) r43
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r4 = (java.lang.Iterable) r43 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r28 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r6 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r6 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z3 == 0
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i5 = virtualinvoke $r28.<java.lang.StringBuilder: int length()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $i5 = virtualinvoke $r28.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i5 <= 1024
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if $i5 <= 1024 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r44 != null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r44 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r44 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r44
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r44 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : return $r8
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : return $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : virtualinvoke $r4.<org.apache.solr.client.solrj.SolrClient: org.apache.solr.client.solrj.response.UpdateResponse add(org.apache.solr.common.SolrInputDocument)>($r5)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : virtualinvoke $r4.<org.apache.solr.client.solrj.SolrClient: org.apache.solr.client.solrj.response.UpdateResponse add(org.apache.solr.common.SolrInputDocument)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.solr.client.solrj.SolrClient getServer(org.apache.solr.client.solrj.SolrRequest)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.solr.client.solrj.SolrClient getServer(org.apache.solr.client.solrj.SolrRequest)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r3 = virtualinvoke r1.<org.apache.solr.client.solrj.SolrRequest: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r3 = virtualinvoke r1.<org.apache.solr.client.solrj.SolrRequest: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("/update")
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("/update") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r14 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy INDEXING>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r14 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy INDEXING> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : goto [?= r2 = $r14]
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : goto [?= r2 = $r14] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : r2 = $r14
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : r2 = $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : r15 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: org.apache.solr.client.solrj.SolrClient get(org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration,org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy)>($r4, $r14)
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : r15 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: org.apache.solr.client.solrj.SolrClient get(org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration,org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy)>($r4, $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r4 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$1: int[] $SwitchMap$org$apache$jackrabbit$oak$plugins$index$solr$server$SolrServerRegistry$Strategy>
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r4 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$1: int[] $SwitchMap$org$apache$jackrabbit$oak$plugins$index$solr$server$SolrServerRegistry$Strategy> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : $r0 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy[] $VALUES>
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : $r0 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy[] $VALUES> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : $r2 = (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy[]) $r1
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : $r2 = (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy[]) $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : return $r2
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy.values : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $i0 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: int ordinal()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $i0 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: int ordinal()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $i1 = $r4[$i0]
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $i1 = $r4[$i0] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : lookupswitch($i1) {     case 1:
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r10 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: java.util.Map indexingServerRegistry>
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r10 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: java.util.Map indexingServerRegistry> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : entermonitor $r10
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : entermonitor $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r11 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: java.util.Map indexingServerRegistry>
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r11 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: java.util.Map indexingServerRegistry> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r12 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r12 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r1 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EmbeddedSolrServerConfiguration{solrHomePath=\'")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EmbeddedSolrServerConfiguration{solrHomePath=\'") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String solrHomePath>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String solrHomePath> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", coreName=\'")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", coreName=\'") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String coreName>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String coreName> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpConfiguration=")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpConfiguration=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration$HttpConfiguration httpConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration$HttpConfiguration httpConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : return $r14
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : return $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12)
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r14 = (org.apache.solr.client.solrj.SolrClient) $r13
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r14 = (org.apache.solr.client.solrj.SolrClient) $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : exitmonitor $r10
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : exitmonitor $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : return $r14
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : return $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if r15 != null
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if r15 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $z1 = $r5 instanceof org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $z1 = $r5 instanceof org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider solrServerProvider>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider solrServerProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : r15 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider: org.apache.solr.client.solrj.SolrClient getSolrServer()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : r15 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider: org.apache.solr.client.solrj.SolrClient getSolrServer()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.getSolrServer : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.solr.client.solrj.SolrClient createSolrServer()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.getSolrServer : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.solr.client.solrj.SolrClient createSolrServer()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r8 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r8 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("creating new embedded solr server with config: {}", $r7)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("creating new embedded solr server with config: {}", $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : r1 = virtualinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String getSolrHomePath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : r1 = virtualinvoke $r9.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String getSolrHomePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getSolrHomePath : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String solrHomePath>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getSolrHomePath : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String solrHomePath> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getSolrHomePath : return $r1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getSolrHomePath : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : r2 = virtualinvoke $r10.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String getCoreName()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : r2 = virtualinvoke $r10.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String getCoreName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getCoreName : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String coreName>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getCoreName : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String coreName> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getCoreName : return $r1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getCoreName : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : r3 = virtualinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration$HttpConfiguration getHttpConfiguration()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : r3 = virtualinvoke $r11.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration$HttpConfiguration getHttpConfiguration()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getHttpConfiguration : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration$HttpConfiguration httpConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getHttpConfiguration : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration$HttpConfiguration httpConfiguration> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getHttpConfiguration : return $r1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getHttpConfiguration : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : if r1 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : if r1 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : if r2 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void checkSolrConfiguration(java.lang.String,java.lang.String)>(r1, r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void checkSolrConfiguration(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r6 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r6 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r8 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r8 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("checking configuration at {}", $r8)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("checking configuration at {}", $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z0 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z1 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z1 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z1 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r9 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r9 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z2 = virtualinvoke $r9.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z2 = virtualinvoke $r9.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z2 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r37 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r37 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r37.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "conf")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r37.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "conf") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z5 = virtualinvoke $r37.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z5 = virtualinvoke $r37.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z5 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z5 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r57 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r57 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r38 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r38 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r39 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r39 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r39.<java.io.File: void <init>(java.lang.String)>(r57)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r39.<java.io.File: void <init>(java.lang.String)>(r57) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r38.<java.io.File: void <init>(java.io.File,java.lang.String)>($r39, "core.properties")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r38.<java.io.File: void <init>(java.io.File,java.lang.String)>($r39, "core.properties") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z6 = <org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: boolean $assertionsDisabled>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z6 = <org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: boolean $assertionsDisabled> >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z6 != 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : if $z6 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r40 = new java.io.FileOutputStream
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r40 = new java.io.FileOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.io.File)>($r38)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.io.File)>($r38) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r41 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r41 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r45 = virtualinvoke $r44.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r45 = virtualinvoke $r44.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void writeBytes(java.io.OutputStream,byte[])>($r40, $r45)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void writeBytes(java.io.OutputStream,byte[])>($r40, $r45) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void flush()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void close()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : virtualinvoke $r40.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r46 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r46 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/conf/")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/conf/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r60 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : r60 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/oak/conf/schema.xml", r60)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/oak/conf/schema.xml", r60) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r6 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r10 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r10 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $z0 = virtualinvoke $r10.<java.io.File: boolean createNewFile()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $z0 = virtualinvoke $r10.<java.io.File: boolean createNewFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r18 = null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r18 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r19 = null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r19 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r18 = virtualinvoke $r11.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r18 = virtualinvoke $r11.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r12 = new java.io.FileOutputStream
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r12 = new java.io.FileOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>($r10)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r19 = $r12
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r19 = $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r18, $r12)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r18, $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : if r18 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : if r18 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : if r19 == null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : if r19 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : virtualinvoke r19.<java.io.FileOutputStream: void close()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : virtualinvoke r19.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : goto [?= throw $r16]
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : goto [?= throw $r16] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : throw $r16
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : throw $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : $r5 = new org.apache.solr.client.solrj.SolrServerException
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : $r5 = new org.apache.solr.client.solrj.SolrServerException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : specialinvoke $r5.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.Throwable)>($r4)
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : specialinvoke $r5.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.Throwable)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : throw $r5
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : throw $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r18 = new org.apache.jackrabbit.oak.api.CommitFailedException
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r18 = new org.apache.jackrabbit.oak.api.CommitFailedException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : specialinvoke $r18.<org.apache.jackrabbit.oak.api.CommitFailedException: void <init>(java.lang.String,int,java.lang.String,java.lang.Throwable)>("Solr", 2, "Failed to add a document to Solr", $r17)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : specialinvoke $r18.<org.apache.jackrabbit.oak.api.CommitFailedException: void <init>(java.lang.String,int,java.lang.String,java.lang.Throwable)>("Solr", 2, "Failed to add a document to Solr", $r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : throw $r18
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : throw $r18 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r2 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r2 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r3 = class "Lorg/apache/jackrabbit/oak/plugins/index/solr/TestUtils;"
org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r3 = class "Lorg/apache/jackrabbit/oak/plugins/index/solr/TestUtils;" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r4 = virtualinvoke $r3.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/solr")
org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r4 = virtualinvoke $r3.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/solr") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r5 = virtualinvoke $r4.<java.net.URL: java.net.URI toURI()>()
org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r5 = virtualinvoke $r4.<java.net.URL: java.net.URI toURI()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r11 = new java.lang.RuntimeException
org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : $r11 = new java.lang.RuntimeException >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10)
org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : throw $r11
org.apache.jackrabbit.oak.plugins.index.solr.TestUtils.createSolrServer : throw $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r6 = new org.apache.solr.client.solrj.request.UpdateRequest
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r6 = new org.apache.solr.client.solrj.request.UpdateRequest >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : specialinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void <init>(java.lang.String)>("/admin/collections")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : specialinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void <init>(java.lang.String)>("/admin/collections") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("action", "CREATE")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("action", "CREATE") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r7 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("solr_")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("solr_") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $l0 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $l0 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("name", r3)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("name", r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("numShards", "2")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("numShards", "2") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("replicationFactor", "2")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("replicationFactor", "2") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("collection.configName", "myconf")
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r6.<org.apache.solr.client.solrj.request.UpdateRequest: void setParam(java.lang.String,java.lang.String)>("collection.configName", "myconf") >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r10 = new org.apache.solr.client.solrj.impl.CloudSolrClient
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : $r10 = new org.apache.solr.client.solrj.impl.CloudSolrClient >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : specialinvoke $r10.<org.apache.solr.client.solrj.impl.CloudSolrClient: void <init>(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : specialinvoke $r10.<org.apache.solr.client.solrj.impl.CloudSolrClient: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r10.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setZkConnectTimeout(int)>(1000)
org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : virtualinvoke $r10.<org.apache.solr.client.solrj.impl.CloudSolrClient: void setZkConnectTimeout(int)>(1000) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProviderIT.canCreateCollections : r5 = virtualinvoke $r10.<org.apache.solr.client.solrj.impl.CloudSolrClient: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest)>($r6)
