org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.BufferedWriter writer>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.BufferedWriter writer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Writer)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Writer)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : $r0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : $r0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : return $r0
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : return $r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Closed writer")
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Closed writer") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if $r5 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if $r5 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r6 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r6 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : z0 = virtualinvoke $r10.<java.io.File: boolean renameTo(java.io.File)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : z0 = virtualinvoke $r10.<java.io.File: boolean renameTo(java.io.File)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r11 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r11 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("File renamed {}", $r12)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("File renamed {}", $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.List generations>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.List generations> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r21 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r21 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Process file renamed to {}", $r22)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Process file renamed to {}", $r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r2 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r2 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.util.concurrent.ScheduledExecutorService scheduler>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.util.concurrent.ScheduledExecutorService scheduler> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i0 = lengthof r0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i0 = lengthof r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $i0 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $i0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = new org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = new org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: void <init>(byte[])>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: void <init>(byte[])>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : if $r1 != null
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : if $r1 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r3 = new org.apache.jackrabbit.core.data.DataIdentifier
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r3 = new org.apache.jackrabbit.core.data.DataIdentifier >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r4 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r4 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r3 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r4 = "0x"
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r4 = "0x" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i3 = virtualinvoke $r4.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i3 = virtualinvoke $r4.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i4 = lengthof $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i4 = lengthof $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i5 = 2 * $i4
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i5 = 2 * $i4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i6 = $i3 + $i5
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i6 = $i3 + $i5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i6)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i0 = lengthof r2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i0 = lengthof r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : if i9 >= i0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : if i9 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : b1 = r2[i9]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : b1 = r2[i9] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : s2 = b1 & 255
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : s2 = b1 & 255 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s7 = s2 >> 4
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s7 = s2 >> 4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s7)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s8 = s2 & 15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s8 = s2 & 15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s8)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = i9 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = i9 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : return $r7
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : return $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : specialinvoke $r3.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : specialinvoke $r3.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier> = $r3
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier> = $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.isInstance : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0x")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.isInstance : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0x") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.isInstance : return $z0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.isInstance : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $z0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean $assertionsDisabled>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $z0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean $assertionsDisabled> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = "0x"
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = "0x" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i0 = virtualinvoke $r1.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i0 = virtualinvoke $r1.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i0)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i13 = virtualinvoke r18.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i13 = virtualinvoke r18.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i1 = i13 % 2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i1 = i13 % 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $i1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $i1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i14 = i13 / 2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i14 = i13 / 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20 = newarray (byte)[i14]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20 = newarray (byte)[i14] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if i15 >= i14
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if i15 >= i14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i2 = 2 * i15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i2 = 2 * i15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c3 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i2)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c3 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i7 = $i4 << 4
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i7 = $i4 << 4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i5 = 2 * i15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i5 = 2 * i15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i6 = $i5 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i6 = $i5 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c8 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i6)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c8 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i10 = $i7 | $i9
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i10 = $i7 | $i9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $b11 = (byte) $i10
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $b11 = (byte) $i10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20[i15] = $b11
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20[i15] = $b11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = i15 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = i15 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : $r1 = new java.io.ByteArrayInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : $r1 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : $i0 = lengthof $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : $i0 = lengthof $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : $l1 = (long) $i0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : $l1 = (long) $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : return $l1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : return $l1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : if r0 != r1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : if r0 != r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $z0 = r1 instanceof org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $z0 = r1 instanceof org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : r2 = (org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord) r1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : r2 = (org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord) r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $r3 = r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $r3 = r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.equals : return $z1
