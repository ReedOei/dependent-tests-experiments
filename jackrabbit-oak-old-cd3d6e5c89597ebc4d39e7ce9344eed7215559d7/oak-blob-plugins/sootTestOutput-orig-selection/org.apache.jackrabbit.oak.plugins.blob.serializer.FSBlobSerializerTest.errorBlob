org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: java.io.File dir>
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: java.io.File dir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : virtualinvoke $r2.<org.apache.jackrabbit.core.data.FileDataStore: void setPath(java.lang.String)>($r4)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : virtualinvoke $r2.<org.apache.jackrabbit.core.data.FileDataStore: void setPath(java.lang.String)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: int maxInlineSize>
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: int maxInlineSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : virtualinvoke $r2.<org.apache.jackrabbit.core.data.FileDataStore: void setMinRecordLength(int)>($i0)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : virtualinvoke $r2.<org.apache.jackrabbit.core.data.FileDataStore: void setMinRecordLength(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : virtualinvoke $r2.<org.apache.jackrabbit.core.data.FileDataStore: void init(java.lang.String)>(null)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : virtualinvoke $r2.<org.apache.jackrabbit.core.data.FileDataStore: void init(java.lang.String)>(null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $r5 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : $r5 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void <init>(org.apache.jackrabbit.core.data.DataStore)>($r2)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void <init>(org.apache.jackrabbit.core.data.DataStore)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : return $r5
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.createDataStore : return $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : r16 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : r16 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getNewStream : $r1 = new java.lang.RuntimeException
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getNewStream : $r1 = new java.lang.RuntimeException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getNewStream : specialinvoke $r1.<java.lang.RuntimeException: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getNewStream : specialinvoke $r1.<java.lang.RuntimeException: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getNewStream : throw $r1
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getNewStream : throw $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r9 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r9 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getContentIdentity : return "foo"
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializerTest$BadBlob.getContentIdentity : return "foo" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Error occurred while serializing Blob with id {}", $r9, $r7)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Error occurred while serializing Blob with id {}", $r9, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r10 = newarray (java.lang.Object)[2]
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r10[0] = "*ERROR*-"
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r10[0] = "*ERROR*-" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r10[1] = $r11
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r10[1] = $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s", $r10)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s", $r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : return $r12
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.serialize : return $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: boolean errorBlob(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer: boolean errorBlob(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.errorBlob : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("*ERROR*-")
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.errorBlob : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("*ERROR*-") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.errorBlob : return $z0
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.errorBlob : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : $r4 = new org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : $r4 = new org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : specialinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: void <init>(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : specialinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : return $r4
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer.deserialize : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.getContentIdentity : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: java.lang.String id>
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.getContentIdentity : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: java.lang.String id> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.getContentIdentity : return $r1
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.getContentIdentity : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.getNewStream : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: java.lang.RuntimeException createError()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.getNewStream : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: java.lang.RuntimeException createError()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r1 = new java.lang.RuntimeException
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r1 = new java.lang.RuntimeException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r2 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blob with id [")
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blob with id [") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: java.lang.String id>
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob: java.lang.String id> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] threw error while serializing")
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] threw error while serializing") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7)
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : return $r1
org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.createError : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.FSBlobSerializer$ErrorBlob.getNewStream : throw $r1
