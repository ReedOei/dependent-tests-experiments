org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.serialize : r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getContentIdentity : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: java.lang.String blobId>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getContentIdentity : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: java.lang.String blobId> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getContentIdentity : return $r1
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getContentIdentity : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.serialize : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.serialize : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.serialize : return r2
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.serialize : return r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("0y")
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("0y") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r2 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r2 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r3, r1)
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r3, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : return $r2
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: java.lang.String blobId>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: java.lang.String blobId> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : $l0 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.blob.BlobStore: long getBlobLength(java.lang.String)>($r2)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : $l0 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.blob.BlobStore: long getBlobLength(java.lang.String)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : return $l0
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.length : return $l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getNewStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getNewStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getNewStream : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: java.lang.String blobId>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getNewStream : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: java.lang.String blobId> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getNewStream : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.blob.BlobStore: java.io.InputStream getInputStream(java.lang.String)>($r2)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getNewStream : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.blob.BlobStore: java.io.InputStream getInputStream(java.lang.String)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob.getNewStream : return $r4
