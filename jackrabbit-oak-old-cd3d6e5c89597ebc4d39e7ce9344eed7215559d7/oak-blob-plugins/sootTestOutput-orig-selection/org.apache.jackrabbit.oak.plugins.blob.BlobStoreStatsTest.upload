org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r3 = new org.apache.jackrabbit.stats.TimeSeriesAverage >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r3 = interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.StatisticsProvider: org.apache.jackrabbit.api.stats.RepositoryStatistics getStats()>()
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r3 = interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.StatisticsProvider: org.apache.jackrabbit.api.stats.RepositoryStatistics getStats()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.api.stats.RepositoryStatistics: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String,boolean)>(r1, 1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.api.stats.RepositoryStatistics: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String,boolean)>(r1, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : return $r4
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r5 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r5 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)>($r6, $r8, $r7)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)>($r6, $r8, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r3.<org.apache.jackrabbit.stats.TimeSeriesAverage: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,org.apache.jackrabbit.api.stats.TimeSeries)>($r4, $r5)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r3.<org.apache.jackrabbit.stats.TimeSeriesAverage: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,org.apache.jackrabbit.api.stats.TimeSeries)>($r4, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : return $r3
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : return $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.HistogramStats uploadHisto>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.HistogramStats uploadHisto> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.HistogramStats: void update(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.HistogramStats: void update(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadSizeSeries>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadSizeSeries> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r3.<org.apache.jackrabbit.oak.stats.MeterStats: void mark(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r3.<org.apache.jackrabbit.oak.stats.MeterStats: void mark(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadTimeSeries>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadTimeSeries> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $l2 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l0, r1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $l2 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l0, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r5.<org.apache.jackrabbit.oak.stats.MeterStats: void mark(long)>($l2)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r5.<org.apache.jackrabbit.oak.stats.MeterStats: void mark(long)>($l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.slf4j.Logger opsLogger>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.slf4j.Logger opsLogger> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $l3 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $l3 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Uploaded {} bytes in {} ms", $r7, $r8)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploaded : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Uploaded {} bytes in {} ms", $r7, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadTimeSeries>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadTimeSeries> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>()
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l0)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : $l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : return $l1
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSeconds : return $l1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSize : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadSizeSeries>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSize : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadSizeSeries> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSize : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>()
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSize : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSize : return $l0
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadTotalSize : return $l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadCount : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadCount>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadCount : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadCount> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadCount : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>()
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadCount : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadCount : return $l0
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getUploadCount : return $l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploadCompleted : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadCount>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploadCompleted : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats uploadCount> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploadCompleted : interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.MeterStats: void mark()>()
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploadCompleted : interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.MeterStats: void mark()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploadCompleted : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.slf4j.Logger opsLogger>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploadCompleted : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.slf4j.Logger opsLogger> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.uploadCompleted : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Upload completed - {}", r1)
