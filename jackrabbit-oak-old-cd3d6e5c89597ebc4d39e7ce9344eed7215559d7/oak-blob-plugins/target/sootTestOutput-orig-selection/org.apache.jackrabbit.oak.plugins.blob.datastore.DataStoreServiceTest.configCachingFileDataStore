org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r6 = new java.util.HashMap >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r8 = virtualinvoke $r7.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r8 = virtualinvoke $r7.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repository.home", $r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repository.home", $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cacheSize", $r11)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cacheSize", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cachePath", r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cachePath", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r15 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r15 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : specialinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : specialinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest: org.apache.sling.testing.mock.osgi.junit.OsgiContext context>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest: org.apache.sling.testing.mock.osgi.junit.OsgiContext context> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r17 = virtualinvoke $r16.<org.apache.sling.testing.mock.osgi.junit.OsgiContext: org.osgi.service.component.ComponentContext componentContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r17 = virtualinvoke $r16.<org.apache.sling.testing.mock.osgi.junit.OsgiContext: org.osgi.service.component.ComponentContext componentContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : r5 = virtualinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.apache.jackrabbit.core.data.DataStore createDataStore(org.osgi.service.component.ComponentContext,java.util.Map)>($r17, $r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : r5 = virtualinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.apache.jackrabbit.core.data.DataStore createDataStore(org.osgi.service.component.ComponentContext,java.util.Map)>($r17, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSize")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSize") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : l0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: long toLong(java.lang.Object,long)>($r6, 0L)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : l0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: long toLong(java.lang.Object,long)>($r6, 0L) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $b1 = l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $b1 = l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r9, null)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r9, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "Cannot create FileDataStoreService with caching. [{path}] property not configured.")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "Cannot create FileDataStoreService with caching. [{path}] property not configured.") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cacheSize")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cacheSize") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fsBackendPath", r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fsBackendPath", r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cacheSize", $r14)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cacheSize", $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cachePath")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cachePath") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r4 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r16, null)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r4 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r16, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if r4 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cachePath")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cachePath") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r17 = new java.util.Properties
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r17 = new java.util.Properties >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r17.<java.util.Properties: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r17.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : virtualinvoke $r17.<java.util.Properties: void putAll(java.util.Map)>(r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : virtualinvoke $r17.<java.util.Properties: void putAll(java.util.Map)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r18 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing with properties ")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing with properties ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r22)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r23 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.apache.jackrabbit.core.data.DataStore getCachingDataStore(java.util.Properties,org.osgi.service.component.ComponentContext)>($r17, r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r23 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.apache.jackrabbit.core.data.DataStore getCachingDataStore(java.util.Properties,org.osgi.service.component.ComponentContext)>($r17, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r5 = new org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r5 = new org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r6 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>("stagingSplitPercentage")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r6 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>("stagingSplitPercentage") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r6, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r6, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setStagingSplitPercentage(int)>($i0)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setStagingSplitPercentage(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setStagingSplitPercentage : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> = i0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setStagingSplitPercentage : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> = i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setProperties(java.util.Properties)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setProperties(java.util.Properties)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r7 = new java.util.Hashtable
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r7 = new java.util.Hashtable >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r7.<java.util.Hashtable: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r7.<java.util.Hashtable: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r11 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: java.lang.String[] getDescription()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r11 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: java.lang.String[] getDescription()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1[0] = "type=filesystem"
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1[0] = "type=filesystem" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.datastore.description", $r11)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.datastore.description", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r13 = interfaceinvoke r2.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r13 = interfaceinvoke r2.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14 = newarray (java.lang.String)[2]
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14 = newarray (java.lang.String)[2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r15 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r15 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[0] = $r16
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[0] = $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r17 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r17 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[1] = $r18
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[1] = $r18 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r19 = interfaceinvoke $r13.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r14, $r5, $r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r19 = interfaceinvoke $r13.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r14, $r5, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.osgi.framework.ServiceRegistration delegateReg> = $r19
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.osgi.framework.ServiceRegistration delegateReg> = $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : return $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : return $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : return $r23
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : return $r23 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r5, $r6, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r5, $r6, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setPath : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = r1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setPath : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setCacheSize : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> = l0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setCacheSize : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> = l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r19 = virtualinvoke $r18.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r19 = virtualinvoke $r18.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r20 = virtualinvoke $r19.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $r20 = virtualinvoke $r19.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke r5.<org.apache.jackrabbit.core.data.DataStore: void init(java.lang.String)>($r20)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : interfaceinvoke r5.<org.apache.jackrabbit.core.data.DataStore: void init(java.lang.String)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $r3 != null
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $r3 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r4 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r4 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r6 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r6 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r7
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i0 < 0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i0 < 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i1 > 50
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i1 > 50 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z0 = 1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z0 = 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")]
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r12 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r12 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r13)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> = $r12
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> = $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r14 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r14 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "tmp")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "tmp") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> = $r14
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> = $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r16 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r16 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z1 = virtualinvoke $r17.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z1 = virtualinvoke $r17.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : interfaceinvoke $r16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Temporary file created [{}]", $r18)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : interfaceinvoke $r16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Temporary file created [{}]", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r19 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend createBackend()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r19 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend createBackend()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : if $r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void setProperties(java.util.Properties)>($r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void setProperties(java.util.Properties)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> = $r19
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> = $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : virtualinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void init()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : virtualinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void init()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("fsBackendPath")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("fsBackendPath") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r14 = ""
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r14 = "" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r15)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r16
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r17 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r17 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r18)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> = $r17
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> = $r17 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z2 = virtualinvoke $r19.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z2 = virtualinvoke $r19.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z3 = virtualinvoke $r20.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z3 = virtualinvoke $r20.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z3 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r21 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r21 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : z0 = virtualinvoke $r21.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : z0 = virtualinvoke $r21.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if z0 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r21 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r21 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r22)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r23 = new org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r23 = new org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r25 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r25 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $l2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $l2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i4 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int uploadThreads>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i4 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int uploadThreads> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r26 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r26 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r27 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r27 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r27.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r27.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: com.google.common.util.concurrent.ListeningExecutorService listeningExecutor>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: com.google.common.util.concurrent.ListeningExecutorService listeningExecutor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r30 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ScheduledExecutorService schedulerExecutor>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r30 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ScheduledExecutorService schedulerExecutor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r31 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ExecutorService executor>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r31 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingPurgeInterval>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingPurgeInterval> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i6 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingRetryInterval>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i6 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingRetryInterval> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: void <init>(java.lang.String,java.io.File,long,int,int,com.google.common.cache.CacheLoader,org.apache.jackrabbit.oak.plugins.blob.StagingUploader,org.apache.jackrabbit.oak.stats.StatisticsProvider,com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int,int)>($r24, $r25, $l2, $i3, $i4, $r26, $r27, $r28, $r29, $r30, $r31, $i5, $i6)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: void <init>(java.lang.String,java.io.File,long,int,int,com.google.common.cache.CacheLoader,org.apache.jackrabbit.oak.plugins.blob.StagingUploader,org.apache.jackrabbit.oak.stats.StatisticsProvider,com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int,int)>($r24, $r25, $l2, $i3, $i4, $r26, $r27, $r28, $r29, $r30, $r31, $i5, $i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $b4 = l1 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $b4 = l1 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $b4 <= 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $b4 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r7 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r7 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : return $r7
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : return $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $b1 = l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $b1 = l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r4 = new org.apache.jackrabbit.oak.plugins.blob.FileCache
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r4 = new org.apache.jackrabbit.oak.plugins.blob.FileCache >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void <init>(long,java.io.File,com.google.common.cache.CacheLoader,java.util.concurrent.ExecutorService)>(l0, r0, r1, r2)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void <init>(long,java.io.File,com.google.common.cache.CacheLoader,java.util.concurrent.ExecutorService)>(l0, r0, r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : return $r4
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.setDownloadCache : r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> = r1
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.setDownloadCache : r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> = $r23
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> = $r23 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $z0 = r5 instanceof org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : $z0 = r5 instanceof org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("not instance of CachingFDS", $z0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("not instance of CachingFDS", $z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : return r5
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getAssertCachingFileDataStore : return r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getBackend : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getBackend : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getBackend : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getBackend : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r1 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob: java.lang.Integer call()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r1 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob: java.lang.Integer call()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : r1 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : r1 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob: org.apache.jackrabbit.oak.plugins.blob.FileCache this$0>
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob: org.apache.jackrabbit.oak.plugins.blob.FileCache this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : i0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.FileCache: int access$600(org.apache.jackrabbit.oak.plugins.blob.FileCache)>($r2)
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : i0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.FileCache: int access$600(org.apache.jackrabbit.oak.plugins.blob.FileCache)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("properties")
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("properties") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.access$600 : $i0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: int build()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.access$600 : $i0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: int build()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : i0 = 0
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : i0 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File parent>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File parent> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: void moveDownloadCache(java.io.File)>($r4)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: void moveDownloadCache(java.io.File)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>("tmp", "upload", "download")
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>("tmp", "upload", "download") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r7 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r7 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "download")
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "download") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r8 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r8 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r9 = virtualinvoke $r8.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>(r0)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r9 = virtualinvoke $r8.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r10 = new org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r10 = new org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : specialinvoke $r10.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1: void <init>(java.io.File,java.util.List)>(r0, r1)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : specialinvoke $r10.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1: void <init>(java.io.File,java.util.List)>(r0, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r11 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r10)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $r11 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : r3 = virtualinvoke $r11.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : r3 = virtualinvoke $r11.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : return $r3
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : return $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $r2 = (java.io.File) r1
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $r2 = (java.io.File) r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1: boolean apply(java.io.File)>($r2)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1: boolean apply(java.io.File)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z3 = 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z3 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z3
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File cacheRoot>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File cacheRoot> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r8 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$6
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r8 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.FileCache$6: void <init>(org.apache.jackrabbit.oak.plugins.blob.FileCache)>(r0)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.FileCache$6: void <init>(org.apache.jackrabbit.oak.plugins.blob.FileCache)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r9 = virtualinvoke $r7.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r8)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r9 = virtualinvoke $r7.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : r1 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : r1 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $r2 = (java.io.File) r1
org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $r2 = (java.io.File) r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache$6: boolean apply(java.io.File)>($r2)
org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache$6: boolean apply(java.io.File)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $z2 = 0
org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : $z2 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : return $z2
org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : return $z2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : return $z0
org.apache.jackrabbit.oak.plugins.blob.FileCache$6.apply : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r10 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r10 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("[{}] files put in im-memory cache", $r11)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("[{}] files put in im-memory cache", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : return i0
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : return i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.access$600 : return $i0
org.apache.jackrabbit.oak.plugins.blob.FileCache.access$600 : return $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger access$100()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.access$100 : $r0 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.FileCache.access$100 : $r0 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.access$100 : return $r0
org.apache.jackrabbit.oak.plugins.blob.FileCache.access$100 : return $r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $l1 = virtualinvoke r1.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r5)
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $l1 = virtualinvoke r1.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Cache built with [{}] files from file system in [{}] seconds", $r4, $r6)
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Cache built with [{}] files from file system in [{}] seconds", $r4, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : return $r7
org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : return $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$CacheBuildJob.call : return $r1
