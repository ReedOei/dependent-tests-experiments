org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r2 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: java.util.concurrent.ScheduledExecutorService scheduler>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: java.util.concurrent.ScheduledExecutorService scheduler> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker tracker>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker tracker> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.BufferedWriter writer>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.BufferedWriter writer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Writer)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Writer)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : $r0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : $r0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : return $r0
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.access$000 : return $r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Closed writer")
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Closed writer") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if $r5 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if $r5 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r6 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r6 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File processFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : z0 = virtualinvoke $r10.<java.io.File: boolean renameTo(java.io.File)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : z0 = virtualinvoke $r10.<java.io.File: boolean renameTo(java.io.File)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r11 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r11 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("File renamed {}", $r12)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("File renamed {}", $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.List generations>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.List generations> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r21 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r21 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Process file renamed to {}", $r22)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Process file renamed to {}", $r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.close : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r2 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r2 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.util.concurrent.ScheduledExecutorService scheduler>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.util.concurrent.ScheduledExecutorService scheduler> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r6 = (org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore) $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r6 = (org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore) $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : interfaceinvoke $r1.<org.apache.jackrabbit.core.data.DataStore: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : interfaceinvoke $r1.<org.apache.jackrabbit.core.data.DataStore: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: com.google.common.cache.LoadingCache cache>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: com.google.common.cache.LoadingCache cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : interfaceinvoke $r2.<com.google.common.cache.LoadingCache: void invalidateAll()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : interfaceinvoke $r2.<com.google.common.cache.LoadingCache: void invalidateAll()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker tracker>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker tracker> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.close : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.setStatisticsProvider : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.setStatisticsProvider : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r30 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>(r29)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r30 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>(r29) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.core.data.DataStore createDataStore(org.osgi.service.component.ComponentContext,java.util.Map)>(r1, r30)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.core.data.DataStore createDataStore(org.osgi.service.component.ComponentContext,java.util.Map)>(r1, r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSize")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSize") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : l0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: long toLong(java.lang.Object,long)>($r6, 0L)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : l0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: long toLong(java.lang.Object,long)>($r6, 0L) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $b1 = l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $b1 = l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("OakFileDataStore initialized")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("OakFileDataStore initialized") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r8 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r8 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : return $r8
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : return $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r6 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("encodeLengthInId")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r6 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("encodeLengthInId") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : z0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: boolean toBoolean(java.lang.Object,boolean)>($r6, 1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : z0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: boolean toBoolean(java.lang.Object,boolean)>($r6, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r7 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSizeInMB")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r7 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSizeInMB") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r7, 16)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r7, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String lookup(org.osgi.service.component.ComponentContext,java.lang.String)>(r1, "repository.home")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String lookup(org.osgi.service.component.ComponentContext,java.lang.String)>(r1, "repository.home") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r2 = interfaceinvoke r0.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r2 = interfaceinvoke r0.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r3 = interfaceinvoke $r2.<org.osgi.framework.BundleContext: java.lang.String getProperty(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r3 = interfaceinvoke $r2.<org.osgi.framework.BundleContext: java.lang.String getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : if $r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r4 = interfaceinvoke r0.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r4 = interfaceinvoke r0.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r5 = virtualinvoke $r4.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r5 = virtualinvoke $r4.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : if $r5 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : if $r5 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r6 = interfaceinvoke r0.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r6 = interfaceinvoke r0.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r7 = virtualinvoke $r6.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r7 = virtualinvoke $r6.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : return $r8
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.lookup : return $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $z1 = interfaceinvoke r30.<java.util.Map: boolean containsKey(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $z1 = interfaceinvoke r30.<java.util.Map: boolean containsKey(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Initializing the DataStore with homeDir [{}]", r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Initializing the DataStore with homeDir [{}]", r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataStore: void init(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataStore: void init(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r31 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r31 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r32 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider getStatisticsProvider()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r32 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider getStatisticsProvider()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.getStatisticsProvider : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.getStatisticsProvider : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.getStatisticsProvider : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.getStatisticsProvider : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r31.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: void <init>(org.apache.jackrabbit.oak.stats.StatisticsProvider)>($r32)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r31.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: void <init>(org.apache.jackrabbit.oak.stats.StatisticsProvider)>($r32) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r3 = new org.apache.jackrabbit.stats.TimeSeriesAverage
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r3 = new org.apache.jackrabbit.stats.TimeSeriesAverage >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r3 = interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.StatisticsProvider: org.apache.jackrabbit.api.stats.RepositoryStatistics getStats()>()
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r3 = interfaceinvoke $r2.<org.apache.jackrabbit.oak.stats.StatisticsProvider: org.apache.jackrabbit.api.stats.RepositoryStatistics getStats()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.api.stats.RepositoryStatistics: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String,boolean)>(r1, 1)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.api.stats.RepositoryStatistics: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String,boolean)>(r1, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : return $r4
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getTimeSeries : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r5 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r5 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.api.stats.TimeSeries getTimeSeries(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)>($r6, $r8, $r7)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats$UnitConvertingTimeSeries: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)>($r6, $r8, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r3.<org.apache.jackrabbit.stats.TimeSeriesAverage: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,org.apache.jackrabbit.api.stats.TimeSeries)>($r4, $r5)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : specialinvoke $r3.<org.apache.jackrabbit.stats.TimeSeriesAverage: void <init>(org.apache.jackrabbit.api.stats.TimeSeries,org.apache.jackrabbit.api.stats.TimeSeries)>($r4, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : return $r3
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getAvgTimeSeries : return $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r33 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r33 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r33.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void <init>(org.apache.jackrabbit.core.data.DataStore,boolean,int)>(r2, z0, i0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r33.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void <init>(org.apache.jackrabbit.core.data.DataStore,boolean,int)>(r2, z0, i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> = $r33
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> = $r33 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r34 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r34 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r34.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void setBlobStatsCollector(org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector)>($r31)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r34.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void setBlobStatsCollector(org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.setBlobStatsCollector : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.setBlobStatsCollector : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r35 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r35 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>($r35, r30, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>($r35, r30, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r36 = new java.util.Hashtable
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r36 = new java.util.Hashtable >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r36.<java.util.Hashtable: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r36.<java.util.Hashtable: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r37 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r37 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r38)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r38) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r39 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String[] getDescription()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r39 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String[] getDescription()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1[0] = "type=filesystem"
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : $r1[0] = "type=filesystem" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getDescription : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.blobstore.description", $r39)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.blobstore.description", $r39) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r40 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r40 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r41 = virtualinvoke $r40.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("split.blobstore")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r41 = virtualinvoke $r40.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("split.blobstore") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $r41 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $r41 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r10 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r10 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11 = newarray (java.lang.String)[2]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11 = newarray (java.lang.String)[2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r12 = class "Lorg/apache/jackrabbit/oak/spi/blob/BlobStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r12 = class "Lorg/apache/jackrabbit/oak/spi/blob/BlobStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[0] = $r13
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[0] = $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r14 = class "Lorg/apache/jackrabbit/oak/spi/blob/GarbageCollectableBlobStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r14 = class "Lorg/apache/jackrabbit/oak/spi/blob/GarbageCollectableBlobStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[1] = $r15
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[1] = $r15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r17 = interfaceinvoke $r10.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r11, $r16, $r36)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r17 = interfaceinvoke $r10.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r11, $r16, $r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.osgi.framework.ServiceRegistration reg> = $r17
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.osgi.framework.ServiceRegistration reg> = $r17 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r18 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r18 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r20 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBeans(org.osgi.framework.BundleContext,org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore,org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats)>($r18, $r19, $r31)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r20 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBeans(org.osgi.framework.BundleContext,org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore,org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats)>($r18, $r19, $r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r4 = new org.apache.jackrabbit.oak.osgi.OsgiWhiteboard
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r4 = new org.apache.jackrabbit.oak.osgi.OsgiWhiteboard >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : specialinvoke $r4.<org.apache.jackrabbit.oak.osgi.OsgiWhiteboard: void <init>(org.osgi.framework.BundleContext)>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : specialinvoke $r4.<org.apache.jackrabbit.oak.osgi.OsgiWhiteboard: void <init>(org.osgi.framework.BundleContext)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r5 = new org.apache.jackrabbit.oak.spi.whiteboard.CompositeRegistration
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r5 = new org.apache.jackrabbit.oak.spi.whiteboard.CompositeRegistration >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r6 = newarray (org.apache.jackrabbit.oak.spi.whiteboard.Registration)[2]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r6 = newarray (org.apache.jackrabbit.oak.spi.whiteboard.Registration)[2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r9 = staticinvoke <org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBean(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard,java.lang.Class,java.lang.Object,java.lang.String,java.lang.String)>($r4, class "Lorg/apache/jackrabbit/oak/spi/blob/stats/BlobStoreStatsMBean;", r2, "BlobStoreStats", $r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r9 = staticinvoke <org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBean(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard,java.lang.Class,java.lang.Object,java.lang.String,java.lang.String)>($r4, class "Lorg/apache/jackrabbit/oak/spi/blob/stats/BlobStoreStatsMBean;", r2, "BlobStoreStats", $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r6[0] = $r9
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r6[0] = $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r10 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.cache.CacheStats getCacheStats()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r10 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.cache.CacheStats getCacheStats()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getCacheStats : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.cache.CacheStats cacheStats>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getCacheStats : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.cache.CacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getCacheStats : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getCacheStats : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r11 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.cache.CacheStats getCacheStats()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r11 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.cache.CacheStats getCacheStats()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r12 = virtualinvoke $r11.<org.apache.jackrabbit.oak.cache.CacheStats: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r12 = virtualinvoke $r11.<org.apache.jackrabbit.oak.cache.CacheStats: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r13 = staticinvoke <org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBean(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard,java.lang.Class,java.lang.Object,java.lang.String,java.lang.String)>($r4, class "Lorg/apache/jackrabbit/oak/api/jmx/CacheStatsMBean;", $r10, "CacheStats", $r12)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r13 = staticinvoke <org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBean(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard,java.lang.Class,java.lang.Object,java.lang.String,java.lang.String)>($r4, class "Lorg/apache/jackrabbit/oak/api/jmx/CacheStatsMBean;", $r10, "CacheStats", $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r6[1] = $r13
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : $r6[1] = $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : specialinvoke $r5.<org.apache.jackrabbit.oak.spi.whiteboard.CompositeRegistration: void <init>(org.apache.jackrabbit.oak.spi.whiteboard.Registration[])>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : specialinvoke $r5.<org.apache.jackrabbit.oak.spi.whiteboard.CompositeRegistration: void <init>(org.apache.jackrabbit.oak.spi.whiteboard.Registration[])>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : return $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.registerMBeans : return $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.spi.whiteboard.Registration mbeanReg> = $r20
