org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void close()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.close : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.close : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: void close()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void close()>()
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: void close()>()
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : r8 = null
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : r8 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r1 = new org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r1 = new org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : specialinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : specialinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : r8 = $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : r8 = $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils: java.util.Map getConfig()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils: java.util.Map getConfig()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r0 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r0 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r3 = staticinvoke <java.lang.System: java.util.Properties getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r3 = staticinvoke <java.lang.System: java.util.Properties getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r4 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap fromProperties(java.util.Properties)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r4 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap fromProperties(java.util.Properties)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r1 = virtualinvoke $r5.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r1 = virtualinvoke $r5.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r2 = (java.util.Map$Entry) $r6
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r2 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r10 = (java.lang.String) $r7
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r10 = (java.lang.String) $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ds.")
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ds.") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("bs.")
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("bs.") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r11 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>(3)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r11 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>(3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : return r0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : return r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.util.Properties props>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.util.Properties props> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : virtualinvoke $r2.<java.util.Properties: void putAll(java.util.Map)>(r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : virtualinvoke $r2.<java.util.Properties: void putAll(java.util.Map)>(r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.util.Properties props>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.util.Properties props> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r4 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap fromProperties(java.util.Properties)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r4 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap fromProperties(java.util.Properties)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>($r1, $r4, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>($r1, $r4, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setMinRecordLength : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength> = i0
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setMinRecordLength : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength> = i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setCacheSize : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> = l0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setCacheSize : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> = l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.util.Properties props>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.util.Properties props> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setProperties(java.util.Properties)>($r5)
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setProperties(java.util.Properties)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.lang.String dataStoreDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest: java.lang.String dataStoreDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void init(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void init(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $r3 != null
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $r3 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r8 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/repository/datastore")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/repository/datastore") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r11
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r4 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r4 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r6 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r6 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r7
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i0 < 0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i0 < 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i1 > 50
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i1 > 50 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z0 = 1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z0 = 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")]
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r12 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r12 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r13)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> = $r12
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> = $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r14 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r14 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "tmp")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "tmp") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> = $r14
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> = $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r16 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r16 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z1 = virtualinvoke $r17.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z1 = virtualinvoke $r17.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : interfaceinvoke $r16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Temporary file created [{}]", $r18)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : interfaceinvoke $r16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Temporary file created [{}]", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r19 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend createBackend()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r19 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend createBackend()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : if $r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void setProperties(java.util.Properties)>($r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void setProperties(java.util.Properties)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> = $r19
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> = $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : virtualinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void init()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : virtualinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void init()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("fsBackendPath")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("fsBackendPath") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r14 = ""
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r14 = "" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r15)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r16
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> = $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r17 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r17 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.lang.String fsPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r18)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> = $r17
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> = $r17 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z2 = virtualinvoke $r19.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z2 = virtualinvoke $r19.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z4 = virtualinvoke $r29.<java.io.File: boolean isFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z4 = virtualinvoke $r29.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z4 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z4 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z3 = virtualinvoke $r20.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $z3 = virtualinvoke $r20.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z3 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r21 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r21 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r22)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r23 = new org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r23 = new org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r25 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r25 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $l2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $l2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i4 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int uploadThreads>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i4 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int uploadThreads> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r26 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r26 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r27 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r27 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r27.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r27.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.stats.StatisticsProvider statisticsProvider> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: com.google.common.util.concurrent.ListeningExecutorService listeningExecutor>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: com.google.common.util.concurrent.ListeningExecutorService listeningExecutor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r30 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ScheduledExecutorService schedulerExecutor>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r30 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ScheduledExecutorService schedulerExecutor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r31 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ExecutorService executor>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r31 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingPurgeInterval>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingPurgeInterval> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i6 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingRetryInterval>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i6 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingRetryInterval> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: void <init>(java.lang.String,java.io.File,long,int,int,com.google.common.cache.CacheLoader,org.apache.jackrabbit.oak.plugins.blob.StagingUploader,org.apache.jackrabbit.oak.stats.StatisticsProvider,com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int,int)>($r24, $r25, $l2, $i3, $i4, $r26, $r27, $r28, $r29, $r30, $r31, $i5, $i6)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: void <init>(java.lang.String,java.io.File,long,int,int,com.google.common.cache.CacheLoader,org.apache.jackrabbit.oak.plugins.blob.StagingUploader,org.apache.jackrabbit.oak.stats.StatisticsProvider,com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int,int)>($r24, $r25, $l2, $i3, $i4, $r26, $r27, $r28, $r29, $r30, $r31, $i5, $i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $b4 = l1 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $b4 = l1 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $b4 <= 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $b4 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r7 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r7 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : return $r7
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : return $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $b1 = l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $b1 = l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r3 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$5
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r3 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.FileCache$5: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.FileCache$5: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : return $r3
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : return $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.setDownloadCache : r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> = r1
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.setDownloadCache : r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> = $r23
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> = $r23 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : goto [?= return r8]
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : goto [?= return r8] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : return r8
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStoreTest.createDataStore : return r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: int dataLength>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: int dataLength> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : r1 = newarray (byte)[$i0]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : r1 = newarray (byte)[$i0] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: java.util.Random randomGen>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: java.util.Random randomGen> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : virtualinvoke $r3.<java.util.Random: void nextBytes(byte[])>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : virtualinvoke $r3.<java.util.Random: void nextBytes(byte[])>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: org.apache.jackrabbit.core.data.DataStore ds>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: org.apache.jackrabbit.core.data.DataStore ds> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $r4 = new java.io.ByteArrayInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $r4 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : r2 = interfaceinvoke $r5.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream)>($r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : r2 = interfaceinvoke $r5.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r2 = new org.apache.jackrabbit.oak.spi.blob.BlobOptions
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r2 = new org.apache.jackrabbit.oak.spi.blob.BlobOptions >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r2.<org.apache.jackrabbit.oak.spi.blob.BlobOptions: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r2.<org.apache.jackrabbit.oak.spi.blob.BlobOptions: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream,org.apache.jackrabbit.oak.spi.blob.BlobOptions)>(r1, $r2)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream,org.apache.jackrabbit.oak.spi.blob.BlobOptions)>(r1, $r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r3 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r3 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r32 = staticinvoke <org.apache.jackrabbit.util.TransientFileFactory: org.apache.jackrabbit.util.TransientFileFactory getInstance()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r32 = staticinvoke <org.apache.jackrabbit.util.TransientFileFactory: org.apache.jackrabbit.util.TransientFileFactory getInstance()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r4 = virtualinvoke r32.<org.apache.jackrabbit.util.TransientFileFactory: java.io.File createTransientFile(java.lang.String,java.lang.String,java.io.File)>("upload", null, $r7)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r4 = virtualinvoke r32.<org.apache.jackrabbit.util.TransientFileFactory: java.io.File createTransientFile(java.lang.String,java.lang.String,java.io.File)>("upload", null, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String DIGEST>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String DIGEST> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r9 = new java.security.DigestOutputStream
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r9 = new java.security.DigestOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r10 = new java.io.FileOutputStream
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r10 = new java.io.FileOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r4)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r10, r5)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r10, r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>(r1, $r9)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>(r1, $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r9.<java.io.OutputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r9.<java.io.OutputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : goto [?= $r11 = new org.apache.jackrabbit.core.data.DataIdentifier]
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : goto [?= $r11 = new org.apache.jackrabbit.core.data.DataIdentifier] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r11 = new org.apache.jackrabbit.core.data.DataIdentifier
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r11 = new org.apache.jackrabbit.core.data.DataIdentifier >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r12 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r12 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r13 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String encodeHexString(byte[])>($r12)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r13 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String encodeHexString(byte[])>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r11.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r13)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r11.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r15 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r15 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14 = newarray (java.lang.Object)[3]
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14[0] = $r11
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14[0] = $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14[1] = $r16
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14[1] = $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $l0 = virtualinvoke r3.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r17)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $l0 = virtualinvoke r3.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14[2] = $r18
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r14[2] = $r18 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("SHA-256 of [{}], length =[{}] took [{}] ms ", $r14)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("SHA-256 of [{}], length =[{}] took [{}] ms ", $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r19 = virtualinvoke r2.<org.apache.jackrabbit.oak.spi.blob.BlobOptions: org.apache.jackrabbit.oak.spi.blob.BlobOptions$UploadType getUpload()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r19 = virtualinvoke r2.<org.apache.jackrabbit.oak.spi.blob.BlobOptions: org.apache.jackrabbit.oak.spi.blob.BlobOptions$UploadType getUpload()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r20 = <org.apache.jackrabbit.oak.spi.blob.BlobOptions$UploadType: org.apache.jackrabbit.oak.spi.blob.BlobOptions$UploadType SYNCHRONOUS>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r20 = <org.apache.jackrabbit.oak.spi.blob.BlobOptions$UploadType: org.apache.jackrabbit.oak.spi.blob.BlobOptions$UploadType SYNCHRONOUS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : if $r19 == $r20
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : if $r19 == $r20 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r27 = virtualinvoke $r11.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r27 = virtualinvoke $r11.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $z0 = virtualinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: boolean stage(java.lang.String,java.io.File)>($r27, r4)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $z0 = virtualinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: boolean stage(java.lang.String,java.io.File)>($r27, r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.base.Optional put(java.lang.String,java.io.File)>(r1, r2)
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.base.Optional put(java.lang.String,java.io.File)>(r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2.put : $r3 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2.put : $r3 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2.put : return $r3
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2.put : return $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : $z0 = virtualinvoke $r4.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : $z0 = virtualinvoke $r4.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : return $z0
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.stage : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r21 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r21 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r21.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void write(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>($r11, r4)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r21.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void write(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>($r11, r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : r2 = virtualinvoke r0.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : r2 = virtualinvoke r0.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r3 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r3 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r5 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r5 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(2, 4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(2, 4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r7 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r7 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(4, 6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(4, 6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r9 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r9 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : return $r9
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : return $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : entermonitor r0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : entermonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r2, r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r2, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : goto [?= exitmonitor r0]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : goto [?= exitmonitor r0] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : exitmonitor r0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : exitmonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.write : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r22 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r22 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Added blob [{}] to backend", $r11)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Added blob [{}] to backend", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r23 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r23 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r24 = virtualinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache getDownloadCache()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r24 = virtualinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache getDownloadCache()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getDownloadCache : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getDownloadCache : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getDownloadCache : return $r1
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getDownloadCache : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r25 = virtualinvoke $r11.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r25 = virtualinvoke $r11.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r24.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void put(java.lang.String,java.io.File)>($r25, r4)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r24.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void put(java.lang.String,java.io.File)>($r25, r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r35 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.core.data.DataRecord getRecordIfStored(org.apache.jackrabbit.core.data.DataIdentifier)>($r11)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r35 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.core.data.DataRecord getRecordIfStored(org.apache.jackrabbit.core.data.DataIdentifier)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r4 = virtualinvoke r1.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r4 = virtualinvoke r1.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : r2 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: java.io.File getIfPresent(java.lang.String)>($r4)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : r2 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: java.io.File getIfPresent(java.lang.String)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : r2 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File getIfPresent(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : r2 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File getIfPresent(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2.getIfPresent : return null
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$2.getIfPresent : return null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : $r5 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File getIfPresent(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : $r5 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File getIfPresent(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$5.getIfPresent : return null
org.apache.jackrabbit.oak.plugins.blob.FileCache$5.getIfPresent : return null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : return $r5
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.getIfPresent : return $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : r12 = virtualinvoke $r5.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: org.apache.jackrabbit.core.data.DataRecord getRecord(org.apache.jackrabbit.core.data.DataIdentifier)>(r1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : r12 = virtualinvoke $r5.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: org.apache.jackrabbit.core.data.DataRecord getRecord(org.apache.jackrabbit.core.data.DataIdentifier)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $z1 = virtualinvoke r2.<java.io.File: boolean isFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $z1 = virtualinvoke r2.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $r12 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : $r12 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend,org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend,org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r0, r0, r1, r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend,org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend,org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r0, r0, r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : return $r12
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getRecord : return $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r6 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r6 = new org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $l0 = interfaceinvoke r12.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $l0 = interfaceinvoke r12.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLength : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: long length>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLength : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: long length> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLength : return $l0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLength : return $l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $l1 = interfaceinvoke r12.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : $l1 = interfaceinvoke r12.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLastModified : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: long lastModified>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLastModified : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: long lastModified> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLastModified : return $l0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getLastModified : return $l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : specialinvoke $r6.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore,org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend,org.apache.jackrabbit.core.data.DataIdentifier,long,long)>(r0, $r7, r1, $l0, $l1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : specialinvoke $r6.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: void <init>(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore,org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend,org.apache.jackrabbit.core.data.DataIdentifier,long,long)>(r0, $r7, r1, $l0, $l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : return $r6
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecordIfStored : return $r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : return $r35
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : return $r35 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : return $r3
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : return $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $i1 = lengthof r1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $i1 = lengthof r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $l2 = (long) $i1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $l2 = (long) $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $l3 = interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : $l3 = interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getLength : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: long length>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getLength : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: long length> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getLength : return $l0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getLength : return $l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: void assertRecord(byte[],org.apache.jackrabbit.core.data.DataRecord)>(r1, r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doAddRecordTest : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: void assertRecord(byte[],org.apache.jackrabbit.core.data.DataRecord)>(r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : r3 = interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : r3 = interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : r24 = null
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : r24 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore store>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache access$000(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>($r1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache access$000(org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore)>($r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.access$000 : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.access$000 : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.access$000 : return $r1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.access$000 : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : r24 = virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: java.io.File get(java.lang.String)>($r4)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : r24 = virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: java.io.File get(java.lang.String)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : r7 = virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File getIfPresent(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : r7 = virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File getIfPresent(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : if r7 == null
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : if r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache>
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache: org.apache.jackrabbit.oak.plugins.blob.FileCache downloadCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File get(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File get(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache$5.get : return null
org.apache.jackrabbit.oak.plugins.blob.FileCache$5.get : return null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : return $r4
org.apache.jackrabbit.oak.plugins.blob.CompositeDataStoreCache.get : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : if r24 == null
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : if r24 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r6 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r6 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r7 = virtualinvoke $r5.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: org.apache.jackrabbit.core.data.DataRecord getRecord(org.apache.jackrabbit.core.data.DataIdentifier)>($r6)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r7 = virtualinvoke $r5.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: org.apache.jackrabbit.core.data.DataRecord getRecord(org.apache.jackrabbit.core.data.DataIdentifier)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r8 = interfaceinvoke $r7.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : $r8 = interfaceinvoke $r7.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r2 = new org.apache.jackrabbit.core.data.LazyFileInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r2 = new org.apache.jackrabbit.core.data.LazyFileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: java.io.File file>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: java.io.File file> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : specialinvoke $r2.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : specialinvoke $r2.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : return $r8
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore$FileCacheDataRecord.getStream : return $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i0 = lengthof r1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i0 = lengthof r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : if i8 >= $i0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : if i8 >= $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $b3 = r1[i8]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $b3 = r1[i8] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $s4 = $b3 & 255
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $s4 = $b3 & 255 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l5 = (long) $s4
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l5 = (long) $s4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i6 = virtualinvoke r3.<java.io.InputStream: int read()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i6 = virtualinvoke r3.<java.io.InputStream: int read()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l7 = (long) $i6
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l7 = (long) $i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = i8 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = i8 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= $i0 = lengthof r1]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= $i0 = lengthof r1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i1 = virtualinvoke r3.<java.io.InputStream: int read()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i1 = virtualinvoke r3.<java.io.InputStream: int read()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l2 = (long) $i1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l2 = (long) $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l2)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : virtualinvoke r3.<java.io.InputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= return]
