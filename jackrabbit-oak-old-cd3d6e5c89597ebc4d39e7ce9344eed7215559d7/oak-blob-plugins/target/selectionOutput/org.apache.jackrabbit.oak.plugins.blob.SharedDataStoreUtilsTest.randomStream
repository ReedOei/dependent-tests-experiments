org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : $r2 = new java.util.Random >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : $l2 = (long) i0
org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : $l2 = (long) i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : specialinvoke $r2.<java.util.Random: void <init>(long)>($l2)
org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : specialinvoke $r2.<java.util.Random: void <init>(long)>($l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : r1 = newarray (byte)[i1]
org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : r1 = newarray (byte)[i1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>(r1)
org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : $r3 = new java.io.ByteArrayInputStream
org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : $r3 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)
org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.SharedDataStoreUtilsTest.randomStream : return $r3
