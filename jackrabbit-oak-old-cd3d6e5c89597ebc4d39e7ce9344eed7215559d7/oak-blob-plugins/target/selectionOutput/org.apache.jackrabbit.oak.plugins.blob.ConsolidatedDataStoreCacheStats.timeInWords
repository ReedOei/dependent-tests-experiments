org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : l1 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : l1 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r1 = newarray (java.lang.Object)[2]
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r1 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l2 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMinutes(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l2 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMinutes(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r1[0] = $r3
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r1[0] = $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l3 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toSeconds(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l3 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toSeconds(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l4 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toMinutes(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l4 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toMinutes(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l5 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l4)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l5 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l6 = $l3 - $l5
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $l6 = $l3 - $l5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r1[1] = $r7
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r1[1] = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d min, %d sec", $r1)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d min, %d sec", $r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.timeInWords : return $r8
