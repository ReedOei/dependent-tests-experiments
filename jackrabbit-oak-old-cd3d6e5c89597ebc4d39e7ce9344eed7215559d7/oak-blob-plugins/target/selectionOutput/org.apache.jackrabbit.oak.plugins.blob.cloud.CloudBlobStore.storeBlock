org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r8)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.StringUtils: java.lang.String convertBytesToHex(byte[])>(r1)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.StringUtils: java.lang.String convertBytesToHex(byte[])>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.apache.jackrabbit.oak.cache.CacheLIRS cache>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.apache.jackrabbit.oak.cache.CacheLIRS cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : virtualinvoke $r10.<org.apache.jackrabbit.oak.cache.CacheLIRS: void put(java.lang.Object,java.lang.Object)>(r3, r2)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : virtualinvoke $r10.<org.apache.jackrabbit.oak.cache.CacheLIRS: void put(java.lang.Object,java.lang.Object)>(r3, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r4 = interfaceinvoke $r11.<org.jclouds.blobstore.BlobStoreContext: org.jclouds.blobstore.BlobStore getBlobStore()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r4 = interfaceinvoke $r11.<org.jclouds.blobstore.BlobStoreContext: org.jclouds.blobstore.BlobStore getBlobStore()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $z0 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: boolean blobExists(java.lang.String,java.lang.String)>($r12, r3)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $z0 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: boolean blobExists(java.lang.String,java.lang.String)>($r12, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r5 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r14 = <org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r14 = <org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r13 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blob ")
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blob ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists")
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>($r18)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>($r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : return
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r5 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("level", $r19)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("level", $r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r21 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: org.jclouds.blobstore.domain.BlobBuilder blobBuilder(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r21 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: org.jclouds.blobstore.domain.BlobBuilder blobBuilder(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r22 = interfaceinvoke $r21.<org.jclouds.blobstore.domain.BlobBuilder: org.jclouds.blobstore.domain.BlobBuilder$PayloadBlobBuilder payload(byte[])>(r2)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r22 = interfaceinvoke $r21.<org.jclouds.blobstore.domain.BlobBuilder: org.jclouds.blobstore.domain.BlobBuilder$PayloadBlobBuilder payload(byte[])>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r23 = interfaceinvoke $r22.<org.jclouds.blobstore.domain.BlobBuilder$PayloadBlobBuilder: org.jclouds.blobstore.domain.BlobBuilder userMetadata(java.util.Map)>(r5)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r23 = interfaceinvoke $r22.<org.jclouds.blobstore.domain.BlobBuilder$PayloadBlobBuilder: org.jclouds.blobstore.domain.BlobBuilder userMetadata(java.util.Map)>(r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r6 = interfaceinvoke $r23.<org.jclouds.blobstore.domain.BlobBuilder: org.jclouds.blobstore.domain.Blob build()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r6 = interfaceinvoke $r23.<org.jclouds.blobstore.domain.BlobBuilder: org.jclouds.blobstore.domain.Blob build()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r25 = staticinvoke <org.jclouds.blobstore.options.PutOptions$Builder: org.jclouds.blobstore.options.PutOptions multipart()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r25 = staticinvoke <org.jclouds.blobstore.options.PutOptions$Builder: org.jclouds.blobstore.options.PutOptions multipart()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r7 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: java.lang.String putBlob(java.lang.String,org.jclouds.blobstore.domain.Blob,org.jclouds.blobstore.options.PutOptions)>($r24, r6, $r25)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : r7 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: java.lang.String putBlob(java.lang.String,org.jclouds.blobstore.domain.Blob,org.jclouds.blobstore.options.PutOptions)>($r24, r6, $r25) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r27 = <org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r27 = <org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r26 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blob ")
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blob ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" created with cloud tag : ")
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" created with cloud tag : ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String)>($r32)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String)>($r32) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.storeBlock : return
