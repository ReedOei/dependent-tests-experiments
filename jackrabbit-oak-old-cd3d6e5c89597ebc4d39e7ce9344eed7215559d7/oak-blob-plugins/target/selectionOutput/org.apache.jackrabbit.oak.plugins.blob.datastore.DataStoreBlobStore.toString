org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r1 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r1[0] = $r4
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r1[0] = $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DataStore backed BlobStore [%s]", $r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DataStore backed BlobStore [%s]", $r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.toString : return $r5
