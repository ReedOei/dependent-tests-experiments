org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : virtualinvoke r1.<java.io.BufferedWriter: void flush()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : virtualinvoke r1.<java.io.BufferedWriter: void flush()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : return
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : r3 = (java.lang.String) $r4
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : r3 = (java.lang.String) $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void writeAsLine(java.io.BufferedWriter,java.lang.String,boolean)>(r1, r3, 1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void writeAsLine(java.io.BufferedWriter,java.lang.String,boolean)>(r1, r3, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.saveBatchToFile : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
