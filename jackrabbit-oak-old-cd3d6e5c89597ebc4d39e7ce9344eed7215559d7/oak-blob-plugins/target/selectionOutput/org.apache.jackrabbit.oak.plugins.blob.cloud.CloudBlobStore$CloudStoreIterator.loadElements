org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : r2 = interfaceinvoke r1.<org.jclouds.blobstore.domain.PageSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : return
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : r3 = (org.jclouds.blobstore.domain.StorageMetadata) $r4
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : r3 = (org.jclouds.blobstore.domain.StorageMetadata) $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: long maxLastModifiedTime>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: long maxLastModifiedTime> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $b1 = $l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $b1 = $l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r7 = interfaceinvoke r3.<org.jclouds.blobstore.domain.StorageMetadata: java.util.Date getLastModified()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: java.util.ArrayDeque queue>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: java.util.ArrayDeque queue> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r6 = interfaceinvoke r3.<org.jclouds.blobstore.domain.StorageMetadata: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r6 = interfaceinvoke r3.<org.jclouds.blobstore.domain.StorageMetadata: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : virtualinvoke $r5.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : virtualinvoke $r5.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r7 = interfaceinvoke r3.<org.jclouds.blobstore.domain.StorageMetadata: java.util.Date getLastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $l2 = virtualinvoke $r7.<java.util.Date: long getTime()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $l2 = virtualinvoke $r7.<java.util.Date: long getTime()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $l3 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: long maxLastModifiedTime>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $l3 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: long maxLastModifiedTime> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $b4 = $l2 cmp $l3
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $b4 = $l2 cmp $l3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $b4 > 0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $b4 > 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: java.util.ArrayDeque queue>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : if $b4 > 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: java.util.ArrayDeque queue>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator: java.util.ArrayDeque queue> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r9 = interfaceinvoke r3.<org.jclouds.blobstore.domain.StorageMetadata: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : $r9 = interfaceinvoke r3.<org.jclouds.blobstore.domain.StorageMetadata: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : virtualinvoke $r8.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r9)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : virtualinvoke $r8.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore$CloudStoreIterator.loadElements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
