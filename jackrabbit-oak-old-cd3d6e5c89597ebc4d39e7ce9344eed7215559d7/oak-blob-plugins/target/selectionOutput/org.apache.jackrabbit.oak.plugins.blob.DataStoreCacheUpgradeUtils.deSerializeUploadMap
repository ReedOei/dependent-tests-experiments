org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r13 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r4 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r4 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "async-pending-uploads.ser")
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "async-pending-uploads.ser") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r2 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : return r13
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r2 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r14 = null
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r14 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r5 = new java.io.BufferedInputStream
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r14 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : throw $r10
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r5 = new java.io.BufferedInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r6 = new java.io.FileInputStream
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r5 = new java.io.BufferedInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r6 = new java.io.FileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r6 = new java.io.FileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r6 = new java.io.FileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r14 = $r5
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r14 = $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r7 = new java.io.ObjectInputStream
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r14 = $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r7 = new java.io.ObjectInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r7 = new java.io.ObjectInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r7 = new java.io.ObjectInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r8 = interfaceinvoke $r7.<java.io.ObjectInput: java.lang.Object readObject()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r8 = interfaceinvoke $r7.<java.io.ObjectInput: java.lang.Object readObject()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r8 = interfaceinvoke $r7.<java.io.ObjectInput: java.lang.Object readObject()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r8 = interfaceinvoke $r7.<java.io.ObjectInput: java.lang.Object readObject()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r13 = (java.util.Map) $r8
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r13 = (java.util.Map) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r13 = (java.util.Map) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : r13 = (java.util.Map) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r5)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : goto [?= $r9 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG>]
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : goto [?= $r9 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r9 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r9 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("AsyncUploadMap read [{}]", r13)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("AsyncUploadMap read [{}]", r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : return r13
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r12 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Error in reading pending uploads map [{}] from location [{}]", "async-pending-uploads.ser", r0)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r12 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Error in reading pending uploads map [{}] from location [{}]", "async-pending-uploads.ser", r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r14)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Error in reading pending uploads map [{}] from location [{}]", "async-pending-uploads.ser", r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : goto [?= $r9 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG>]
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : goto [?= $r9 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.deSerializeUploadMap : $r9 = <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: org.slf4j.Logger LOG>
