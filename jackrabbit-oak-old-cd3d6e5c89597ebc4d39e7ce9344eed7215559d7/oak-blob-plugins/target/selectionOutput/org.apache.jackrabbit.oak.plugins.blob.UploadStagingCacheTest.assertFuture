org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: void waitFinish(java.util.List)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : i3 = 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : i3 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $i0 = lengthof r2
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $i0 = lengthof r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : if i3 >= $i0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : if i3 >= $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader uploader>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : if i3 >= $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : return
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader uploader> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r4 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("12345")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("12345") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $i1 = r2[i3]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $i1 = r2[i3] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : r3 = virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader: java.io.File read(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : r3 = virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader: java.io.File read(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $i2 = r2[i3]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $i2 = r2[i3] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: void assertFile(java.io.File,int,org.junit.rules.TemporaryFolder)>(r3, $i2, $r9)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: void assertFile(java.io.File,int,org.junit.rules.TemporaryFolder)>(r3, $i2, $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : i3 = i3 + 1
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : i3 = i3 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : goto [?= $i0 = lengthof r2]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : goto [?= $i0 = lengthof r2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.assertFuture : $i0 = lengthof r2
