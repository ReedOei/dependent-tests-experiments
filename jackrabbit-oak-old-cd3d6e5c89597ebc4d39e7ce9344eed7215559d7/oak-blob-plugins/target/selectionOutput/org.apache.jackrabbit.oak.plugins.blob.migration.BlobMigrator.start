org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int totalMigratedNodes> = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : $r2 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState getRoot()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : $r2 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState getRoot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void refreshAndReset(org.apache.jackrabbit.oak.spi.state.NodeState)>($r2)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void refreshAndReset(org.apache.jackrabbit.oak.spi.state.NodeState)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean migrate()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean migrate()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.start : return $z0
