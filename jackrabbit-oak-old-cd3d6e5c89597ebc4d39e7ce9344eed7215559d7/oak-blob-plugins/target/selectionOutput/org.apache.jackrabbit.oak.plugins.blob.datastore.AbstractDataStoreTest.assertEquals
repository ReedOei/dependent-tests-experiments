org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= virtualinvoke r2.<java.io.InputStream: void close()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r4 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r2.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= throw $r8]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r2.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r7 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= throw $r8] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : throw $r8
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= virtualinvoke r2.<java.io.InputStream: void close()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r2.<java.io.InputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= virtualinvoke r2.<java.io.InputStream: void close()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r7 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $z0 = staticinvoke <org.apache.commons.io.IOUtils: boolean contentEquals(java.io.InputStream,java.io.InputStream)>(r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("binary not equal", $z0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $z0 = staticinvoke <org.apache.commons.io.IOUtils: boolean contentEquals(java.io.InputStream,java.io.InputStream)>(r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("binary not equal", $z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("binary not equal", $z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("binary not equal", $z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r1.<java.io.InputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= virtualinvoke r2.<java.io.InputStream: void close()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : return
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r2.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r2.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : return
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= virtualinvoke r2.<java.io.InputStream: void close()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : virtualinvoke r2.<java.io.InputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : goto [?= virtualinvoke r2.<java.io.InputStream: void close()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertEquals : $r5 := @caughtexception
