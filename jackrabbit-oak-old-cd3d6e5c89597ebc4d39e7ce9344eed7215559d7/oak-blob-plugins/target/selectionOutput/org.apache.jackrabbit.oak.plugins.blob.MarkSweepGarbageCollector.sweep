org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r8)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l11 = virtualinvoke $r9.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: long mergeAllMarkedReferences(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>($r10, r1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l11 = virtualinvoke $r9.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: long mergeAllMarkedReferences(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>($r10, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r11 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l11 = virtualinvoke $r9.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: long mergeAllMarkedReferences(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>($r10, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r11 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r11 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Earliest reference available for timestamp [{}]", $r12)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Earliest reference available for timestamp [{}]", $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b3 = l11 cmp l0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Earliest reference available for timestamp [{}]", $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b3 = l11 cmp l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b3 >= 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b3 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l12 = l11
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b3 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l12 = l0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l12 = l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $r13 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $r13 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r13 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r13 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>(r0, r1, z0)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>(r0, r1, z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever: java.lang.Integer call()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever: java.lang.Integer call()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void difference(org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>(r1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void difference(org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l14 = 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l14 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l15 = 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l15 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: long getMaxModifiedTime(long)>($l12)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: long getMaxModifiedTime(long)>($l12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r15 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r15 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>("Starting sweep phase of the garbage collector")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>("Starting sweep phase of the garbage collector") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r16 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r16 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r17 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String timestampToString(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r17 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String timestampToString(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Sweeping blobs with modified time > than the configured max deleted time ({}). ", $r17)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Sweeping blobs with modified time > than the configured max deleted time ({}). ", $r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r53 = null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r53 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r54 = null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r54 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l16 = 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l16 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : i17 = 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : i17 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r18 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGarbage()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : i17 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.commons.io.LineIterator: void closeQuietly(org.apache.commons.io.LineIterator)>(r54) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void closeQuietly(java.io.Closeable)>(r53)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void closeQuietly(java.io.Closeable)>(r53) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : throw $r50
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r18 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGarbage()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r19 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r18 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGarbage()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r19 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r53 = staticinvoke <com.google.common.io.Files: java.io.BufferedWriter newWriter(java.io.File,java.nio.charset.Charset)>($r18, $r19)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r19 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r53 = staticinvoke <com.google.common.io.Files: java.io.BufferedWriter newWriter(java.io.File,java.nio.charset.Charset)>($r18, $r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r20 = new java.util.ArrayDeque
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r53 = staticinvoke <com.google.common.io.Files: java.io.BufferedWriter newWriter(java.io.File,java.nio.charset.Charset)>($r18, $r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r20 = new java.util.ArrayDeque >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : specialinvoke $r20.<java.util.ArrayDeque: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r20 = new java.util.ArrayDeque >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : specialinvoke $r20.<java.util.ArrayDeque: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r21 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : specialinvoke $r20.<java.util.ArrayDeque: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r21 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r22 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r21 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r22 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r23 = virtualinvoke $r22.<java.nio.charset.Charset: java.lang.String name()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r22 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r23 = virtualinvoke $r22.<java.nio.charset.Charset: java.lang.String name()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r54 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.LineIterator lineIterator(java.io.File,java.lang.String)>($r21, $r23)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r23 = virtualinvoke $r22.<java.nio.charset.Charset: java.lang.String name()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r54 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.LineIterator lineIterator(java.io.File,java.lang.String)>($r21, $r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $i4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int getBatchCount()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r54 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.LineIterator lineIterator(java.io.File,java.lang.String)>($r21, $r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $i4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int getBatchCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r3 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int)>(r54, $i4)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $i4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int getBatchCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r3 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int)>(r54, $i4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r3 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int)>(r54, $i4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r43 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.commons.io.LineIterator: void closeQuietly(org.apache.commons.io.LineIterator)>(r54)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.commons.io.LineIterator: void closeQuietly(org.apache.commons.io.LineIterator)>(r54) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void closeQuietly(java.io.Closeable)>(r53)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: void closeQuietly(java.io.Closeable)>(r53) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r25 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r24)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r25 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r27 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGarbage()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r27 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGarbage()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r28 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r28 = virtualinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r25.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: void handleRemoves(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,java.io.File,java.io.File)>($r26, $r27, $r28)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r25.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: void handleRemoves(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,java.io.File,java.io.File)>($r26, $r27, $r28) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b5 = l14 cmp l15
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b5 = l14 cmp l15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b5 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r39 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b6 = l16 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b6 = l16 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b6 <= 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b6 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r34 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b6 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r30 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r29)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r30 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r29) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r31 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r31 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r30.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: void removeAllMarkedReferences(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r31)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r30.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType: void removeAllMarkedReferences(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r32 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r32 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r32.<org.slf4j.Logger: void debug(java.lang.String)>("Ending sweep phase of the garbage collector")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r32.<org.slf4j.Logger: void debug(java.lang.String)>("Ending sweep phase of the garbage collector") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : return l15
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r34 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33 = newarray (java.lang.Object)[3]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33[0] = $r35
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33[0] = $r35 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r36 = staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: java.lang.String humanReadableByteCount(long)>(l16)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r36 = staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: java.lang.String humanReadableByteCount(long)>(l16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33[1] = $r36
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33[1] = $r36 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33[2] = $r37
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r33[2] = $r37 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r34.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Estimated size recovered for {} deleted blobs is {} ({} bytes)", $r33)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r34.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Estimated size recovered for {} deleted blobs is {} ({} bytes)", $r33) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r39 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38 = newarray (java.lang.Object)[3]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38[0] = $r40
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38[0] = $r40 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l14)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38[1] = $r41
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38[1] = $r41 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r42 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String timestampToString(long)>(l1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r42 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String timestampToString(long)>(l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38[2] = $r42
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r38[2] = $r42 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r39.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Deleted only [{}] blobs entries from the [{}] candidates identified. This may happen if blob modified time is > than the max deleted time ({})", $r38)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : interfaceinvoke $r39.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Deleted only [{}] blobs entries from the [{}] candidates identified. This may happen if blob modified time is > than the max deleted time ({})", $r38) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b6 = l16 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r43 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r4 = (java.util.List) $r43
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r43 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r4 = (java.util.List) $r43 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $i7 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r4 = (java.util.List) $r43 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $i7 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l8 = (long) $i7
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $i7 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l8 = (long) $i7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l14 = l14 + $l8
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l8 = (long) $i7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l14 = l14 + $l8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r44 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l14 = l14 + $l8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r44 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r45 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r44)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r44 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r45 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r44) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r46 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r45 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r44) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r46 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l9 = virtualinvoke $r45.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: long sweepInternal(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,java.util.List,java.util.ArrayDeque,long)>($r46, r4, $r20, l1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r46 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l9 = virtualinvoke $r45.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: long sweepInternal(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,java.util.List,java.util.ArrayDeque,long)>($r46, r4, $r20, l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l15 = l15 + $l9
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l9 = virtualinvoke $r45.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: long sweepInternal(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,java.util.List,java.util.ArrayDeque,long)>($r46, r4, $r20, l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l15 = l15 + $l9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r47 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r20)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l15 = l15 + $l9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r47 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void saveBatchToFile(java.util.List,java.io.BufferedWriter)>($r47, r53)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r47 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void saveBatchToFile(java.util.List,java.io.BufferedWriter)>($r47, r53) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r5 = virtualinvoke $r20.<java.util.ArrayDeque: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void saveBatchToFile(java.util.List,java.io.BufferedWriter)>($r47, r53) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r5 = virtualinvoke $r20.<java.util.ArrayDeque: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r5 = virtualinvoke $r20.<java.util.ArrayDeque: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r48 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r20.<java.util.ArrayDeque: void clear()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r20.<java.util.ArrayDeque: void clear()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : virtualinvoke $r20.<java.util.ArrayDeque: void clear()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r48 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r6 = (java.lang.String) $r48
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r48 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r6 = (java.lang.String) $r48 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r49 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId of(java.lang.String)>(r6)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : r6 = (java.lang.String) $r48 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r49 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId of(java.lang.String)>(r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l2 = virtualinvoke $r49.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: long getLength()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r49 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId of(java.lang.String)>(r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l2 = virtualinvoke $r49.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: long getLength()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b10 = l2 cmp -1L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l2 = virtualinvoke $r49.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: long getLength()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b10 = l2 cmp -1L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b10 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $b10 = l2 cmp -1L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b10 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l16 = l16 + l2
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b10 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : if $b10 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l16 = l16 + l2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : i17 = i17 + 1
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : l16 = l16 + l2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : i17 = i17 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : i17 = i17 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $r50 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : $l12 = l11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.sweep : goto [?= $r13 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever]
