org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils: boolean isShared(org.apache.jackrabbit.oak.spi.blob.BlobStore)>($r13)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils: boolean isShared(org.apache.jackrabbit.oak.spi.blob.BlobStore)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : return r1
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r16 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) $r14
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r16 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r15 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType REFERENCES>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r15 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType REFERENCES> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r17 = virtualinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getType()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r17 = virtualinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r2 = interfaceinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: java.util.List getAllMetadataRecords(java.lang.String)>($r17)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r2 = interfaceinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: java.util.List getAllMetadataRecords(java.lang.String)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r18 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$2
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r18 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r18.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>(r0)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r18.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r3 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function)>(r2, $r18)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r3 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function)>(r2, $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r21 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) $r19
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r21 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r20 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType MARKED_START_MARKER>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r20 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType MARKED_START_MARKER> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r22 = virtualinvoke $r20.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getType()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r22 = virtualinvoke $r20.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r4 = interfaceinvoke $r21.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: java.util.List getAllMetadataRecords(java.lang.String)>($r22)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r4 = interfaceinvoke $r21.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: java.util.List getAllMetadataRecords(java.lang.String)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r23 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$3
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r23 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$3: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>(r0)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$3: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r5 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function)>(r4, $r23)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r5 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function)>(r4, $r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r26 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) $r24
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r26 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) $r24 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r25 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType REPOSITORY>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r25 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType REPOSITORY> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r27 = virtualinvoke $r25.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getType()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r27 = virtualinvoke $r25.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r6 = interfaceinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: java.util.List getAllMetadataRecords(java.lang.String)>($r27)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r6 = interfaceinvoke $r26.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: java.util.List getAllMetadataRecords(java.lang.String)>($r27) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r28 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : return r1
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r28 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r8 = (org.apache.jackrabbit.core.data.DataRecord) $r28
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r8 = (org.apache.jackrabbit.core.data.DataRecord) $r28 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r29 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType REFERENCES>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r29 = <org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType REFERENCES> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r30 = interfaceinvoke r8.<org.apache.jackrabbit.core.data.DataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r30 = interfaceinvoke r8.<org.apache.jackrabbit.core.data.DataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r31 = virtualinvoke $r30.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r31 = virtualinvoke $r30.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r9 = virtualinvoke $r29.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getIdFromName(java.lang.String)>($r31)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r9 = virtualinvoke $r29.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$SharedStoreRecordType: java.lang.String getIdFromName(java.lang.String)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r32 = new org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r32 = new org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setRepositoryId(java.lang.String)>(r9)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setRepositoryId(java.lang.String)>(r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if r9 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if r9 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r39 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String repoId>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if r9 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z5 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z5 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z5 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r33 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r32)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r32) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r33 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r11 = (org.apache.jackrabbit.core.data.DataRecord) $r33
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r11 = (org.apache.jackrabbit.core.data.DataRecord) $r33 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $l0 = interfaceinvoke r11.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $l0 = interfaceinvoke r11.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setEndTime(long)>($l0)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setEndTime(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $l1 = interfaceinvoke r11.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $l1 = interfaceinvoke r11.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setLength(long)>($l1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setLength(long)>($l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z3 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z3 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z3 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r37 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r41 = null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r41 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r34 = new java.io.LineNumberReader
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r41 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>(r41, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : throw $r40
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r34 = new java.io.LineNumberReader >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r35 = new java.io.InputStreamReader
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r34 = new java.io.LineNumberReader >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r35 = new java.io.InputStreamReader >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r36 = interfaceinvoke r11.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r35 = new java.io.InputStreamReader >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r36 = interfaceinvoke r11.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r35.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r36)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r36 = interfaceinvoke r11.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r35.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r34.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r35)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r35.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r34.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r35) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r41 = $r34
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : specialinvoke $r34.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r35) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r41 = $r34 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r42 = virtualinvoke $r34.<java.io.LineNumberReader: java.lang.String readLine()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r41 = $r34 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r42 = virtualinvoke $r34.<java.io.LineNumberReader: java.lang.String readLine()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $r42 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r42 = virtualinvoke $r34.<java.io.LineNumberReader: java.lang.String readLine()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $r42 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : goto [?= $r42 = virtualinvoke $r34.<java.io.LineNumberReader: java.lang.String readLine()>()]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $r42 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $i2 = virtualinvoke $r34.<java.io.LineNumberReader: int getLineNumber()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $r42 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $i2 = virtualinvoke $r34.<java.io.LineNumberReader: int getLineNumber()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setNumLines(int)>($i2)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $i2 = virtualinvoke $r34.<java.io.LineNumberReader: int getLineNumber()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setNumLines(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r34, 1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setNumLines(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r34, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : goto [?= interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r32)]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : goto [?= interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r32)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r32)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : goto [?= $r42 = virtualinvoke $r34.<java.io.LineNumberReader: java.lang.String readLine()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r42 = virtualinvoke $r34.<java.io.LineNumberReader: java.lang.String readLine()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : goto [?= $r42 = virtualinvoke $r34.<java.io.LineNumberReader: java.lang.String readLine()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r40 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r37 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r38 = (org.apache.jackrabbit.core.data.DataRecord) $r37
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r38 = (org.apache.jackrabbit.core.data.DataRecord) $r37 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $l3 = interfaceinvoke $r38.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $l3 = interfaceinvoke $r38.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setStartTime(long)>($l3)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setStartTime(long)>($l3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : r41 = null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $r39 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String repoId> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r39)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r39) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z4 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z4 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setLocal(boolean)>(1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : if $z4 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z5 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : virtualinvoke $r32.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectionRepoStats: void setLocal(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.getStats : $z5 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
