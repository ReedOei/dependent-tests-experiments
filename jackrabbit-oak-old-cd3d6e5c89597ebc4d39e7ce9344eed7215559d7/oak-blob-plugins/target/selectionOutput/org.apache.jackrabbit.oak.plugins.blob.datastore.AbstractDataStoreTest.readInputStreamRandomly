org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $r5 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : r4 = newarray (byte)[8000]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : r4 = newarray (byte)[8000] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i6 = virtualinvoke r1.<java.io.InputStream: int read()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $z0 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $z0 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i7 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i2 = lengthof r4
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i2 = lengthof r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i3 = $i2 / 2
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i3 = $i2 / 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i8 = virtualinvoke r2.<java.util.Random: int nextInt(int)>($i3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i8 = virtualinvoke r2.<java.util.Random: int nextInt(int)>($i3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i4 = lengthof r4
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i4 = lengthof r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i5 = $i4 / 2
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $i5 = $i4 / 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i0 = virtualinvoke r2.<java.util.Random: int nextInt(int)>($i5)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i0 = virtualinvoke r2.<java.util.Random: int nextInt(int)>($i5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r4, i8, i0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r4, i8, i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i1 >= 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i1 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= virtualinvoke r1.<java.io.InputStream: void close()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i1 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, i8, i1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, i8, i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= virtualinvoke r1.<java.io.InputStream: void close()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke r1.<java.io.InputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $r6 = new java.io.ByteArrayInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $r6 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $r7 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $r7 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : return $r6
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i7 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i7 >= 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i7 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= virtualinvoke r1.<java.io.InputStream: void close()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i7 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, i7)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, i7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= virtualinvoke r1.<java.io.InputStream: void close()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke r1.<java.io.InputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : i6 = virtualinvoke r1.<java.io.InputStream: int read()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i6 >= 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i6 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= virtualinvoke r1.<java.io.InputStream: void close()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : if i6 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(int)>(i6)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(int)>(i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : $z1 = virtualinvoke r2.<java.util.Random: boolean nextBoolean()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : goto [?= virtualinvoke r1.<java.io.InputStream: void close()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.readInputStreamRandomly : virtualinvoke r1.<java.io.InputStream: void close()>()
