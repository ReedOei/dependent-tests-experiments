org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r10 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r1 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>($r10)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r1 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: com.google.common.io.Closer closer>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: com.google.common.io.Closer closer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r11 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r11 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r11.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>(r1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r11.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r12.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r11)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r12.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.concurrent.CountDownLatch taskLatch>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.concurrent.CountDownLatch taskLatch> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r14.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r14.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.List put(org.junit.rules.TemporaryFolder)>($r15)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.List put(org.junit.rules.TemporaryFolder)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r16 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(i0, 4096)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r16 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(i0, 4096) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r18 = virtualinvoke $r17.<org.junit.rules.TemporaryFolder: java.io.File newFile()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r18 = virtualinvoke $r17.<org.junit.rules.TemporaryFolder: java.io.File newFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r16, $r18)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r16, $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r19 = new java.util.concurrent.CountDownLatch
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r19 = new java.util.concurrent.CountDownLatch >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r19.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r19.<java.util.concurrent.CountDownLatch: void <init>(int)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r20 = new java.util.concurrent.CountDownLatch
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r20 = new java.util.concurrent.CountDownLatch >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r20.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r20.<java.util.concurrent.CountDownLatch: void <init>(int)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r21 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r21 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: com.google.common.util.concurrent.SettableFuture putThread(com.google.common.util.concurrent.ListeningExecutorService,int,java.io.File,org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache,java.util.concurrent.CountDownLatch,java.util.concurrent.CountDownLatch)>(r1, i0, r3, $r21, $r19, $r20)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: com.google.common.util.concurrent.SettableFuture putThread(com.google.common.util.concurrent.ListeningExecutorService,int,java.io.File,org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache,java.util.concurrent.CountDownLatch,java.util.concurrent.CountDownLatch)>(r1, i0, r3, $r21, $r19, $r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r19.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r19.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r22 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.concurrent.CountDownLatch callbackLatch>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r22 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.concurrent.CountDownLatch callbackLatch> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r22.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r22.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r25 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.concurrent.ScheduledExecutorService removeExecutor>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r25 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.util.concurrent.ScheduledExecutorService removeExecutor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r23 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$RemoveJob
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r23 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$RemoveJob >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache stagingCache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$RemoveJob: void <init>(org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache)>($r24)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r23.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$RemoveJob: void <init>(org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache)>($r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r27 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r27 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r7 = interfaceinvoke $r25.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r23, 0L, $r27)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r7 = interfaceinvoke $r25.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r23, 0L, $r27) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r20.<java.util.concurrent.CountDownLatch: void await()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r20.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r28 = virtualinvoke r6.<com.google.common.util.concurrent.SettableFuture: java.lang.Object get()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r28 = virtualinvoke r6.<com.google.common.util.concurrent.SettableFuture: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r29 = (com.google.common.base.Optional) $r28
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r29 = (com.google.common.base.Optional) $r28 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $z0 = virtualinvoke $r29.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $z0 = virtualinvoke $r29.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r48 = virtualinvoke r6.<com.google.common.util.concurrent.SettableFuture: java.lang.Object get()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r8 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable)>(r2)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r8 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r8.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r8 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : virtualinvoke $r51.<java.lang.Exception: void printStackTrace()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r32 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(0, 4096)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r32 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(0, 4096) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r33 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r33 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r34 = virtualinvoke $r33.<org.junit.rules.TemporaryFolder: java.io.File newFile()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r34 = virtualinvoke $r33.<org.junit.rules.TemporaryFolder: java.io.File newFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r35 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r32, $r34)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r35 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r32, $r34) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r36 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader uploader>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r36 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader uploader> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r37 = virtualinvoke $r36.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader: java.io.File read(java.lang.String)>("123450")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r37 = virtualinvoke $r36.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader: java.io.File read(java.lang.String)>("123450") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $z1 = staticinvoke <com.google.common.io.Files: boolean equal(java.io.File,java.io.File)>($r35, $r37)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $z1 = staticinvoke <com.google.common.io.Files: boolean equal(java.io.File,java.io.File)>($r35, $r37) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r38 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(i0, 4096)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r38 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(i0, 4096) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r39 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r39 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r40 = virtualinvoke $r39.<org.junit.rules.TemporaryFolder: java.io.File newFile()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r40 = virtualinvoke $r39.<org.junit.rules.TemporaryFolder: java.io.File newFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r41 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r38, $r40)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r41 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r38, $r40) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r43 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader uploader>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r43 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader uploader> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r42 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r42 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("12345")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("12345") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r47 = virtualinvoke $r43.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader: java.io.File read(java.lang.String)>($r46)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r47 = virtualinvoke $r43.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestStagingUploader: java.io.File read(java.lang.String)>($r46) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $z2 = staticinvoke <com.google.common.io.Files: boolean equal(java.io.File,java.io.File)>($r41, $r47)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $z2 = staticinvoke <com.google.common.io.Files: boolean equal(java.io.File,java.io.File)>($r41, $r47) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : return
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r8.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r7.<java.util.concurrent.ScheduledFuture: java.lang.Object get()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r8.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r7.<java.util.concurrent.ScheduledFuture: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : goto [?= $r32 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(0, 4096)]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r7.<java.util.concurrent.ScheduledFuture: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r51 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : goto [?= $r32 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(0, 4096)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r32 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(0, 4096)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r48 = virtualinvoke r6.<com.google.common.util.concurrent.SettableFuture: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r49 = (com.google.common.base.Optional) $r48
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r49 = (com.google.common.base.Optional) $r48 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r50 = virtualinvoke $r49.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : $r50 = virtualinvoke $r49.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r50)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r50) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.testConcurrentPutDelete : r8 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable)>(r2)
