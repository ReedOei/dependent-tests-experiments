org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : r3 = interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : r3 = interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : throw $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i0 = lengthof r1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i0 = lengthof r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : if i8 >= $i0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i0 = lengthof r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : if i8 >= $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $b3 = r1[i8]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : if i8 >= $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i1 = virtualinvoke r3.<java.io.InputStream: int read()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : if i8 >= $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i1 = virtualinvoke r3.<java.io.InputStream: int read()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l2 = (long) $i1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i1 = virtualinvoke r3.<java.io.InputStream: int read()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l2 = (long) $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l2)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l2 = (long) $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : virtualinvoke r3.<java.io.InputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : return
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $b3 = r1[i8] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $s4 = $b3 & 255
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $b3 = r1[i8] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $s4 = $b3 & 255 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l5 = (long) $s4
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $s4 = $b3 & 255 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l5 = (long) $s4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i6 = virtualinvoke r3.<java.io.InputStream: int read()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l5 = (long) $s4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i6 = virtualinvoke r3.<java.io.InputStream: int read()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l7 = (long) $i6
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i6 = virtualinvoke r3.<java.io.InputStream: int read()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l7 = (long) $i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $l7 = (long) $i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = i8 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = i8 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= $i0 = lengthof r1]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : i8 = i8 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= $i0 = lengthof r1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $i0 = lengthof r1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : goto [?= $i0 = lengthof r1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.assertRecord : $r5 := @caughtexception
