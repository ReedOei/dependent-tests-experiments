org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map metadata>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map metadata> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : return r2
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : r4 = (java.util.Map$Entry) $r7
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : r4 = (java.util.Map$Entry) $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r9 = (java.lang.String) $r8
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
