org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : r2 = virtualinvoke r1.<org.junit.rules.TemporaryFolder: java.io.File newFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : $r4 = new java.io.FileInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : $r4 = new java.io.FileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : $r5 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : $r5 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : $r6 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.io.File get(java.lang.String)>($r5)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : $r6 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.io.File get(java.lang.String)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: java.util.Set readStringsAsSet(java.io.InputStream,boolean)>($r4, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: java.util.Set readStringsAsSet(java.io.InputStream,boolean)>($r4, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.retrieveFile : return r3
