org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("properties")
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("properties") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreServiceTest.getField : return $r3
