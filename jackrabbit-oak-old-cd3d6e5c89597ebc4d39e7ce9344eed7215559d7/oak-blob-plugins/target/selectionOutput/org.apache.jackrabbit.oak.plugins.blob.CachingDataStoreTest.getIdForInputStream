org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r10 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r11 = null
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r11 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r5 = new java.io.FileInputStream
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r11 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r10)
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : throw $r9
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r5 = new java.io.FileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r1)
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r5 = new java.io.FileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r10 = $r5
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r10 = $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256")
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r10 = $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r6 = new java.security.DigestOutputStream
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r6 = new java.security.DigestOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r7 = new org.apache.commons.io.output.NullOutputStream
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r6 = new java.security.DigestOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r7 = new org.apache.commons.io.output.NullOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r7.<org.apache.commons.io.output.NullOutputStream: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r7 = new org.apache.commons.io.output.NullOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r7.<org.apache.commons.io.output.NullOutputStream: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r6.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r7, r2)
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r7.<org.apache.commons.io.output.NullOutputStream: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r6.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r7, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r11 = $r6
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : specialinvoke $r6.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r7, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r11 = $r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>($r5, $r6)
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r11 = $r6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>($r5, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r8 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>($r5, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r8 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r3 = staticinvoke <org.apache.commons.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r8)
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r8 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r3 = staticinvoke <org.apache.commons.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r6)
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : r3 = staticinvoke <org.apache.commons.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r5)
org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingDataStoreTest.getIdForInputStream : return r3
