org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r5 = new java.util.HashSet >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : i4 = 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : i4 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : if i4 >= i0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : if i4 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : if i4 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r6 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r6 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $i2 = virtualinvoke $r5.<java.util.HashSet: int size()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $i2 = virtualinvoke $r5.<java.util.HashSet: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("{} Additional created {}", $r7, $r5)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("{} Additional created {}", $r7, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : return $r5
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $i3 = 100 + i4
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $i3 = 100 + i4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: java.io.InputStream randomStream(int,int)>($i3, i1)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: java.io.InputStream randomStream(int,int)>($i3, i1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : r2 = interfaceinvoke $r8.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.lang.String writeBlob(java.io.InputStream)>($r9)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : r2 = interfaceinvoke $r8.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.lang.String writeBlob(java.io.InputStream)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : r3 = interfaceinvoke $r10.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.util.Iterator resolveChunks(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : r3 = interfaceinvoke $r10.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.util.Iterator resolveChunks(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : i4 = i4 + 1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : i4 = i4 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : if i4 >= i0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : r4 = (java.lang.String) $r11
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : r4 = (java.lang.String) $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.createBlobs : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
