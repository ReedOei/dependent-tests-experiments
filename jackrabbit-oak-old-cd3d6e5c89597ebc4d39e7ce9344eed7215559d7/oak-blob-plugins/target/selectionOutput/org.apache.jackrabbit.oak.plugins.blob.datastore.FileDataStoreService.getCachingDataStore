org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r5 = new org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r6 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>("stagingSplitPercentage")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r6 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>("stagingSplitPercentage") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r6, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r6, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setStagingSplitPercentage(int)>($i0)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setStagingSplitPercentage(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setProperties(java.util.Properties)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: void setProperties(java.util.Properties)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r7 = new java.util.Hashtable
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r7 = new java.util.Hashtable >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r7.<java.util.Hashtable: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : specialinvoke $r7.<java.util.Hashtable: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r11 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: java.lang.String[] getDescription()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r11 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: java.lang.String[] getDescription()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.datastore.description", $r11)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : virtualinvoke $r7.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.datastore.description", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r13 = interfaceinvoke r2.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r13 = interfaceinvoke r2.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14 = newarray (java.lang.String)[2]
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14 = newarray (java.lang.String)[2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r15 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r15 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[0] = $r16
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[0] = $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r17 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r17 = class "Lorg/apache/jackrabbit/oak/plugins/blob/AbstractSharedCachingDataStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[1] = $r18
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r14[1] = $r18 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r19 = interfaceinvoke $r13.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r14, $r5, $r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : $r19 = interfaceinvoke $r13.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r14, $r5, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.osgi.framework.ServiceRegistration delegateReg> = $r19
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.osgi.framework.ServiceRegistration delegateReg> = $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.getCachingDataStore : return $r5
