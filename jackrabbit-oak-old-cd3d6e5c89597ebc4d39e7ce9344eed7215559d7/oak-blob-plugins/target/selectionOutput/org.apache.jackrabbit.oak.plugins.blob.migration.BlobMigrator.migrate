org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $r1 != null
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $r1 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $r1 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z5 = virtualinvoke $r9.<org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z5 = virtualinvoke $r9.<org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z5 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z5 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $i0 <= 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $i0 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean tryCommit()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $i0 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : return 1
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean tryCommit()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : return 1
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r3 = virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r3 = virtualinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String lastPath> = $r3
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String lastPath> = $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.util.concurrent.atomic.AtomicBoolean stopMigration>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.util.concurrent.atomic.AtomicBoolean stopMigration> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z1 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z1 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.state.NodeBuilder rootBuilder>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.state.NodeBuilder rootBuilder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void migrateNode(org.apache.jackrabbit.oak.spi.state.NodeBuilder,org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator)>($r6, $r5)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void migrateNode(org.apache.jackrabbit.oak.spi.state.NodeBuilder,org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator)>($r6, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean timeToCommit()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $z2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean timeToCommit()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean tryCommit()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean tryCommit()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : goto [?= $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : goto [?= $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $i1 <= 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $i1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean tryCommit()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : if $i1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : return 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean tryCommit()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : return 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r8 = interfaceinvoke $r7.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState getRoot()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r8 = interfaceinvoke $r7.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState getRoot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void refreshAndReset(org.apache.jackrabbit.oak.spi.state.NodeState)>($r8)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void refreshAndReset(org.apache.jackrabbit.oak.spi.state.NodeState)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrate : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator nodeIterator>
