org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $z0 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: boolean isArray()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r7 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES>
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r4 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY>
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r4 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r5 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r4)
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r5 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r6 = (org.apache.jackrabbit.oak.api.Blob) $r5
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r6 = (org.apache.jackrabbit.oak.api.Blob) $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $l0 = interfaceinvoke $r6.<org.apache.jackrabbit.oak.api.Blob: long length()>()
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $l0 = interfaceinvoke $r6.<org.apache.jackrabbit.oak.api.Blob: long length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(16384L, $l0)
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(16384L, $l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : return
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r7 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r7)
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r9 = (java.lang.Iterable) $r8
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r9 = (java.lang.Iterable) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : r2 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : r2 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : return
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : r3 = (org.apache.jackrabbit.oak.api.Blob) $r10
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : r3 = (org.apache.jackrabbit.oak.api.Blob) $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $l1 = interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Blob: long length()>()
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $l1 = interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Blob: long length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(16384L, $l1)
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(16384L, $l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.AbstractMigratorTest.assertPropertyExists : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
