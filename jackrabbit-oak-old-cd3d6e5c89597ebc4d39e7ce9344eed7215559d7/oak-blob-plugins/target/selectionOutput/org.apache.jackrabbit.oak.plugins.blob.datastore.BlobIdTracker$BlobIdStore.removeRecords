org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void snapshot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.concurrent.locks.ReentrantLock refLock>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.concurrent.locks.ReentrantLock refLock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r5 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.concurrent.locks.ReentrantLock refLock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r14 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to delete file {}", r1, $r13)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to delete file {}", r1, $r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : throw $r11
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= throw $r11]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= throw $r11] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : throw $r11
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r5 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>($r5)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r5 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String)>("Sorted files")
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String)>("Sorted files") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r18 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("sorted", null)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String)>("Sorted files") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r18 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("sorted", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r19 = null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r18 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("sorted", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r19 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r17 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r19 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r19 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r7 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r7 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r8 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r7 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r17 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : if r19 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke r19.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : if r19 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : throw $r17
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : if r19 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : throw $r17 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke r19.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : throw $r17
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke r19.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r8 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : specialinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r1, $r8, null)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r8 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r17 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : specialinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r1, $r8, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r19 = $r7
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : specialinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r1, $r8, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r17 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r19 = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r7, r18, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r19 = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r17 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r7, r18, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r17 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r7, r18, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r7, r18, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : if $r7 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : if $r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : if $r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r21 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : if $r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r21 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <com.google.common.io.Files: void move(java.io.File,java.io.File)>(r18, r21)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r21 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <com.google.common.io.Files: void move(java.io.File,java.io.File)>(r18, r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <com.google.common.io.Files: void move(java.io.File,java.io.File)>(r18, r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String)>("removed records")
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String)>("removed records") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.concurrent.locks.ReentrantLock refLock>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String)>("removed records") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.util.concurrent.locks.ReentrantLock refLock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r16 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to delete file {}", r1, $r15)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to delete file {}", r1, $r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : return
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : return
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= r21 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : virtualinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= r21 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : r21 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : goto [?= r21 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore.removeRecords : $r11 := @caughtexception
