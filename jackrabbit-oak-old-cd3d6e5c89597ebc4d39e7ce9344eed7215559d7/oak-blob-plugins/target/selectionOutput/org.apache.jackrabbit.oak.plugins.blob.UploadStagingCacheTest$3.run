org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r12 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Exception in get", $r11)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Exception in get", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : return
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Waiting for start of copying")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Waiting for start of copying") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.util.concurrent.CountDownLatch val$start>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Waiting for start of copying") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.util.concurrent.CountDownLatch val$start> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.util.concurrent.CountDownLatch val$start> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Starting copy of [{}]", $r5)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Starting copy of [{}]", $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.InputStream val$fStream>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Starting copy of [{}]", $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.InputStream val$fStream> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.InputStream val$fStream> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : staticinvoke <org.apache.commons.io.FileUtils: void copyInputStreamToFile(java.io.InputStream,java.io.File)>($r7, $r6)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : staticinvoke <org.apache.commons.io.FileUtils: void copyInputStreamToFile(java.io.InputStream,java.io.File)>($r7, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : staticinvoke <org.apache.commons.io.FileUtils: void copyInputStreamToFile(java.io.InputStream,java.io.File)>($r7, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Finished retrieve")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Finished retrieve") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: com.google.common.util.concurrent.SettableFuture val$future>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Finished retrieve") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: com.google.common.util.concurrent.SettableFuture val$future> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: com.google.common.util.concurrent.SettableFuture val$future> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : virtualinvoke $r10.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>($r9)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3: java.io.File val$temp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : virtualinvoke $r10.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : virtualinvoke $r10.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest$3.run : return
