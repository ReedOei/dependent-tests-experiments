org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r3 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r5 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r4 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r4 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Marked references not available")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Marked references not available") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : throw $r4
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r5 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $l0 = virtualinvoke $r5.<java.io.File: long length()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $l0 = virtualinvoke $r5.<java.io.File: long length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $b1 = $l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $b1 = $l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : if $b1 != 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : if $b1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r4 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : if $b1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r6 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $r6 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $l2 = virtualinvoke $r6.<java.io.File: long lastModified()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : $l2 = virtualinvoke $r6.<java.io.File: long lastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$GarbageCollectionType.mergeAllMarkedReferences : return $l2
