org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation gcOp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $z2 = virtualinvoke $r1.<org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: boolean isDone()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $z2 = virtualinvoke $r1.<org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: boolean isDone()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r3 = new org.apache.jackrabbit.oak.plugins.blob.BlobGC$2
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: javax.management.openmbean.CompositeData getBlobGCStatus()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: javax.management.openmbean.CompositeData getBlobGCStatus()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : return $r2
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r3 = new org.apache.jackrabbit.oak.plugins.blob.BlobGC$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.BlobGC$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.BlobGC,boolean,boolean)>(r0, z0, z1)
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.BlobGC$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.BlobGC,boolean,boolean)>(r0, z0, z1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r4 = staticinvoke <org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation newManagementOperation(java.lang.String,java.util.concurrent.Callable)>("Blob garbage collection", $r3)
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r4 = staticinvoke <org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation newManagementOperation(java.lang.String,java.util.concurrent.Callable)>("Blob garbage collection", $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation gcOp> = $r4
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation gcOp> = $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: java.util.concurrent.Executor executor>
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: java.util.concurrent.Executor executor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation gcOp>
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation gcOp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5)
org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGC.startBlobGC : $r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGC: javax.management.openmbean.CompositeData getBlobGCStatus()>()
