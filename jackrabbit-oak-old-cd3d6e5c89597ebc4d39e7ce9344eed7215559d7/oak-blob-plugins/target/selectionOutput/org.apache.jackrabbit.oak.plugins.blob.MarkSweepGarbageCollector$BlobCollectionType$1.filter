org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r9 = virtualinvoke r3.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>(r2, $r9, 1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>(r2, $r9, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r4 = (org.apache.jackrabbit.oak.plugins.blob.BlobTrackingStore) r1
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r4 = (org.apache.jackrabbit.oak.plugins.blob.BlobTrackingStore) r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r10 = interfaceinvoke r4.<org.apache.jackrabbit.oak.plugins.blob.BlobTrackingStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker getTracker()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r10 = interfaceinvoke r4.<org.apache.jackrabbit.oak.plugins.blob.BlobTrackingStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker getTracker()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r5 = (org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker) $r10
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r5 = (org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker) $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r6 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("candTemp", null)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r6 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("candTemp", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r11 = virtualinvoke r3.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r11 = virtualinvoke r3.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>($r11, r6)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>($r11, r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r12 = virtualinvoke r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker getDeleteTracker()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r12 = virtualinvoke r5.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker getDeleteTracker()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r7 = virtualinvoke $r12.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.Iterator filter(java.io.File)>(r6)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r7 = virtualinvoke $r12.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.Iterator filter(java.io.File)>(r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r13 = virtualinvoke r3.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : r7 = virtualinvoke $r12.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.Iterator filter(java.io.File)>(r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $z3 = r7 instanceof org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke r6.<java.io.File: boolean delete()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : throw $r15
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke r6.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : throw $r15
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $z3 = r7 instanceof org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if $z3 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r16 = (org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator) r7
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r16 = (org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator) r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke $r16.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke $r16.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r13 = virtualinvoke r3.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : i0 = staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>(r7, $r13, 1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r13 = virtualinvoke r3.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : i0 = staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>(r7, $r13, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r7 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : i0 = staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>(r7, $r13, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $z1 = r7 instanceof org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke r6.<java.io.File: boolean delete()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : return i0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke r6.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : return i0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $z1 = r7 instanceof org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r14 = (org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator) r7
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : $r14 = (org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator) r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke $r14.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : virtualinvoke $r14.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType$1.filter : if r6 == null
