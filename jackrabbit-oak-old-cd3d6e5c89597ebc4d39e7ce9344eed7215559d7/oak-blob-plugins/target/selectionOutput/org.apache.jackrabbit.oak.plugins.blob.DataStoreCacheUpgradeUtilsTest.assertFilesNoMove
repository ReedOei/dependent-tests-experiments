org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : i0 = lengthof r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : i2 = 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : i2 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : if i2 >= i0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : if i2 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : r4 = r2[i2]
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : if i2 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : return
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : r4 = r2[i2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File path>
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : r12 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File getFile(java.lang.String,java.io.File)>(r4, $r5)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : r12 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File getFile(java.lang.String,java.io.File)>(r4, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $z0 = virtualinvoke r12.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $z0 = virtualinvoke r12.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.InputStream randomStream(int,int)>($i1, 4096)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.InputStream randomStream(int,int)>($i1, 4096) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: org.junit.rules.TemporaryFolder folder>
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: org.junit.rules.TemporaryFolder folder> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r8 = virtualinvoke $r7.<org.junit.rules.TemporaryFolder: java.io.File newFile()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r8 = virtualinvoke $r7.<org.junit.rules.TemporaryFolder: java.io.File newFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r6, $r8)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r9 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r6, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $z1 = staticinvoke <com.google.common.io.Files: boolean equal(java.io.File,java.io.File)>(r12, $r9)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $z1 = staticinvoke <com.google.common.io.Files: boolean equal(java.io.File,java.io.File)>(r12, $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r10 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r10 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File path>
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, r1)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : r13 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File getFile(java.lang.String,java.io.File)>(r4, $r10)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : r13 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest: java.io.File getFile(java.lang.String,java.io.File)>(r4, $r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $z2 = virtualinvoke r13.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : $z2 = virtualinvoke r13.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : i2 = i2 + 1
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : i2 = i2 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtilsTest.assertFilesNoMove : if i2 >= i0
