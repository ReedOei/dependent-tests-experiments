org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : r3 = "123451" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(1, 4096)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.InputStream randomStream(int,int)>(1, 4096) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File root>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File root> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File getFile(java.lang.String,java.io.File)>("123451", $r7)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File getFile(java.lang.String,java.io.File)>("123451", $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r6, $r8)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: java.io.File copyToFile(java.io.InputStream,java.io.File)>($r6, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r10 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r11 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, 2)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r11 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, 2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r14 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(2, 4)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r14 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(2, 4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("123451")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("123451") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : r4 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : r4 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : r5 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : r5 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r18)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: void serializeMap(java.util.Map,java.io.File)>(r5, r2)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest: void serializeMap(java.util.Map,java.io.File)>(r5, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCacheTest.createUpgradeLoad : return
