org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: int dataLength> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : r1 = newarray (byte)[$i0]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : r1 = newarray (byte)[$i0] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: java.util.Random randomGen>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: java.util.Random randomGen> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: org.apache.jackrabbit.core.data.DataStore ds>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: org.apache.jackrabbit.core.data.DataStore ds> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r3 = new java.io.ByteArrayInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r3 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : r7 = interfaceinvoke $r4.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : r7 = interfaceinvoke $r4.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: org.apache.jackrabbit.core.data.DataStore ds>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: org.apache.jackrabbit.core.data.DataStore ds> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r6 = interfaceinvoke r7.<org.apache.jackrabbit.core.data.DataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $r6 = interfaceinvoke r7.<org.apache.jackrabbit.core.data.DataRecord: org.apache.jackrabbit.core.data.DataIdentifier getIdentifier()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : r8 = interfaceinvoke $r5.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord getRecord(org.apache.jackrabbit.core.data.DataIdentifier)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : r8 = interfaceinvoke $r5.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord getRecord(org.apache.jackrabbit.core.data.DataIdentifier)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $i1 = lengthof r1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $i1 = lengthof r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $l2 = (long) $i1
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $l2 = (long) $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $l3 = interfaceinvoke r8.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : $l3 = interfaceinvoke r8.<org.apache.jackrabbit.core.data.DataRecord: long getLength()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: void assertRecord(byte[],org.apache.jackrabbit.core.data.DataRecord)>(r1, r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest: void assertRecord(byte[],org.apache.jackrabbit.core.data.DataRecord)>(r1, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreTest.doGetRecordTest : return
