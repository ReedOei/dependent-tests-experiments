org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : i6 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $l1 = (long) i6
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $l1 = (long) i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : return $l1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : r3 = (java.lang.String) $r4
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : r3 = (java.lang.String) $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r5 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r5 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("maxLastModifiedTime {}", $r6)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("maxLastModifiedTime {}", $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r8 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r8 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map store>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r10 = (org.apache.jackrabbit.core.data.DataRecord) $r9
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r10 = (org.apache.jackrabbit.core.data.DataRecord) $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $l2 = interfaceinvoke $r10.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $l2 = interfaceinvoke $r10.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("store.get(id).getLastModified() {}", $r11)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("store.get(id).getLastModified() {}", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $b3 = l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $b3 = l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $b3 <= 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $b3 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map store>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $b3 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map store>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : i6 = i6 + 1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : i6 = i6 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r16 = (org.apache.jackrabbit.core.data.DataRecord) $r15
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r16 = (org.apache.jackrabbit.core.data.DataRecord) $r15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $l4 = interfaceinvoke $r16.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $l4 = interfaceinvoke $r16.<org.apache.jackrabbit.core.data.DataRecord: long getLastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $b5 = $l4 cmp l0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $b5 = $l4 cmp l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $b5 >= 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $b5 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map store>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : if $b5 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.countDeleteChunks : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
