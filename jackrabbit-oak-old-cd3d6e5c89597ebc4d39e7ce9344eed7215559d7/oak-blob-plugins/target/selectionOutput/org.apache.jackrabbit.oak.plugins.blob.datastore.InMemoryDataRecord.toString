org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r4 = "0x"
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r4 = "0x" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i3 = virtualinvoke $r4.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i3 = virtualinvoke $r4.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i4 = lengthof $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i4 = lengthof $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i5 = 2 * $i4
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i5 = 2 * $i4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i6 = $i3 + $i5
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $i6 = $i3 + $i5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i6)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i0 = lengthof r2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i0 = lengthof r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : if i9 >= i0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : if i9 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : b1 = r2[i9]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : if i9 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : return $r7
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : b1 = r2[i9] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : s2 = b1 & 255
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : s2 = b1 & 255 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s7 = s2 >> 4
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s7 = s2 >> 4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s7)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s8 = s2 & 15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s8 = s2 & 15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s8)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = i9 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : i9 = i9 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : if i9 >= i0
