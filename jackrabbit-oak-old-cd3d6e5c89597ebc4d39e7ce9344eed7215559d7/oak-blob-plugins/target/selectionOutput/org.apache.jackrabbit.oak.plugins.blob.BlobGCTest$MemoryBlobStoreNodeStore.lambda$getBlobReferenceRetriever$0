org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore: java.util.Set referencedBlobs> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : return
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : r3 = (java.lang.String) $r5
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : interfaceinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.ReferenceCollector: void addReference(java.lang.String,java.lang.String)>(r3, null)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : interfaceinvoke r1.<org.apache.jackrabbit.oak.plugins.blob.ReferenceCollector: void addReference(java.lang.String,java.lang.String)>(r3, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$MemoryBlobStoreNodeStore.lambda$getBlobReferenceRetriever$0 : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
