org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : z2 = 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r4 = new org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r4 = new org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String root>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.lang.String root> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: void <init>(java.lang.String)>($r5)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : l4 = 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : l4 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r6 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : l4 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r29 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $z1 = interfaceinvoke $r29.<org.slf4j.Logger: boolean isTraceEnabled()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $z1 = interfaceinvoke $r29.<org.slf4j.Logger: boolean isTraceEnabled()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $b3 = l4 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : throw $r28
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $b3 = l4 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b3 != 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r4, z2)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : throw $r28
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r4, z2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : throw $r28
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r6 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Starting blob consistency check")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r6 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Starting blob consistency check") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r7 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Starting blob consistency check") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r7 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>(r0, $r4, 1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r7 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>(r0, $r4, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : r2 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>($r7)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobIdRetriever: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>(r0, $r4, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : r2 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.util.concurrent.Executor executor>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : r2 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.util.concurrent.Executor executor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: java.util.concurrent.Executor executor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void iterateNodeTree(org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>($r4, 1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void iterateNodeTree(org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>($r4, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void iterateNodeTree(org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>($r4, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void iterateNodeTree(org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState,boolean)>($r4, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r2.<com.google.common.util.concurrent.ListenableFutureTask: java.lang.Object get()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r2.<com.google.common.util.concurrent.ListenableFutureTask: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r2.<com.google.common.util.concurrent.ListenableFutureTask: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : virtualinvoke r2.<com.google.common.util.concurrent.ListenableFutureTask: java.lang.Object get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : goto [?= $r10 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : goto [?= $r10 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r10 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : goto [?= $r10 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r10 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String)>("Starting difference phase of the consistency check")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r10 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String)>("Starting difference phase of the consistency check") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r11 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String)>("Starting difference phase of the consistency check") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r11 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r12 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getAvailableRefs()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r11 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r12 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getAvailableRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r13 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r12 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getAvailableRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r13 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r14 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: com.google.common.base.Function transformer>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r13 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getMarkedRefs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r14 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: com.google.common.base.Function transformer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r11.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>($r12, $r13, $r14)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r14 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: com.google.common.base.Function transformer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r11.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>($r12, $r13, $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : specialinvoke $r11.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>($r12, $r13, $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r16 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r15)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r16 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r16 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType get(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $i0 = virtualinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: int filter(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>($r17, $r11, $r4)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $i0 = virtualinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: int filter(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>($r17, $r11, $r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : l4 = (long) $i0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $i0 = virtualinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$BlobCollectionType: int filter(org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore,org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator,org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState)>($r17, $r11, $r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : l4 = (long) $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r18 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : l4 = (long) $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r18 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r18.<org.slf4j.Logger: void trace(java.lang.String)>("Ending difference phase of the consistency check")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r18 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r18.<org.slf4j.Logger: void trace(java.lang.String)>("Ending difference phase of the consistency check") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r19 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r18.<org.slf4j.Logger: void trace(java.lang.String)>("Ending difference phase of the consistency check") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r19 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r19 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Consistency check found [{}] missing blobs", $r20)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Consistency check found [{}] missing blobs", $r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $b1 = l4 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Consistency check found [{}] missing blobs", $r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $b1 = l4 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $b1 = l4 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r22 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r21 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r21 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $z0 = interfaceinvoke $r21.<org.slf4j.Logger: boolean isTraceEnabled()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $z0 = interfaceinvoke $r21.<org.slf4j.Logger: boolean isTraceEnabled()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $b2 = l4 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : return l4
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $b2 = l4 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b2 != 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r4, 1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : if $b2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : return l4
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r4, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : goto [?= return l4]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : goto [?= return l4] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : return l4
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r22 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r23 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r22 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r23 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r24 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r23 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r24 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r25 = virtualinvoke $r24.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r24 = virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File getGcCandidates()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r25 = virtualinvoke $r24.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Consistency check failure in the the blob store : {}, check missing candidates in file {}", $r23, $r25)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r25 = virtualinvoke $r24.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Consistency check failure in the the blob store : {}, check missing candidates in file {}", $r23, $r25) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r21 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Consistency check failure in the the blob store : {}, check missing candidates in file {}", $r23, $r25) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r27 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String)>("Error occurred while fetching all the blobIds from the BlobStore")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r27 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String)>("Error occurred while fetching all the blobIds from the BlobStore") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : z2 = 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String)>("Error occurred while fetching all the blobIds from the BlobStore") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : z2 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : throw $r26
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : z2 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : throw $r26 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector.checkConsistency : $r28 := @caughtexception
