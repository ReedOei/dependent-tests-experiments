org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r7 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : specialinvoke $r7.<java.io.IOException: void <init>(java.lang.Throwable)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : specialinvoke $r7.<java.io.IOException: void <init>(java.lang.Throwable)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : throw $r7
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataRecord getDataRecord(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : r8 = interfaceinvoke $r2.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataRecord getDataRecord(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : r8 = interfaceinvoke $r2.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $z0 = r8 instanceof java.io.BufferedInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : r8 = interfaceinvoke $r2.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $z0 = r8 instanceof java.io.BufferedInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r5 = new java.io.BufferedInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r4 = staticinvoke <org.apache.jackrabbit.oak.spi.blob.stats.StatsCollectingStreams: java.io.InputStream wrap(org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector,java.lang.String,java.io.InputStream)>($r3, r1, r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r4 = staticinvoke <org.apache.jackrabbit.oak.spi.blob.stats.StatsCollectingStreams: java.io.InputStream wrap(org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector,java.lang.String,java.io.InputStream)>($r3, r1, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : return $r4
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r4 = staticinvoke <org.apache.jackrabbit.oak.spi.blob.stats.StatsCollectingStreams: java.io.InputStream wrap(org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector,java.lang.String,java.io.InputStream)>($r3, r1, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r5 = new java.io.BufferedInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r5 = new java.io.BufferedInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : r8 = $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : r8 = $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats>
