org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r6 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r6 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r4, $r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r4, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : return 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : r3 = (java.io.File) $r8
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : r3 = (java.io.File) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $z1 = virtualinvoke r3.<java.io.File: boolean isDirectory()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $z1 = virtualinvoke r3.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $z2 = virtualinvoke r3.<java.io.File: boolean delete()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $z2 = virtualinvoke r3.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z2 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r10 = <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : return 1
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r10 = <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r9 = newarray (java.lang.Object)[1]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r9 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r11 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r11 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r9[0] = $r11
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : $r9[0] = $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Failed to delete root record {} ", $r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Failed to delete root record {} ", $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteMetadataRecord : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
