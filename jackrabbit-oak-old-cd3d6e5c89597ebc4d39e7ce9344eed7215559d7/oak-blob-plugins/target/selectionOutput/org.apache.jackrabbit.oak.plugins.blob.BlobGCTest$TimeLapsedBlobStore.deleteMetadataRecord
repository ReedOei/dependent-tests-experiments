org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map metadata> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map metadata>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore: java.util.Map metadata> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : return 1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$TimeLapsedBlobStore.deleteMetadataRecord : return 0
