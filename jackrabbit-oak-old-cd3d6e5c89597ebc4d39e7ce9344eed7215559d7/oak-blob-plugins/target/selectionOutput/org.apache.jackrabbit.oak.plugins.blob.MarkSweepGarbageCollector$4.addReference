org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z0 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: boolean debugMode> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r21 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r23 = new java.lang.RuntimeException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error in retrieving references", $r22)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error in retrieving references", $r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : throw $r23
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r7 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore access$000(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r6)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r7 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore access$000(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r24 = interfaceinvoke $r7.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.util.Iterator resolveChunks(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r7 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore access$000(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r24 = interfaceinvoke $r7.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.util.Iterator resolveChunks(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r8 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",")
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r24 = interfaceinvoke $r7.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.util.Iterator resolveChunks(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r8 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r3 = virtualinvoke $r8.<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r8 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r3 = virtualinvoke $r8.<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r3 = virtualinvoke $r8.<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int access$100(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r9)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int access$100(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r4 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int)>(r24, $i0)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int access$100(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r4 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int)>(r24, $i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r4 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int)>(r24, $i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i1 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int get()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i1 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i1 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int access$100(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r11)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int access$100(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i3 = $i1 % $i2
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: int access$100(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i3 = $i1 % $i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $i3 != 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i3 = $i1 % $i2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $i3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r13 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $i3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : return
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r13 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r13 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i4 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i4 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i4 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Collected ({}) blob references", $r14)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Collected ({}) blob references", $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Collected ({}) blob references", $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r17 = (java.util.List) $r15
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r17 = (java.util.List) $r15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r16 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4$1
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r17 = (java.util.List) $r15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r16 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : specialinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4,com.google.common.base.Joiner,java.lang.String)>(r0, r3, r2)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r16 = new org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : specialinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4,com.google.common.base.Joiner,java.lang.String)>(r0, r3, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r5 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r17, $r16)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : specialinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4,com.google.common.base.Joiner,java.lang.String)>(r0, r3, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r5 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r17, $r16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z1 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: boolean debugMode>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : r5 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r17, $r16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z1 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: boolean debugMode> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z1 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: boolean debugMode> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r20 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i5 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i5 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : virtualinvoke $r18.<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>($i5)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $i5 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : virtualinvoke $r18.<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>($i5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.io.BufferedWriter val$writer>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : virtualinvoke $r18.<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>($i5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.io.BufferedWriter val$writer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void saveBatchToFile(java.util.List,java.io.BufferedWriter)>(r5, $r19)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.io.BufferedWriter val$writer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void saveBatchToFile(java.util.List,java.io.BufferedWriter)>(r5, $r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: void saveBatchToFile(java.util.List,java.io.BufferedWriter)>(r5, $r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r20 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r20.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("chunkIds : {}", r5)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r20 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r20.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("chunkIds : {}", r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: java.util.concurrent.atomic.AtomicInteger val$count>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r20.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("chunkIds : {}", r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r21 = <org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("BlobId : {}, NodeId : {}", r1, r2)
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("BlobId : {}, NodeId : {}", r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4: org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector this$0>
org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : interfaceinvoke $r21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("BlobId : {}, NodeId : {}", r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.MarkSweepGarbageCollector$4.addReference : $r22 := @caughtexception
