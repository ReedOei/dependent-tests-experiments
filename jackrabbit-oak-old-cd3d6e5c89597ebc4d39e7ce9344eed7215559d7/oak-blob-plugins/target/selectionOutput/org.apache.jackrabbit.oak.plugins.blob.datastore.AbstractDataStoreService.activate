org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r30 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>(r29) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.core.data.DataStore createDataStore(org.osgi.service.component.ComponentContext,java.util.Map)>(r1, r30)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.core.data.DataStore createDataStore(org.osgi.service.component.ComponentContext,java.util.Map)>(r1, r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r6 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("encodeLengthInId")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r6 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("encodeLengthInId") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : z0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: boolean toBoolean(java.lang.Object,boolean)>($r6, 1)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : z0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: boolean toBoolean(java.lang.Object,boolean)>($r6, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r7 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSizeInMB")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r7 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSizeInMB") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r7, 16)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : i0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: int toInteger(java.lang.Object,int)>($r7, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String lookup(org.osgi.service.component.ComponentContext,java.lang.String)>(r1, "repository.home")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String lookup(org.osgi.service.component.ComponentContext,java.lang.String)>(r1, "repository.home") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $z1 = interfaceinvoke r30.<java.util.Map: boolean containsKey(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $z1 = interfaceinvoke r30.<java.util.Map: boolean containsKey(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r25 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataStore: void init(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataStore: void init(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r31 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r31 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r32 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider getStatisticsProvider()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r32 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.stats.StatisticsProvider getStatisticsProvider()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r31.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: void <init>(org.apache.jackrabbit.oak.stats.StatisticsProvider)>($r32)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r31.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: void <init>(org.apache.jackrabbit.oak.stats.StatisticsProvider)>($r32) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r33 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r33 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r33.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void <init>(org.apache.jackrabbit.core.data.DataStore,boolean,int)>(r2, z0, i0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r33.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void <init>(org.apache.jackrabbit.core.data.DataStore,boolean,int)>(r2, z0, i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> = $r33
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> = $r33 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r34 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r34 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r34.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void setBlobStatsCollector(org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector)>($r31)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r34.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void setBlobStatsCollector(org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r35 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r35 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>($r35, r30, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>($r35, r30, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r36 = new java.util.Hashtable
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r36 = new java.util.Hashtable >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r36.<java.util.Hashtable: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : specialinvoke $r36.<java.util.Hashtable: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r37 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r37 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r38)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", $r38) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r39 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String[] getDescription()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r39 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: java.lang.String[] getDescription()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.blobstore.description", $r39)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("oak.blobstore.description", $r39) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r40 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r40 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r41 = virtualinvoke $r40.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("split.blobstore")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r41 = virtualinvoke $r40.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("split.blobstore") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $r41 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $r41 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r21 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $r41 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r10 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r10 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11 = newarray (java.lang.String)[2]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11 = newarray (java.lang.String)[2] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r12 = class "Lorg/apache/jackrabbit/oak/spi/blob/BlobStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r12 = class "Lorg/apache/jackrabbit/oak/spi/blob/BlobStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[0] = $r13
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[0] = $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r14 = class "Lorg/apache/jackrabbit/oak/spi/blob/GarbageCollectableBlobStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r14 = class "Lorg/apache/jackrabbit/oak/spi/blob/GarbageCollectableBlobStore;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[1] = $r15
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r11[1] = $r15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r17 = interfaceinvoke $r10.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r11, $r16, $r36)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r17 = interfaceinvoke $r10.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)>($r11, $r16, $r36) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.osgi.framework.ServiceRegistration reg> = $r17
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.osgi.framework.ServiceRegistration reg> = $r17 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r18 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r18 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r20 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBeans(org.osgi.framework.BundleContext,org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore,org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats)>($r18, $r19, $r31)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r20 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.spi.whiteboard.Registration registerMBeans(org.osgi.framework.BundleContext,org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore,org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats)>($r18, $r19, $r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.spi.whiteboard.Registration mbeanReg> = $r20
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.apache.jackrabbit.oak.spi.whiteboard.Registration mbeanReg> = $r20 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : return
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r21 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: java.util.Dictionary getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r22 = virtualinvoke $r21.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("split.blobstore")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r22 = virtualinvoke $r21.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("split.blobstore") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("split.blobstore", $r22)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : virtualinvoke $r36.<java.util.Dictionary: java.lang.Object put(java.lang.Object,java.lang.Object)>("split.blobstore", $r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r10 = interfaceinvoke r1.<org.osgi.service.component.ComponentContext: org.osgi.framework.BundleContext getBundleContext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r24 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Initializing the DataStore with homeDir [{}]", r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Initializing the DataStore with homeDir [{}]", r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r25 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r26 = (java.lang.String) $r25
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r26 = (java.lang.String) $r25 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $z2 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>($r26)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $z2 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>($r26) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z2 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r27 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : if r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r27 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r28 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : $r28 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Initializing the DataStore with path [{}]", $r28)
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Initializing the DataStore with path [{}]", $r28) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : goto [?= staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0)]
org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : goto [?= staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.AbstractDataStoreService.activate : staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: void populate(java.lang.Object,java.util.Map,boolean)>(r2, r30, 0)
