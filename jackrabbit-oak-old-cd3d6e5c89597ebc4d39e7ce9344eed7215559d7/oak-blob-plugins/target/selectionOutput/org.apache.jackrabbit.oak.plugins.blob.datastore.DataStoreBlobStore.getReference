org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: java.lang.String extractBlobId(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: java.lang.String extractBlobId(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $z0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean isInstance(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $z0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean isInstance(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : return null
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r6 = new org.apache.jackrabbit.core.data.DataIdentifier
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r6 = new org.apache.jackrabbit.core.data.DataIdentifier >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : specialinvoke $r6.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r6 = new org.apache.jackrabbit.core.data.DataIdentifier >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to access the blobId for  [{}]", r2, $r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to access the blobId for  [{}]", r2, $r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : return null
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : specialinvoke $r6.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : r3 = interfaceinvoke $r7.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord getRecordIfStored(org.apache.jackrabbit.core.data.DataIdentifier)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : specialinvoke $r6.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : r3 = interfaceinvoke $r7.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord getRecordIfStored(org.apache.jackrabbit.core.data.DataIdentifier)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : if r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : r3 = interfaceinvoke $r7.<org.apache.jackrabbit.core.data.DataStore: org.apache.jackrabbit.core.data.DataRecord getRecordIfStored(org.apache.jackrabbit.core.data.DataIdentifier)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r9 = interfaceinvoke r3.<org.apache.jackrabbit.core.data.DataRecord: java.lang.String getReference()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : if r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No blob found for id [{}]", r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No blob found for id [{}]", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : goto [?= return null]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No blob found for id [{}]", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : goto [?= return null] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : return null
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r9 = interfaceinvoke r3.<org.apache.jackrabbit.core.data.DataRecord: java.lang.String getReference()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : return $r9
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r9 = interfaceinvoke r3.<org.apache.jackrabbit.core.data.DataRecord: java.lang.String getReference()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getReference : $r10 := @caughtexception
