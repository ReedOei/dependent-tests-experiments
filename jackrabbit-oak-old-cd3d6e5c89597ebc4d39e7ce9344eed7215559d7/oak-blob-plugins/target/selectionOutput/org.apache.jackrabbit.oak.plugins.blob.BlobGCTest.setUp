org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: void preSetup()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r7 = interfaceinvoke $r6.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState getRoot()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r7 = interfaceinvoke $r6.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState getRoot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r1 = interfaceinvoke $r7.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.spi.state.NodeBuilder builder()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r1 = interfaceinvoke $r7.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.spi.state.NodeBuilder builder()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r8 = new java.util.Random
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r8 = new java.util.Random >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r8.<java.util.Random: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r8.<java.util.Random: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i7 = 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i7 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i7 >= i1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i7 >= i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i8 = virtualinvoke $r8.<java.util.Random: int nextInt(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i7 >= i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r9 = new org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r9 = new org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: void <init>(org.apache.jackrabbit.oak.plugins.blob.BlobGCTest)>(r0)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: void <init>(org.apache.jackrabbit.oak.plugins.blob.BlobGCTest)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i9 = 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i9 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i9 >= i0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i9 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r27 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i9 >= i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r11 = <org.apache.jackrabbit.oak.spi.commit.EmptyHook: org.apache.jackrabbit.oak.spi.commit.CommitHook INSTANCE>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r11 = <org.apache.jackrabbit.oak.spi.commit.EmptyHook: org.apache.jackrabbit.oak.spi.commit.CommitHook INSTANCE> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r10 = <org.apache.jackrabbit.oak.spi.commit.CommitInfo: org.apache.jackrabbit.oak.spi.commit.CommitInfo EMPTY>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r10 = <org.apache.jackrabbit.oak.spi.commit.CommitInfo: org.apache.jackrabbit.oak.spi.commit.CommitInfo EMPTY> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r12.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState merge(org.apache.jackrabbit.oak.spi.state.NodeBuilder,org.apache.jackrabbit.oak.spi.commit.CommitHook,org.apache.jackrabbit.oak.spi.commit.CommitInfo)>(r1, $r11, $r10)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r12.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.spi.state.NodeState merge(org.apache.jackrabbit.oak.spi.state.NodeBuilder,org.apache.jackrabbit.oak.spi.commit.CommitHook,org.apache.jackrabbit.oak.spi.commit.CommitInfo)>(r1, $r11, $r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r15 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r15 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r14 = $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: java.util.Set blobsAdded>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r14 = $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: java.util.Set blobsAdded> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $i5 = interfaceinvoke $r14.<java.util.Set: int size()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $i5 = interfaceinvoke $r14.<java.util.Set: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Created blobs : {}", $r16)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Created blobs : {}", $r16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r45 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r45 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r20 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r17 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r17 = <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $i6 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $i6 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Deleted nodes : {}", $r18)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Deleted nodes : {}", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.stats.Clock clock>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.stats.Clock clock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : virtualinvoke $r19.<org.apache.jackrabbit.oak.stats.Clock: void waitUntil(long)>(5L)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : virtualinvoke $r19.<org.apache.jackrabbit.oak.stats.Clock: void waitUntil(long)>(5L) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: void postSetup(org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState)>($r9)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: void postSetup(org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState)>($r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : return $r9
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r20 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r21 = (java.lang.Integer) $r20
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r21 = (java.lang.Integer) $r20 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i10 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i10 = virtualinvoke $r21.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r22 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c")
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: void delete(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeStore)>($r25, $r26)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: void delete(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeStore)>($r25, $r26) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r27 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.state.NodeStore nodeStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r28 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: java.io.InputStream randomStream(int,int)>(i9, i2)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r28 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: java.io.InputStream randomStream(int,int)>(i9, i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r44 = interfaceinvoke $r27.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.api.Blob createBlob(java.io.InputStream)>($r28)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r44 = interfaceinvoke $r27.<org.apache.jackrabbit.oak.spi.state.NodeStore: org.apache.jackrabbit.oak.api.Blob createBlob(java.io.InputStream)>($r28) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest: org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r30 = interfaceinvoke r44.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r30 = interfaceinvoke r44.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r4 = interfaceinvoke $r29.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.util.Iterator resolveChunks(java.lang.String)>($r30)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r4 = interfaceinvoke $r29.<org.apache.jackrabbit.oak.spi.blob.GarbageCollectableBlobStore: java.util.Iterator resolveChunks(java.lang.String)>($r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r37 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r31 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c")
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r35 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder child(java.lang.String)>($r34)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r35 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder child(java.lang.String)>($r34) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r35.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("x", r44)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r35.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("x", r44) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i9 = i9 + 1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i9 = i9 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i9 >= i0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r37 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r5 = (java.lang.String) $r37
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : r5 = (java.lang.String) $r37 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r38 = $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: java.util.Set blobsAdded>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r38 = $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: java.util.Set blobsAdded> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r38.<java.util.Set: boolean add(java.lang.Object)>(r5)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r38.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z3 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r39)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z3 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r39) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z3 != 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r40 = $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: java.util.Set blobsPresent>
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r40 = $r9.<org.apache.jackrabbit.oak.plugins.blob.BlobGCTest$BlobStoreState: java.util.Set blobsPresent> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>(r5)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i8 = virtualinvoke $r8.<java.util.Random: int nextInt(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z5 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r41)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $z5 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r41) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z5 != 0
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z5 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if $z5 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i7 = i7 + 1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i7 = i7 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : if i7 >= i1
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r42)
org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r42) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobGCTest.setUp : i7 = i7 + 1
