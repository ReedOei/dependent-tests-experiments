org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : r1 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : return r1
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : r3 = (org.apache.jackrabbit.core.data.DataRecord) $r4
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : r3 = (org.apache.jackrabbit.core.data.DataRecord) $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $r5 = interfaceinvoke r3.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $r5 = interfaceinvoke r3.<org.apache.jackrabbit.core.data.DataRecord: java.io.InputStream getStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $r6 = staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: java.util.Set readStringsAsSet(java.io.InputStream,boolean)>($r5, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $r6 = staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: java.util.Set readStringsAsSet(java.io.InputStream,boolean)>($r5, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerTest.read : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
