org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r2 = new org.apache.jackrabbit.core.data.LazyFileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: java.io.File file>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: java.io.File file> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : specialinvoke $r2.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: java.io.File file> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r4 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r5 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error in returning stream", $r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error in returning stream", $r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r6 = new org.apache.jackrabbit.core.data.DataStoreException
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r6 = new org.apache.jackrabbit.core.data.DataStoreException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : specialinvoke $r6.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.Throwable)>($r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : specialinvoke $r6.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.Throwable)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : throw $r6
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : specialinvoke $r2.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : specialinvoke $r2.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord.getStream : $r4 := @caughtexception
