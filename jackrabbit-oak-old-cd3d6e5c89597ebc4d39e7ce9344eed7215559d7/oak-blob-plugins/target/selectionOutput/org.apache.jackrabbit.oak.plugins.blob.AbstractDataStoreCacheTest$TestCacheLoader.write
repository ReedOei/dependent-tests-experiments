org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader: java.io.File root> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: java.io.File getFile(java.lang.String,java.io.File)>(r1, $r3)
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader: java.io.File root> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r7 = new org.apache.jackrabbit.core.data.DataStoreException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : specialinvoke $r7.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.Throwable)>($r6)
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : specialinvoke $r7.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.Throwable)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : throw $r7
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: java.io.File getFile(java.lang.String,java.io.File)>(r1, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r4 = virtualinvoke r8.<java.io.File: java.io.File getParentFile()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: java.io.File getFile(java.lang.String,java.io.File)>(r1, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r4 = virtualinvoke r8.<java.io.File: java.io.File getParentFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : virtualinvoke $r4.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r4 = virtualinvoke r8.<java.io.File: java.io.File getParentFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : virtualinvoke $r4.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : staticinvoke <com.google.common.io.Files: void copy(java.io.File,java.io.File)>(r2, r8)
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : virtualinvoke $r4.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : staticinvoke <com.google.common.io.Files: void copy(java.io.File,java.io.File)>(r2, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r5 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : staticinvoke <com.google.common.io.Files: void copy(java.io.File,java.io.File)>(r2, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r5 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("In TestCacheLoader after write [{}], [{}]", r1, r8)
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r5 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("In TestCacheLoader after write [{}], [{}]", r1, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("In TestCacheLoader after write [{}], [{}]", r1, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestCacheLoader.write : return
