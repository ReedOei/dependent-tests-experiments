org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r4 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String)>("Before execution....waiting for latch")
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r4 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r9 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>("Error in before execute", $r8)
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>("Error in before execute", $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : return
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String)>("Before execution....waiting for latch") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor: java.util.concurrent.CountDownLatch beforeLatch>
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String)>("Before execution....waiting for latch") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor: java.util.concurrent.CountDownLatch beforeLatch> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void await()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor: java.util.concurrent.CountDownLatch beforeLatch> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r6 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r6 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String)>("Before execution....after acquiring latch")
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r6 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String)>("Before execution....after acquiring latch") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : specialinvoke r0.<java.util.concurrent.ThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)>(r1, r2)
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String)>("Before execution....after acquiring latch") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : specialinvoke r0.<java.util.concurrent.ThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)>(r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r7 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : specialinvoke r0.<java.util.concurrent.ThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)>(r1, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r7 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String)>("Completed beforeExecute")
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r7 = <org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String)>("Completed beforeExecute") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String)>("Completed beforeExecute") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : $r8 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractDataStoreCacheTest$TestPoolExecutor.beforeExecute : return
