org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("0y") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer: org.apache.jackrabbit.oak.json.Base64BlobSerializer base64>
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r2 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r2 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer: org.apache.jackrabbit.oak.spi.blob.BlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r3, r1)
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r3, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : return $r2
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer: org.apache.jackrabbit.oak.json.Base64BlobSerializer base64> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r4 = "0y"
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r4 = "0y" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $i0 = virtualinvoke $r4.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $i0 = virtualinvoke $r4.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0)
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r7 = virtualinvoke $r5.<org.apache.jackrabbit.oak.json.Base64BlobSerializer: org.apache.jackrabbit.oak.api.Blob deserialize(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : $r7 = virtualinvoke $r5.<org.apache.jackrabbit.oak.json.Base64BlobSerializer: org.apache.jackrabbit.oak.api.Blob deserialize(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.serializer.BlobIdSerializer.deserialize : return $r7
