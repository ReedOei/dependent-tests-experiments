org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r2 = new org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: java.util.concurrent.ScheduledExecutorService scheduler>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: java.util.concurrent.ScheduledExecutorService scheduler> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : specialinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void <init>(java.util.concurrent.ExecutorService)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r2.<org.apache.jackrabbit.oak.commons.concurrent.ExecutorCloser: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker tracker>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker tracker> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore dataStore>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore dataStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r6 = (org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore) $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r6 = (org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore) $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r6 = (org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore) $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r7 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest: org.slf4j.Logger access$200()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Error closing blobstore", $r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Error closing blobstore", $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : return
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : virtualinvoke $r6.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : $r7 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTrackerClusterSharedTest$Cluster.close : return
