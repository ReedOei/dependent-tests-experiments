org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r24 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error taking snapshot", $r23)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error taking snapshot", $r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r25 = new java.io.IOException
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r25 = new java.io.IOException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Snapshot error", $r23)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Snapshot error", $r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : throw $r25
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $z1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: boolean SKIP_TRACKER> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $z1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: boolean SKIP_TRACKER> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r28 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : return
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r28 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if z0 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r28 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r29 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : if z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r29 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r29 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r1 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r1 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore datastore>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r1 = virtualinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: java.io.File getBlobRecordsFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore datastore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r4 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore datastore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.lang.String prefix>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.lang.String prefix> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.lang.String prefix> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.lang.String instanceId>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.lang.String instanceId> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.lang.String instanceId> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".refs")
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".refs") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".refs") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: void addMetadataRecord(java.io.File,java.lang.String)>(r1, $r12)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: void addMetadataRecord(java.io.File,java.lang.String)>(r1, $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r14 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r5.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: void addMetadataRecord(java.io.File,java.lang.String)>(r1, $r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r14 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l1 = virtualinvoke r29.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r13)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l1 = virtualinvoke r29.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l1 = virtualinvoke r29.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Added blob id metadata record in DataStore in [{}]", $r15)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Added blob id metadata record in DataStore in [{}]", $r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Added blob id metadata record in DataStore in [{}]", $r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Added blob id metadata record in DataStore in [{}]", $r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r16 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r16 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r16 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r16 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Deleted blob record file after snapshot and upload {}", r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Deleted blob record file after snapshot and upload {}", r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Deleted blob record file after snapshot and upload {}", r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Deleted blob record file after snapshot and upload {}", r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.io.File getSnapshotMarkerFile()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.io.File getSnapshotMarkerFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.io.File getSnapshotMarkerFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: java.io.File getSnapshotMarkerFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void touch(java.io.File)>($r17)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void touch(java.io.File)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void touch(java.io.File)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : staticinvoke <org.apache.commons.io.FileUtils: void touch(java.io.File)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r18 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r18 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r18 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r18 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("Updated snapshot marker")
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("Updated snapshot marker") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r26 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("Updated snapshot marker") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("Updated snapshot marker") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r27 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to in cleaning up {}", r1, $r26)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r27 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to in cleaning up {}", r1, $r26) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to in cleaning up {}", r1, $r26) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : virtualinvoke $r19.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void snapshot()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore store> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : virtualinvoke $r19.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void snapshot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r21 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : virtualinvoke $r19.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$BlobIdStore: void snapshot()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r21 = <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l2 = virtualinvoke r28.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r20)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l2 = virtualinvoke r28.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $l2 = virtualinvoke r28.<com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)>($r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Completed snapshot in [{}]", $r22)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Completed snapshot in [{}]", $r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : r29 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Completed snapshot in [{}]", $r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker.snapshot : $r23 := @caughtexception
