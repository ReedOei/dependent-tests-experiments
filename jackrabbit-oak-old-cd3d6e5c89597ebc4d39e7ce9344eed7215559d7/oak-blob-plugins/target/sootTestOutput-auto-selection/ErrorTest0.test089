org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : $r1 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type SHARED> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : return $r1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $r3 != null
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $r3 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r8 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/repository/datastore")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/repository/datastore") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r11
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r4 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r4 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r6 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r6 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r7
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i0 < 0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i0 < 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $i1 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i1 > 50
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : if $i1 > 50 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z0 = 1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z0 = 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")]
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Staging percentage cache should be between 0 and 50") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r12 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r12 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String path> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r13)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> = $r12
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> = $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r14 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r14 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File rootDirectory> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "tmp")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "tmp") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> = $r14
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> = $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r16 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r16 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z1 = virtualinvoke $r17.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $z1 = virtualinvoke $r17.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : interfaceinvoke $r16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Temporary file created [{}]", $r18)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : interfaceinvoke $r16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Temporary file created [{}]", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r19 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend createBackend()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r19 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend createBackend()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : if $r3 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : if $r3 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.createBackend : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> = $r19
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> = $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : virtualinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void init()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.init : virtualinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: void init()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.init : $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("fsBackendPath")
