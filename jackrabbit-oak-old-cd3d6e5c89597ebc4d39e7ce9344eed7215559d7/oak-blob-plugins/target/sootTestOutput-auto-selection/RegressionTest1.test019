org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$NoOpMap.entrySet : $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$NoOpMap.entrySet : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$NoOpMap.entrySet : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.setReferenceKey : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: byte[] referenceKey> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.setReferenceKey : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: byte[] referenceKey> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r6 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r6 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r7 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r7 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r8 = new java.util.ArrayList
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r8 = new java.util.ArrayList >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r10 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r10 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r11 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r9, $r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r11 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r9, $r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : return $r8
