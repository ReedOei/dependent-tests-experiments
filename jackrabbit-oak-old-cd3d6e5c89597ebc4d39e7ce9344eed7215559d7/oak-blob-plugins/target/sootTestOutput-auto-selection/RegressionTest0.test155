org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r2 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r3 = new org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$2
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r3 = new org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$2: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : specialinvoke $r3.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$2: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r4 = virtualinvoke $r2.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r4 = virtualinvoke $r2.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r6 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r6 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r7 = new org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$3
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r7 = new org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$3: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : specialinvoke $r7.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$3: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r8 = virtualinvoke $r6.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function)>($r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r8 = virtualinvoke $r6.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r9 = virtualinvoke $r8.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r9 = virtualinvoke $r8.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r10 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set)>($r5, $r9)
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : $r10 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set)>($r5, $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : return $r10
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.refsNotAvailableFromRepos : return $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$1
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : $r2 = new org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$1: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils$1: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : $r3 = virtualinvoke $r1.<com.google.common.collect.Ordering: com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)>($r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : $r3 = virtualinvoke $r1.<com.google.common.collect.Ordering: com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.getEarliestRecord : $r4 = virtualinvoke $r3.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Iterable)>(r0)
