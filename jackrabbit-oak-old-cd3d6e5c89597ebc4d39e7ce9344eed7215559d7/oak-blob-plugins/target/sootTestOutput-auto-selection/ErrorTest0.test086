org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setStagingSplitPercentage : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> = i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : return $i0
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : return $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : $r1 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type SHARED>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : $r1 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type SHARED> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : return $r1
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setStagingRetryInterval : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingRetryInterval> = i0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setStagingRetryInterval : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingRetryInterval> = i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setMinRecordLength : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength> = i0
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.setMinRecordLength : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength> = i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getMetadataRecord : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getMetadataRecord : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend backend> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getMetadataRecord : $r3 = virtualinvoke $r2.<org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend: org.apache.jackrabbit.core.data.DataRecord getMetadataRecord(java.lang.String)>(r1)
