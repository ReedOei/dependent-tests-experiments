org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r2 = new org.apache.jackrabbit.oak.spi.blob.BlobOptions >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r2.<org.apache.jackrabbit.oak.spi.blob.BlobOptions: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r2.<org.apache.jackrabbit.oak.spi.blob.BlobOptions: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream,org.apache.jackrabbit.oak.spi.blob.BlobOptions)>(r1, $r2)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.core.data.DataRecord addRecord(java.io.InputStream,org.apache.jackrabbit.oak.spi.blob.BlobOptions)>(r1, $r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r3 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r3 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r32 = staticinvoke <org.apache.jackrabbit.util.TransientFileFactory: org.apache.jackrabbit.util.TransientFileFactory getInstance()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r32 = staticinvoke <org.apache.jackrabbit.util.TransientFileFactory: org.apache.jackrabbit.util.TransientFileFactory getInstance()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.io.File tmp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r4 = virtualinvoke r32.<org.apache.jackrabbit.util.TransientFileFactory: java.io.File createTransientFile(java.lang.String,java.lang.String,java.io.File)>("upload", null, $r7)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r4 = virtualinvoke r32.<org.apache.jackrabbit.util.TransientFileFactory: java.io.File createTransientFile(java.lang.String,java.lang.String,java.io.File)>("upload", null, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String DIGEST>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: java.lang.String DIGEST> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r9 = new java.security.DigestOutputStream
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r9 = new java.security.DigestOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r10 = new java.io.FileOutputStream
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r10 = new java.io.FileOutputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r4)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r10, r5)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r10, r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>(r1, $r9)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>(r1, $r9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r9.<java.io.OutputStream: void close()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : virtualinvoke $r9.<java.io.OutputStream: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : throw $r28
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : throw $r28 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r30 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r30 = <org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String)>("Error in adding record")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String)>("Error in adding record") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r31 = new org.apache.jackrabbit.core.data.DataStoreException
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : $r31 = new org.apache.jackrabbit.core.data.DataStoreException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r31.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Error in adding record ", $r29)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : specialinvoke $r31.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Error in adding record ", $r29) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.addRecord : throw $r31
