org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $r2 = (java.io.File) r1
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $r2 = (java.io.File) r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1: boolean apply(java.io.File)>($r2)
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1: boolean apply(java.io.File)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>()
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z3 = 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : $z3 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z3
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils$1.apply : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils.moveDownloadCache : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File cacheRoot>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File cacheRoot> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r8 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$6
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r8 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.setBlob : r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: org.apache.jackrabbit.oak.api.Blob blob> = r1
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.setBlob : r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: org.apache.jackrabbit.oak.api.Blob blob> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.setId : r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: java.lang.String id> = r1
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.setId : r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: java.lang.String id> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.getBlob : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: org.apache.jackrabbit.oak.api.Blob blob>
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.getBlob : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: org.apache.jackrabbit.oak.api.Blob blob> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.getBlob : return $r1
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.getBlob : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r1 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ReferencedBlob{blob=")
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ReferencedBlob{blob=") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: org.apache.jackrabbit.oak.api.Blob blob>
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: org.apache.jackrabbit.oak.api.Blob blob> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=\'")
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=\'") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: java.lang.String id>
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob: java.lang.String id> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125)
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ReferencedBlob.toString : return $r10
