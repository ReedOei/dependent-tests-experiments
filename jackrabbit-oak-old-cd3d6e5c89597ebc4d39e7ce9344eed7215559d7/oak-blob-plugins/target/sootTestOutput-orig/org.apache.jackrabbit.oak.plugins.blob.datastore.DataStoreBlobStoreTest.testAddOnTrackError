org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : r3 = newarray (byte)[i3]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i3 >= i0 goto (branch)", "org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream")]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : goto [?= return r8]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : i3 = i3 + i5
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : i4 = i4 - i5
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : if i3 >= i0 goto $r5 = new java.io.SequenceInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : if i5 >= 0 goto i3 = i3 + i5
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i3)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : return r8
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : i5 = virtualinvoke r7.<java.io.InputStream: int read(byte[],int,int)>(r2, i3, i4)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : r2 = newarray (byte)[i0]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : i3 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeStream : if i3 >= i0 goto (branch)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $z0 = r8 instanceof java.io.BufferedInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataRecord getDataRecord(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r5 = new java.io.BufferedInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getStream : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId.of : $r1 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getBlobStore : interfaceinvoke r2.<org.apache.jackrabbit.core.data.DataStore: void init(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getBlobStore : $r8 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils: java.util.Map getConfig()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getBlobStore : $r0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils: java.lang.String getHomeDir()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getBlobStore : $r3 = class "Lorg/apache/jackrabbit/oak/plugins/blob/datastore/OakFileDataStore;"
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getBlobStore : $r9 = new org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getBlobStore : $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId.hasLengthInfo : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: long length>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getHomeDir : $r0 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getLength : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$1.weigh : $i0 = staticinvoke <org.apache.jackrabbit.oak.commons.StringUtils: int estimateMemoryUsage(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$1.weigh : $r4 = (java.lang.String) r1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$1.weigh : $i5 = (int) l6
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$1.weigh : $b4 = l6 cmp 2147483647L
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.isInstance : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0x")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.core.data.DataIdentifier identifier>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getIdentifier : $r3 = new org.apache.jackrabbit.core.data.DataIdentifier
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataRecord : r6 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataRecord : return r6
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataRecord : $r4 = newarray (java.lang.Object)[1]
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataRecord : $z0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean isInstance(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2.call : z0 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2.call : $r1 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2: byte[] call()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2.call : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>(r1, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2.call : return r2
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2.call : z0 = 1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2.call : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore this$0>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$2.call : r2 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : $r2 = new org.apache.jackrabbit.oak.spi.blob.BlobOptions
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker tracker>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : r3 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataRecord writeStream(java.io.InputStream,org.apache.jackrabbit.oak.spi.blob.BlobOptions)>(r1, r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : l0 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>(r1, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : z1 = 1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : z1 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : r4 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: java.lang.String getBlobId(org.apache.jackrabbit.core.data.DataRecord)>(r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : $z0 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean isInstance(java.lang.String)>(r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.writeBlob : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.spi.blob.stats.BlobStatsCollector stats>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getBlobId : $r4 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId of(org.apache.jackrabbit.core.data.DataRecord)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getBlobId : $z0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: boolean encodeLengthInId>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getStream : $r1 = new java.io.ByteArrayInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.addTracker : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker tracker> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getInputStream : $z0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: boolean encodeLengthInId>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getInputStream : $l2 = r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: long length>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getInputStream : $r7 = new java.io.ByteArrayInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getInputStream : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId of(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getInputStream : $z1 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: boolean hasLengthInfo()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getInputStream : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: com.google.common.cache.LoadingCache cache>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s8 = s2 & 15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: byte[] data>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : s2 = b1 & 255
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $s7 = s2 >> 4
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : b1 = r2[i9]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.toString : $r3 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r3 = staticinvoke <java.lang.System: java.util.Properties getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ds.")
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("bs.")
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : r0 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreUtils.getConfig : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20 = newarray (byte)[i14]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = "0x"
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = new org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i13 = virtualinvoke r18.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i0 = lengthof r0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $z0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean $assertionsDisabled>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i2 = 2 * i15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i14 = i13 / 2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId.encodedValue : $z0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId: boolean hasLengthInfo()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore$BlobId.encodedValue : $r2 = new java.lang.StringBuilder
