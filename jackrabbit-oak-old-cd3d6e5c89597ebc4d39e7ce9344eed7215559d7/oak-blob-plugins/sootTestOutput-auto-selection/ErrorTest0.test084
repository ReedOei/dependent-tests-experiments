org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation migrationOp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $z1 = virtualinvoke $r1.<org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: boolean isDone()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $z1 = virtualinvoke $r1.<org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: boolean isDone()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r2 = new org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r2 = new org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration,boolean)>(r0, z0)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : specialinvoke $r2.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration,boolean)>(r0, z0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r3 = staticinvoke <org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation newManagementOperation(java.lang.String,java.util.concurrent.Callable)>("Blob migration", $r2)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r3 = staticinvoke <org.apache.jackrabbit.oak.commons.jmx.ManagementOperation: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation newManagementOperation(java.lang.String,java.util.concurrent.Callable)>("Blob migration", $r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation migrationOp> = $r3
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation migrationOp> = $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: java.util.concurrent.Executor executor>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: java.util.concurrent.Executor executor> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation migrationOp>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.commons.jmx.ManagementOperation migrationOp> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : return "Migration started"
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.startBlobMigration : return "Migration started" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.stopBlobMigration : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator migrator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.stopBlobMigration : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator migrator> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.stopBlobMigration : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void stop()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.stopBlobMigration : virtualinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: void stop()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $r1 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: java.lang.String call()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $r1 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: java.lang.String call()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : l0 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : l0 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $z0 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: boolean val$resume>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $z0 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: boolean val$resume> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration this$0>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration this$0> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $r13 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator access$000(org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration)>($r12)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : $r13 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator access$000(org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.access$000 : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator migrator>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.access$000 : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration: org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator migrator> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.access$000 : return $r1
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration.access$000 : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigration$1.call : z1 = virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: boolean migrate()>()
