org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r2 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "reference.key")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "reference.key") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r4 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>($r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r4 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : return $r4
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllIdentifiers : $r1 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllIdentifiers : $r1 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllIdentifiers : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllIdentifiers : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllIdentifiers : $r3 = virtualinvoke $r1.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r2)
