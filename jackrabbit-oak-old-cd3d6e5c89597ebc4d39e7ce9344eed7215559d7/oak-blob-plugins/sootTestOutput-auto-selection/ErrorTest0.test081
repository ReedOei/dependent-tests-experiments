org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.clearCache : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore: org.apache.jackrabbit.oak.cache.CacheLIRS cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.clearCache : virtualinvoke $r1.<org.apache.jackrabbit.oak.cache.CacheLIRS: void invalidateAll()>()
org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.clearCache : virtualinvoke $r1.<org.apache.jackrabbit.oak.cache.CacheLIRS: void invalidateAll()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.getAccessKey : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String accessKey>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.getAccessKey : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String accessKey> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.getAccessKey : return $r1
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.getAccessKey : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.setCloudProvider : r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudProvider> = r1
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.setCloudProvider : r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudProvider> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6)
