org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r2 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "reference.key")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "reference.key") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r4 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>($r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r4 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : return $r4
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setProperties : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.util.Properties properties> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState.getGarbage : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File garbage>
org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState.getGarbage : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState: java.io.File garbage> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState.getGarbage : return $r1
org.apache.jackrabbit.oak.plugins.blob.GarbageCollectorFileState.getGarbage : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r3 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r3 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r1, $r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r1, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r7 = <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r7 = <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6 = newarray (java.lang.Object)[3]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6[0] = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6[0] = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6[1] = r2
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6[1] = r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6[2] = $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r6[2] = $r5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Exception while adding metadata record file {} with name {}, {}", $r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Exception while adding metadata record file {} with name {}, {}", $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r8 = new org.apache.jackrabbit.core.data.DataStoreException
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : $r8 = new org.apache.jackrabbit.core.data.DataStoreException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : specialinvoke $r8.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Could not add root record", $r5)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : specialinvoke $r8.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Could not add root record", $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.addMetadataRecord : throw $r8
