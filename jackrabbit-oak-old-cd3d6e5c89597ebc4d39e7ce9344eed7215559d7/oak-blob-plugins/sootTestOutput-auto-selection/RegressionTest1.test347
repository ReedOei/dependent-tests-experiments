org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteAllMetadataRecords : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteAllMetadataRecords : $z0 = $r2 instanceof org.apache.jackrabbit.oak.plugins.blob.SharedDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteAllMetadataRecords : $z0 = $r2 instanceof org.apache.jackrabbit.oak.plugins.blob.SharedDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteAllMetadataRecords : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : i6 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : i6 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : $z1 = $r8 instanceof org.apache.jackrabbit.core.data.MultiDataStoreAware
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : $z1 = $r8 instanceof org.apache.jackrabbit.core.data.MultiDataStoreAware >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : $l7 = (long) i6
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : $l7 = (long) i6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : return $l7
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.countDeleteChunks : return $l7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataStore : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataStore : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataStore : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getDataStore : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $i1 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $i1 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $l2 = (long) $i1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $l2 = (long) $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $l3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: long countDeleteChunks(java.util.List,long)>(r1, l0)
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $l3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: long countDeleteChunks(java.util.List,long)>(r1, l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $b4 = $l2 cmp $l3
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $b4 = $l2 cmp $l3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : if $b4 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : if $b4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $z0 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : $z0 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : return $z0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.deleteChunks : return $z0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.addTracker : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker tracker> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.addTracker : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.oak.plugins.blob.datastore.BlobTracker tracker> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $z0 = r0 instanceof org.apache.jackrabbit.oak.plugins.blob.SharedDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $z0 = r0 instanceof org.apache.jackrabbit.oak.plugins.blob.SharedDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $r1 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) r0
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $r1 = (org.apache.jackrabbit.oak.plugins.blob.SharedDataStore) r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $r2 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type getType()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $r2 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.plugins.blob.SharedDataStore: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore: org.apache.jackrabbit.core.data.DataStore delegate> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : $z0 = $r1 instanceof org.apache.jackrabbit.oak.plugins.blob.SharedDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : $z0 = $r1 instanceof org.apache.jackrabbit.oak.plugins.blob.SharedDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : $r2 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type DEFAULT>
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : $r2 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type DEFAULT> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStore.getType : return $r2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $r3 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type SHARED>
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $r3 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type SHARED> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : if $r2 != $r3
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : if $r2 != $r3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $z1 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : $z1 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.SharedDataStoreUtils.isShared : return $z1
