org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r4 = new javax.management.openmbean.TabularType >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r5 = class "Lorg/apache/jackrabbit/oak/plugins/blob/ConsolidatedDataStoreCacheStats$CacheStatsData;"
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r5 = class "Lorg/apache/jackrabbit/oak/plugins/blob/ConsolidatedDataStoreCacheStats$CacheStatsData;" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r8 = <org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats$CacheStatsData: javax.management.openmbean.CompositeType TYPE>
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r8 = <org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats$CacheStatsData: javax.management.openmbean.CompositeType TYPE> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r7 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r7 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r7[0] = "name"
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r7[0] = "name" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : specialinvoke $r4.<javax.management.openmbean.TabularType: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String[])>($r6, "Consolidated DataStore Cache Stats", $r8, $r7)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : specialinvoke $r4.<javax.management.openmbean.TabularType: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String[])>($r6, "Consolidated DataStore Cache Stats", $r8, $r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r9 = new javax.management.openmbean.TabularDataSupport
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r9 = new javax.management.openmbean.TabularDataSupport >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : specialinvoke $r9.<javax.management.openmbean.TabularDataSupport: void <init>(javax.management.openmbean.TabularType)>($r4)
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : specialinvoke $r9.<javax.management.openmbean.TabularDataSupport: void <init>(javax.management.openmbean.TabularType)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats: java.util.List cacheStats>
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats: java.util.List cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : goto [?= return $r9]
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : goto [?= return $r9] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : return $r9
org.apache.jackrabbit.oak.plugins.blob.ConsolidatedDataStoreCacheStats.getCacheStats : return $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setStagingSplitPercentage : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> = i0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setStagingSplitPercentage : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: int stagingSplitPercentage> = i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength>
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore: int minRecordLength> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : return $i0
org.apache.jackrabbit.oak.plugins.blob.datastore.CachingFileDataStore.getMinRecordLength : return $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setCacheSize : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> = l0
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.setCacheSize : r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: long cacheSize> = l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : $r1 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type SHARED>
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : $r1 = <org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type: org.apache.jackrabbit.oak.plugins.blob.SharedDataStore$Type SHARED> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getType : return $r1
