org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.getSecretKey : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String secretKey> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.getSecretKey : return $r1
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.getSecretKey : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.setSecretKey : r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String secretKey> = r1
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.setSecretKey : r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String secretKey> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.clearCache : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore: org.apache.jackrabbit.oak.cache.CacheLIRS cache>
org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.clearCache : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore: org.apache.jackrabbit.oak.cache.CacheLIRS cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.clearCache : virtualinvoke $r1.<org.apache.jackrabbit.oak.cache.CacheLIRS: void invalidateAll()>()
org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.clearCache : virtualinvoke $r1.<org.apache.jackrabbit.oak.cache.CacheLIRS: void invalidateAll()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r2 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r2 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "reference.key")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "reference.key") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r4 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>($r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : $r4 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : return $r4
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getOrCreateReferenceKey : return $r4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getCacheStats : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore: org.apache.jackrabbit.oak.cache.CacheStats cacheStats>
org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getCacheStats : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore: org.apache.jackrabbit.oak.cache.CacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getCacheStats : return $r1
org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getCacheStats : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getBlobCacheSize : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore: long blobCacheSize>
org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getBlobCacheSize : $l0 = r0.<org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore: long blobCacheSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getBlobCacheSize : return $l0
org.apache.jackrabbit.oak.plugins.blob.CachingBlobStore.getBlobCacheSize : return $l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$NoOpMap.entrySet : $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$NoOpMap.entrySet : $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$NoOpMap.entrySet : return $r1
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$NoOpMap.entrySet : return $r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.setReferenceKey : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: byte[] referenceKey> = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.setReferenceKey : r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: byte[] referenceKey> = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r2 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r2 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r6 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r6 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r8 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$2
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r8 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore,java.lang.String)>(r0, r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$2: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore,java.lang.String)>(r0, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r9 = virtualinvoke $r7.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r9 = virtualinvoke $r7.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r10 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$1
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r10 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r10.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore)>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : specialinvoke $r10.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore$1: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r11 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable transform(com.google.common.base.Function)>($r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r11 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable transform(com.google.common.base.Function)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r12 = virtualinvoke $r11.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : $r12 = virtualinvoke $r11.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllIdentifiers : return $r12
