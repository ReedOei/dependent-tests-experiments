dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r2 = new dynoptic.mc.MCcExample >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : specialinvoke $r2.<dynoptic.mc.MCcExample: void <init>()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : specialinvoke $r2.<dynoptic.mc.MCcExample: void <init>()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r0.<dynoptic.mc.mcscm.McScMResult: dynoptic.mc.MCcExample cExample> = $r2
dynoptic.mc.mcscm.McScMResult.parseCounterExample : r0.<dynoptic.mc.mcscm.McScMResult: dynoptic.mc.MCcExample cExample> = $r2 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r9 = <dynoptic.mc.mcscm.McScMResult: java.lang.String counterExEventRe>
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r9 = <dynoptic.mc.mcscm.McScMResult: java.lang.String counterExEventRe> >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r9)
dynoptic.mc.mcscm.McScMResult.parseCounterExample : r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r9) >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $i1 = i0 + 1
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $i1 = i0 + 1 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $i2 = interfaceinvoke r1.<java.util.List: int size()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $i2 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r10 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i1, $i2)
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r10 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i1, $i2) >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z0 == 0
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z0 == 0 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z0 == 0 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : return
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r5 = (java.lang.String) $r11
dynoptic.mc.mcscm.McScMResult.parseCounterExample : r5 = (java.lang.String) $r11 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r6 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5)
dynoptic.mc.mcscm.McScMResult.parseCounterExample : r6 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5) >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z1 == 0
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z1 == 0 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $z2 = <dynoptic.mc.mcscm.McScMResult: boolean $assertionsDisabled>
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z1 == 0 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.mc.mcscm.McScMResult.parseCounterExample : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $z2 = <dynoptic.mc.mcscm.McScMResult: boolean $assertionsDisabled> >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z2 != 0
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z2 != 0 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $i3 = virtualinvoke r6.<java.util.regex.Matcher: int groupCount()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $z2 != 0 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r7 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1)
dynoptic.mc.mcscm.McScMResult.parseCounterExample : r7 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r8 = specialinvoke r0.<dynoptic.mc.mcscm.McScMResult: synoptic.model.event.DistEventType parseScmEventStr(java.lang.String)>(r7)
dynoptic.mc.mcscm.McScMResult.parseCounterExample : r8 = specialinvoke r0.<dynoptic.mc.mcscm.McScMResult: synoptic.model.event.DistEventType parseScmEventStr(java.lang.String)>(r7) >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : if r8 == null
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if r8 == null >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r13 = r0.<dynoptic.mc.mcscm.McScMResult: dynoptic.mc.MCcExample cExample>
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if r8 == null >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r13 = r0.<dynoptic.mc.mcscm.McScMResult: dynoptic.mc.MCcExample cExample> >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : virtualinvoke $r13.<dynoptic.mc.MCcExample: void addScmEventStrToPath(synoptic.model.event.DistEventType)>(r8)
dynoptic.mc.mcscm.McScMResult.parseCounterExample : virtualinvoke $r13.<dynoptic.mc.MCcExample: void addScmEventStrToPath(synoptic.model.event.DistEventType)>(r8) >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $i3 = virtualinvoke r6.<java.util.regex.Matcher: int groupCount()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $i3 == 1
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $i3 == 1 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r12 = new java.lang.AssertionError
dynoptic.mc.mcscm.McScMResult.parseCounterExample : if $i3 == 1 >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : r7 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1)
dynoptic.mc.mcscm.McScMResult.parseCounterExample : $r12 = new java.lang.AssertionError >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : specialinvoke $r12.<java.lang.AssertionError: void <init>()>()
dynoptic.mc.mcscm.McScMResult.parseCounterExample : specialinvoke $r12.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.mc.mcscm.McScMResult.parseCounterExample : throw $r12
