dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z0 != 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z2 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z2 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z2 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r3 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.Set getAcceptStates()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r3 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.Set getAcceptStates()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z3 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z3 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z3 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z4 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r14 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r14 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i2 = interfaceinvoke $r14.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i2 = interfaceinvoke $r14.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r4 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>($i2)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r4 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>($i2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i0 >= $i3
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i0 >= $i3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("_")
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i0 >= $i3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i4 = interfaceinvoke $r15.<java.util.List: int indexOf(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i4 = interfaceinvoke $r15.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i5 = interfaceinvoke $r16.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i5 = interfaceinvoke $r16.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 >= $i5
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 >= $i5 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i6 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 >= $i5 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r30 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r30 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z13 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z13 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z13 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : return r2
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r32 = (dynoptic.model.fifosys.cfsm.CFSMState) $r31
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r32 = (dynoptic.model.fifosys.cfsm.CFSMState) $r31 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r33 = new dynoptic.model.fifosys.cfsm.BadState
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r33 = new dynoptic.model.fifosys.cfsm.BadState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r33.<dynoptic.model.fifosys.cfsm.BadState: void <init>(dynoptic.model.fifosys.cfsm.CFSMState,java.util.List)>(r32, r4)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r33.<dynoptic.model.fifosys.cfsm.BadState: void <init>(dynoptic.model.fifosys.cfsm.CFSMState,java.util.List)>(r32, r4) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r33)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r33) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i6 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i7 = $i6 + i4
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i7 = $i6 + i4 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i7
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i7 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r17 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: java.lang.String scmBadStateQRe()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i7 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i8 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i8 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i8
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r29 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: java.lang.String someSynthEventsQRe()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r29 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: java.lang.String someSynthEventsQRe()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r29)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r29) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = i1 + 1
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = i1 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r5 = virtualinvoke $r18.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getLocalEventScmStrings()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r5 = virtualinvoke $r18.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getLocalEventScmStrings()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z8 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z8 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z8 != 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z8 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = "("
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z8 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("_")
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("_") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= i1 = i1 + 1]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= i1 = i1 + 1] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = i1 + 1
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = "(" >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r7 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r7 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z9 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z9 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z9 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i9 = virtualinvoke r6.<java.lang.String: int length()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i9 = virtualinvoke r6.<java.lang.String: int length()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i10 = $i9 - 3
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i10 = $i9 - 3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r24 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i10)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r24 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i10) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r25 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r25 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*")
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r28)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r28) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= (branch)]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= (branch)] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= i1 = i1 + 1]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r8 = (java.lang.String) $r19
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r8 = (java.lang.String) $r19 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r20 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r20 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r17 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: java.lang.String scmBadStateQRe()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r17)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= i1 = i1 + 1]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= i1 = i1 + 1] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = i1 + 1
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("_") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = i0 + 1
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = i0 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z4 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z4 != 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z5 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r14 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z5 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z5 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z5 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r13 = new java.lang.AssertionError
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z5 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r14 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r13 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r13.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r13.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : throw $r13
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : return $r12
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z1 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z1 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z1 != 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r10 = new java.lang.AssertionError
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r10 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r10.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r10.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : throw $r10
