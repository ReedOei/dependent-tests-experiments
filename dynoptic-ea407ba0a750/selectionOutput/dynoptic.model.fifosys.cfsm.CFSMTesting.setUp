dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke r0.<dynoptic.DynopticTest: void setUp()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 0, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 0, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> = $r1
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> = $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 0, 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 0, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> = $r2
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> = $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> = $r3
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> = $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r5 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r5 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r8 = new synoptic.model.channelid.ChannelId
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r8 = new synoptic.model.channelid.ChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r8.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(0, 1, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r8.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(0, 1, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> = $r8
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> = $r8 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r9 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r9 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> = $r9
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> = $r9 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r10 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r10 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r12)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r12) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> = $r13
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> = $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r14 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r14 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> = $r14
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r15.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r16, $r17)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r15.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r16, $r17) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r20 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r20 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r18.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r19, $r20)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r18.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r19, $r20) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r21 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r21 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r22 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r22 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r21.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(0, $r22, $r23, $r24, 2)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r21.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(0, $r22, $r23, $r24, 2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> = $r21
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> = $r21 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r25 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r25 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r25.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r25.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> = $r25
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> = $r25 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r26 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r26 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r26.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r26.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> = $r26
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> = $r26 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r27.<java.util.Set: void clear()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r27.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r28 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r28 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>($r29)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>($r29) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>($r31)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>($r31) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r32 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r32 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r33 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType RecvEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r32)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r33 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType RecvEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r32) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> = $r33
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> = $r33 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r34 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("f", 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r34 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("f", 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> = $r34
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> = $r34 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r35 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r35 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r36 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r36 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r37 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r37 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r36, $r37)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r36, $r37) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r38 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r38 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r39 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r39 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r40 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r40 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r38.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r39, $r40)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r38.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r39, $r40) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r41 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r41 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r42 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r42 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r43 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r43 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r44 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r44 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r41.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(1, $r42, $r43, $r44, 2)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r41.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(1, $r42, $r43, $r44, 2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> = $r41
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> = $r41 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r45 = new dynoptic.model.fifosys.cfsm.CFSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r45 = new dynoptic.model.fifosys.cfsm.CFSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r46 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r46 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r45.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>(2, $r46)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r45.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>(2, $r46) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> = $r45
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> = $r45 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r47 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r47 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r48 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r48 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r47.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r48)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r47.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r48) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r50 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r50 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r49.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r50)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r49.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r50) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : return
