dynoptic.model.export.GraphExporterTests.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $i0 = r0.<dynoptic.model.export.GraphExporterTests: int pid0>
dynoptic.model.export.GraphExporterTests.setUp : $i0 = r0.<dynoptic.model.export.GraphExporterTests: int pid0> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 1, $i0, 0)
dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 1, $i0, 0) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState s_0> = $r1
dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState s_0> = $r1 >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $r3 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.export.GraphExporterTests.setUp : $r3 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $i1 = r0.<dynoptic.model.export.GraphExporterTests: int pid0>
dynoptic.model.export.GraphExporterTests.setUp : $i1 = r0.<dynoptic.model.export.GraphExporterTests: int pid0> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r3.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, $i1, 0)
dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r3.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, $i1, 0) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState s0> = $r3
dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState s0> = $r3 >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $r4 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.export.GraphExporterTests.setUp : $r4 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $i2 = r0.<dynoptic.model.export.GraphExporterTests: int pid0>
dynoptic.model.export.GraphExporterTests.setUp : $i2 = r0.<dynoptic.model.export.GraphExporterTests: int pid0> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r4.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, $i2, 1)
dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r4.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, $i2, 1) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState s1> = $r4
dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState s1> = $r4 >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $r5 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.export.GraphExporterTests.setUp : $r5 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $i3 = r0.<dynoptic.model.export.GraphExporterTests: int pid1>
dynoptic.model.export.GraphExporterTests.setUp : $i3 = r0.<dynoptic.model.export.GraphExporterTests: int pid1> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r5.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, $i3, 0)
dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r5.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, $i3, 0) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState t0> = $r5
dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState t0> = $r5 >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $r6 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.export.GraphExporterTests.setUp : $r6 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $i4 = r0.<dynoptic.model.export.GraphExporterTests: int pid1>
dynoptic.model.export.GraphExporterTests.setUp : $i4 = r0.<dynoptic.model.export.GraphExporterTests: int pid1> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r6.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, $i4, 1)
dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r6.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, $i4, 1) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState t1> = $r6
dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: dynoptic.model.fifosys.cfsm.fsm.FSMState t1> = $r6 >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $r7 = new synoptic.model.channelid.ChannelId
dynoptic.model.export.GraphExporterTests.setUp : $r7 = new synoptic.model.channelid.ChannelId >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $i5 = r0.<dynoptic.model.export.GraphExporterTests: int pid0>
dynoptic.model.export.GraphExporterTests.setUp : $i5 = r0.<dynoptic.model.export.GraphExporterTests: int pid0> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $i6 = r0.<dynoptic.model.export.GraphExporterTests: int pid1>
dynoptic.model.export.GraphExporterTests.setUp : $i6 = r0.<dynoptic.model.export.GraphExporterTests: int pid1> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r7.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>($i5, $i6, 0)
dynoptic.model.export.GraphExporterTests.setUp : specialinvoke $r7.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>($i5, $i6, 0) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : r2 = $r7
dynoptic.model.export.GraphExporterTests.setUp : r2 = $r7 >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $r8 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1)
dynoptic.model.export.GraphExporterTests.setUp : $r8 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: java.util.List channels> = $r8
dynoptic.model.export.GraphExporterTests.setUp : r0.<dynoptic.model.export.GraphExporterTests: java.util.List channels> = $r8 >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : $r9 = r0.<dynoptic.model.export.GraphExporterTests: java.util.List channels>
dynoptic.model.export.GraphExporterTests.setUp : $r9 = r0.<dynoptic.model.export.GraphExporterTests: java.util.List channels> >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2)
dynoptic.model.export.GraphExporterTests.setUp : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.export.GraphExporterTests.setUp : return
