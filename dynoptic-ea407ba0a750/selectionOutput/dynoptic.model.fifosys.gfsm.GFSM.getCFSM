dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r1 = new dynoptic.model.fifosys.cfsm.CFSM >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int numProcesses>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int numProcesses> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r20 = r0.<dynoptic.model.fifosys.gfsm.GFSM: java.util.List channelIds>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r20 = r0.<dynoptic.model.fifosys.gfsm.GFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>($i1, $r20)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>($i1, $r20) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r2 = $r1
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r2 = $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r21 = <dynoptic.model.fifosys.gfsm.GFSM: java.util.logging.Logger logger>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r21 = <dynoptic.model.fifosys.gfsm.GFSM: java.util.logging.Logger logger> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r22 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r22 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GFSM -> CFSM: ")
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GFSM -> CFSM: ") >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r24 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r24 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke $r21.<java.util.logging.Logger: void info(java.lang.String)>($r27)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke $r21.<java.util.logging.Logger: void info(java.lang.String)>($r27) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r4 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r4 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r6 = staticinvoke <dynoptic.util.Util: java.util.Map newMap()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r6 = staticinvoke <dynoptic.util.Util: java.util.Map newMap()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r7 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r7 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r8 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r8 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r9 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r9 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : i0 = 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : i0 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i2 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int numProcesses>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i2 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int numProcesses> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if i0 >= $i2
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if i0 >= $i2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r28 = <dynoptic.model.fifosys.gfsm.GFSM: java.util.logging.Logger logger>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if i0 >= $i2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : return r2
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r28 = <dynoptic.model.fifosys.gfsm.GFSM: java.util.logging.Logger logger> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r29 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r29 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Building FSM for pid ")
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Building FSM for pid ") >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke $r28.<java.util.logging.Logger: void info(java.lang.String)>($r32)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke $r28.<java.util.logging.Logger: void info(java.lang.String)>($r32) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId> = 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId> = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r33 = r0.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set states>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r33 = r0.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r10 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r10 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z1 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r34 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r38 = <dynoptic.model.fifosys.gfsm.GFSM: java.util.logging.Logger logger>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r38 = <dynoptic.model.fifosys.gfsm.GFSM: java.util.logging.Logger logger> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r39 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r39 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GFSMState->FSMState[pid=")
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GFSMState->FSMState[pid=") >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] stateMap : ")
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] stateMap : ") >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r43 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r43 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke $r38.<java.util.logging.Logger: void info(java.lang.String)>($r45)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke $r38.<java.util.logging.Logger: void info(java.lang.String)>($r45) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r46 = r0.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set states>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r46 = r0.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r47 = interfaceinvoke $r46.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r47 = interfaceinvoke $r46.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z6 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z6 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z6 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z6 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r48 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z6 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r58 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r58 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z13 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z13 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z13 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z13 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z13 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r61 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r61 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r62 = interfaceinvoke r61.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r62 = interfaceinvoke r61.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z14 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z14 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r63 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z14 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : z18 = 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : z18 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : z19 = 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : z19 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r67 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r67 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r68 = interfaceinvoke r67.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r68 = interfaceinvoke r67.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z20 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z20 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z20 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z20 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r69 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z20 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if z19 != 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if z19 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z23 = <dynoptic.model.fifosys.gfsm.GFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if z19 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : z19 = 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z23 = <dynoptic.model.fifosys.gfsm.GFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z23 != 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z23 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z24 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z23 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z25 = <dynoptic.model.fifosys.gfsm.GFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z25 = <dynoptic.model.fifosys.gfsm.GFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z25 != 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z25 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z26 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z25 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r78 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r78 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r79 = interfaceinvoke r6.<java.util.Map: java.util.Collection values()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r79 = interfaceinvoke r6.<java.util.Map: java.util.Collection values()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i7 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i7 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r78.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,java.util.Set,java.util.Set,java.util.Collection,int)>(i0, r3, r4, $r79, $i7)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r78.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,java.util.Set,java.util.Set,java.util.Collection,int)>(i0, r3, r4, $r79, $i7) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r80 = $r78
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r80 = $r78 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if z0 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z27 = virtualinvoke r80.<dynoptic.model.fifosys.cfsm.fsm.FSM: boolean isDeterministic()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>(r80)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>(r80) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r6.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r6.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r3.<java.util.Set: void clear()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r3.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: void clear()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r8.<java.util.Set: void clear()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r8.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : i0 = i0 + 1
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : i0 = i0 + 1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $i2 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int numProcesses>]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $i2 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int numProcesses>] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i2 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int numProcesses>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z27 = virtualinvoke r80.<dynoptic.model.fifosys.cfsm.fsm.FSM: boolean isDeterministic()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z27 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z27 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r80.<dynoptic.model.fifosys.cfsm.fsm.FSM: void minimize()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z27 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>(r80)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r80.<dynoptic.model.fifosys.cfsm.fsm.FSM: void minimize()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>(r80)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z26 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z26 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z26 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r77 = new java.lang.AssertionError
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z26 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r78 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r77 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r77.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r77.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : throw $r77
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z24 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z24 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z24 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r76 = new java.lang.AssertionError
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z24 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z25 = <dynoptic.model.fifosys.gfsm.GFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r76 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r76.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r76.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : throw $r76
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r69 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r70 = (dynoptic.model.fifosys.gfsm.GFSMState) $r69
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r70 = (dynoptic.model.fifosys.gfsm.GFSMState) $r69 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r71 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.gfsm.GFSMState findBisimularFSMState(dynoptic.model.fifosys.gfsm.GFSMState,java.util.Map)>(r70, r6)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r71 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.gfsm.GFSMState findBisimularFSMState(dynoptic.model.fifosys.gfsm.GFSMState,java.util.Map)>(r70, r6) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if r71 != null
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if r71 != null >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z20 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if r71 != null >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r72 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r70)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r72 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r70) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r73 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r72
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r73 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r72 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r74 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r71)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r74 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r71) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r75 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r74
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r75 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r74 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: void remapPredTxns(dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map)>(r73, r75, r6)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: void remapPredTxns(dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map)>(r73, r75, r6) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r68.<java.util.Iterator: void remove()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r68.<java.util.Iterator: void remove()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: boolean remove(java.lang.Object)>(r73)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: boolean remove(java.lang.Object)>(r73) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>(r73)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>(r73) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : z19 = 1
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : z19 = 1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= (branch)]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= (branch)] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if z19 != 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z20 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z20 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r63 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r64 = (dynoptic.model.fifosys.gfsm.GFSMState) $r63
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r64 = (dynoptic.model.fifosys.gfsm.GFSMState) $r63 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r65 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r64)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r65 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r64) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r66 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r65
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r66 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r65 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z15 = virtualinvoke r66.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z15 = virtualinvoke r66.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z15 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z15 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z15 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z16 = interfaceinvoke r8.<java.util.Set: boolean contains(java.lang.Object)>(r66)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z16 = interfaceinvoke r8.<java.util.Set: boolean contains(java.lang.Object)>(r66) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z16 != 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z16 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r62.<java.util.Iterator: void remove()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z16 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r62.<java.util.Iterator: void remove()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: boolean remove(java.lang.Object)>(r66)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: boolean remove(java.lang.Object)>(r66) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z14 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r60 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r59
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r60 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r59 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r9.<java.util.Set: void clear()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r9.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : staticinvoke <dynoptic.model.AbsFSMState: void findTransitiveClosure(dynoptic.model.AbsFSMState,java.util.Set,java.util.Set)>(r60, r9, r8)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : staticinvoke <dynoptic.model.AbsFSMState: void findTransitiveClosure(dynoptic.model.AbsFSMState,java.util.Set,java.util.Set)>(r60, r9, r8) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z13 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z13 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z13 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r48 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r49 = (dynoptic.model.fifosys.gfsm.GFSMState) $r48
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r49 = (dynoptic.model.fifosys.gfsm.GFSMState) $r48 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r5.<java.util.Set: void clear()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r5.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r7.<java.util.Set: void clear()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r7.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : staticinvoke <dynoptic.model.AbsFSMState: void findNonPidTransitiveClosure(int,dynoptic.model.AbsFSMState,java.util.Set,java.util.Set)>(i0, r49, r7, r5)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : staticinvoke <dynoptic.model.AbsFSMState: void findNonPidTransitiveClosure(int,dynoptic.model.AbsFSMState,java.util.Set,java.util.Set)>(i0, r49, r7, r5) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r49)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r49) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r50 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r49)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r50 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r49) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r51 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r50
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r51 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r50 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r13 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r13 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z8 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z8 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z8 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z8 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r52 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z8 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z6 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z6 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z6 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r52 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r14 = (dynoptic.model.fifosys.gfsm.GFSMState) $r52
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r14 = (dynoptic.model.fifosys.gfsm.GFSMState) $r52 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z9 = virtualinvoke r14.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAcceptForPid(int)>(i0)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z9 = virtualinvoke r14.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAcceptForPid(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z9 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z9 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r51.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void setAccept()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z9 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r53 = virtualinvoke r14.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r53 = virtualinvoke r14.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r15 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r15 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z11 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z11 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r54 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z11 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z8 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z8 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z8 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r54 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r16 = (synoptic.model.event.DistEventType) $r54
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r16 = (synoptic.model.event.DistEventType) $r54 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i6 = virtualinvoke r16.<synoptic.model.event.DistEventType: int getPid()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i6 = virtualinvoke r16.<synoptic.model.event.DistEventType: int getPid()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $i6 == i0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $i6 == i0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $i6 == i0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r55 = virtualinvoke r14.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r16)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r55 = virtualinvoke r14.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r16) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r17 = interfaceinvoke $r55.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r17 = interfaceinvoke $r55.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z12 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z12 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z12 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z12 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r56 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z12 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r56 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r18 = (dynoptic.model.fifosys.gfsm.GFSMState) $r56
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r18 = (dynoptic.model.fifosys.gfsm.GFSMState) $r56 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r57 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r57 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r19 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r57
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r19 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r57 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r51.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r16, r19)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r51.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r16, r19) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z12 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z12 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z12 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z11 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : virtualinvoke r51.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void setAccept()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r51)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r51) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r53 = virtualinvoke r14.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r34 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r11 = (dynoptic.model.fifosys.gfsm.GFSMState) $r34
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r11 = (dynoptic.model.fifosys.gfsm.GFSMState) $r34 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r35 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $r35 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z2 = virtualinvoke r11.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAcceptForPid(int)>(i0)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z2 = virtualinvoke r11.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAcceptForPid(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z3 = virtualinvoke r11.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isInitForPid(int)>(i0)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z3 = virtualinvoke r11.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isInitForPid(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i3 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i3 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>($z2, $z3, i0, $i3)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : specialinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>($z2, $z3, i0, $i3) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r12 = $r35
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r12 = $r35 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z4 = virtualinvoke r12.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z4 = virtualinvoke r12.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z4 == 0
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z4 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : if $z4 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i4 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId>
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i4 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i5 = $i4 + 1
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i5 = $i4 + 1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId> = $i5
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId> = $i5 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r12)
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r12) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.getCFSM : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.getCFSM : $i4 = r0.<dynoptic.model.fifosys.gfsm.GFSM: int nextScmId>
