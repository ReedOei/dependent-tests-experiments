dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $z0 = <dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : if $z0 != 0
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $i0 = virtualinvoke r1.<synoptic.model.channelid.ChannelId: int getScmId()>()
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r4 = r0.<dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: java.util.List channelStates>
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r4 = r0.<dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: java.util.List channelStates> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $i2 = virtualinvoke r1.<synoptic.model.channelid.ChannelId: int getScmId()>()
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $i2 = virtualinvoke r1.<synoptic.model.channelid.ChannelId: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2)
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r6 = (dynoptic.model.fifosys.channel.channelstate.ChState) $r5
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r6 = (dynoptic.model.fifosys.channel.channelstate.ChState) $r5 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r7 = virtualinvoke $r6.<dynoptic.model.fifosys.channel.channelstate.ChState: synoptic.model.event.IDistEventType peek()>()
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r7 = virtualinvoke $r6.<dynoptic.model.fifosys.channel.channelstate.ChState: synoptic.model.event.IDistEventType peek()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r8 = (synoptic.model.event.DistEventType) $r7
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r8 = (synoptic.model.event.DistEventType) $r7 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : return $r8
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $i0 = virtualinvoke r1.<synoptic.model.channelid.ChannelId: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r2 = r0.<dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: java.util.List channelStates>
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r2 = r0.<dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: java.util.List channelStates> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $i1 = interfaceinvoke $r2.<java.util.List: int size()>()
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $i1 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : if $i0 < $i1
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : if $i0 < $i1 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r3 = new java.lang.AssertionError
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : if $i0 < $i1 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r4 = r0.<dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: java.util.List channelStates>
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : $r3 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : specialinvoke $r3.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : specialinvoke $r3.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.MutableMultiChState.peek : throw $r3
