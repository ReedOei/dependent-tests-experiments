dynoptic.invariants.EventuallyHappens.checkInitialized : $z0 = <dynoptic.invariants.EventuallyHappens: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : if $z0 != 0
dynoptic.invariants.EventuallyHappens.checkInitialized : if $z0 != 0 >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : $r1 = r0.<dynoptic.invariants.EventuallyHappens: synoptic.model.event.DistEventType firstSynth1>
dynoptic.invariants.EventuallyHappens.checkInitialized : if $z0 != 0 >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : $z1 = <dynoptic.invariants.EventuallyHappens: boolean $assertionsDisabled>
dynoptic.invariants.EventuallyHappens.checkInitialized : $z1 = <dynoptic.invariants.EventuallyHappens: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : if $z1 != 0
dynoptic.invariants.EventuallyHappens.checkInitialized : if $z1 != 0 >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : $r3 = r0.<dynoptic.invariants.EventuallyHappens: synoptic.model.event.DistEventType secondSynth1>
dynoptic.invariants.EventuallyHappens.checkInitialized : if $z1 != 0 >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : return
dynoptic.invariants.EventuallyHappens.checkInitialized : $r3 = r0.<dynoptic.invariants.EventuallyHappens: synoptic.model.event.DistEventType secondSynth1> >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : if $r3 != null
dynoptic.invariants.EventuallyHappens.checkInitialized : if $r3 != null >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : $r4 = new java.lang.AssertionError
dynoptic.invariants.EventuallyHappens.checkInitialized : if $r3 != null >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : return
dynoptic.invariants.EventuallyHappens.checkInitialized : $r4 = new java.lang.AssertionError >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
dynoptic.invariants.EventuallyHappens.checkInitialized : specialinvoke $r4.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : throw $r4
dynoptic.invariants.EventuallyHappens.checkInitialized : $r1 = r0.<dynoptic.invariants.EventuallyHappens: synoptic.model.event.DistEventType firstSynth1> >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : if $r1 != null
dynoptic.invariants.EventuallyHappens.checkInitialized : if $r1 != null >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : $r2 = new java.lang.AssertionError
dynoptic.invariants.EventuallyHappens.checkInitialized : if $r1 != null >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : $z1 = <dynoptic.invariants.EventuallyHappens: boolean $assertionsDisabled>
dynoptic.invariants.EventuallyHappens.checkInitialized : $r2 = new java.lang.AssertionError >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : specialinvoke $r2.<java.lang.AssertionError: void <init>()>()
dynoptic.invariants.EventuallyHappens.checkInitialized : specialinvoke $r2.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.invariants.EventuallyHappens.checkInitialized : throw $r2
