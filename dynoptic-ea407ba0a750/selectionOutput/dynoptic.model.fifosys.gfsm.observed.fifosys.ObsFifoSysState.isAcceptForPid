dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if i0 < 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r3 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState fsmStates>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r3 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z1 = virtualinvoke $r3.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: boolean isAcceptForPid(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z1 = virtualinvoke $r3.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: boolean isAcceptForPid(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z1 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r4 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState channelStates>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z3 = 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z3 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : return $z3
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r4 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState channelStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z2 = virtualinvoke $r4.<dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: boolean isEmptyForPid(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z2 = virtualinvoke $r4.<dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: boolean isEmptyForPid(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z2 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z3 = 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z3 = 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $z3 = 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : goto [?= return $z3]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : goto [?= return $z3] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : return $z3
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if i0 < 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState fsmStates>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if i0 < 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r2 = new java.lang.AssertionError
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r2 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : specialinvoke $r2.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : specialinvoke $r2.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : throw $r2
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $i1 = virtualinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: int getNumProcesses()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $i1 = virtualinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: int getNumProcesses()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if i0 < $i1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if i0 < $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r2 = new java.lang.AssertionError
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : if i0 < $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.isAcceptForPid : $r3 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState fsmStates>
