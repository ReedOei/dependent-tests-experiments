dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z0 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z0 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r2 != null
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z1 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z1 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r1 != null
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z1 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z2 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z3 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r4 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r4 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r15
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r15 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i0 = interfaceinvoke r3.<java.util.List: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i0 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = 1
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = 1 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r16 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r16 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i2 = $r16.<dynoptic.main.DynopticOptions: int baseTimeout>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i2 = $r16.<dynoptic.main.DynopticOptions: int baseTimeout> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r17 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r17 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = $r17.<dynoptic.main.DynopticOptions: int timeoutDelta>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = $r17.<dynoptic.main.DynopticOptions: int timeoutDelta> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r18 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r18 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i4 = $r18.<dynoptic.main.DynopticOptions: int maxTimeout>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i4 = $r18.<dynoptic.main.DynopticOptions: int maxTimeout> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i5 = i2
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i5 = i2 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i4 >= i2
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i4 >= i2 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r19 = new java.lang.Exception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i4 >= i2 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r20 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r20 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r21 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r21 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r23 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r23 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r20.<java.util.logging.Logger: void info(java.lang.String)>($r29)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r20.<java.util.logging.Logger: void info(java.lang.String)>($r29) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r30 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r30 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r7 = $r30.<dynoptic.main.DynopticOptions: java.lang.String outputPathPrefix>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r7 = $r30.<dynoptic.main.DynopticOptions: java.lang.String outputPathPrefix> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z4 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z4 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i1 <= i0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z4 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z5 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z5 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r32 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z5 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z6 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z6 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z6 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z6 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i7 = interfaceinvoke r4.<java.util.Set: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z6 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r35 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r35 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z7 = $r35.<dynoptic.main.DynopticOptions: boolean minimize>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z7 = $r35.<dynoptic.main.DynopticOptions: boolean minimize> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r8 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.cfsm.CFSM getCFSM(boolean)>($z7)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r8 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.cfsm.CFSM getCFSM(boolean)>($z7) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r36 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r36 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z8 = $r36 instanceof dynoptic.mc.mcscm.McScM
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z8 = $r36 instanceof dynoptic.mc.mcscm.McScM >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z8 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z8 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithInvTracing(dynoptic.invariants.BinaryInvariant)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z8 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r42 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r42 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z9 = $r42 instanceof dynoptic.mc.spin.Spin
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z9 = $r42 instanceof dynoptic.mc.spin.Spin >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z9 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z9 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r43 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z9 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r49 = new java.lang.RuntimeException
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r49 = new java.lang.RuntimeException >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String)>("Model checker is not properly specified.")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String)>("Model checker is not properly specified.") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r49
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r43 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checking_pml_")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checking_pml_") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r45 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String getConnectorString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r45 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String getConnectorString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r48 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r48 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i12 = $r48.<dynoptic.main.DynopticOptions: int spinChannelCapacity>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i12 = $r48.<dynoptic.main.DynopticOptions: int spinChannelCapacity> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r9 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.lang.String toPromelaString(java.lang.String,int)>($r47, $i12)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r9 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.lang.String toPromelaString(java.lang.String,int)>($r47, $i12) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r50.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r50.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r51 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r51 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r52 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r52 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking ... ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking ... ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r54 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r54 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Inv ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Inv ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refinements so far: ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refinements so far: ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Timeout = ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Timeout = ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r51.<java.util.logging.Logger: void info(java.lang.String)>($r65)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r51.<java.util.logging.Logger: void info(java.lang.String)>($r65) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r66 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r66 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r66.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r66.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r67 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r66.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r68 := @caughtexception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r10 = $r68 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r70 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r70 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r71 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r71 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking invariant: ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking invariant: ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r73 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r73 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r70.<java.util.logging.Logger: void info(java.lang.String)>($r75)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r70.<java.util.logging.Logger: void info(java.lang.String)>($r75) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z11 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z11 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z11 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z11 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r76 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z11 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r85 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r85 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r85
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r85 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r76 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r77 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r77 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r77.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r77.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking these invariants with timeout value ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking these invariants with timeout value ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r81 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r81 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r76.<java.util.logging.Logger: void info(java.lang.String)>($r83)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r76.<java.util.logging.Logger: void info(java.lang.String)>($r83) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i5 = i5 + i3
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i5 = i5 + i3 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i5 <= i4
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i5 <= i4 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r84 = new java.lang.Exception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i5 <= i4 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r85 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r84 = new java.lang.Exception >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r84.<java.lang.Exception: void <init>(java.lang.String)>("McScM timed-out on all invariants. Cannot continue.")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r84.<java.lang.Exception: void <init>(java.lang.String)>("McScM timed-out on all invariants. Cannot continue.") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r84
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r67 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r67.<dynoptic.mc.MC: void verify(java.lang.String,int)>(r9, i5)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r67 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r68 := @caughtexception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r67.<dynoptic.mc.MC: void verify(java.lang.String,int)>(r9, i5) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= i5 = i2]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r67.<dynoptic.mc.MC: void verify(java.lang.String,int)>(r9, i5) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r68 := @caughtexception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= i5 = i2] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i5 = i2
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i5 = i2 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r86 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r86 = r0.<dynoptic.main.DynopticMain: dynoptic.mc.MC mc> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r87 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getChannelIds()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r87 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getChannelIds()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r88 = virtualinvoke $r86.<dynoptic.mc.MC: dynoptic.mc.MCResult getVerifyResult(java.util.List)>($r87)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r88 = virtualinvoke $r86.<dynoptic.mc.MC: dynoptic.mc.MCResult getVerifyResult(java.util.List)>($r87) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r89 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r89 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r90 = virtualinvoke r88.<dynoptic.mc.MCResult: java.lang.String toRawString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r90 = virtualinvoke r88.<dynoptic.mc.MCResult: java.lang.String toRawString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r89.<java.util.logging.Logger: void info(java.lang.String)>($r90)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r89.<java.util.logging.Logger: void info(java.lang.String)>($r90) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r91 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r91 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r92 = virtualinvoke r88.<java.lang.Object: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r92 = virtualinvoke r88.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r91.<java.util.logging.Logger: void info(java.lang.String)>($r92)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r91.<java.util.logging.Logger: void info(java.lang.String)>($r92) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z13 = virtualinvoke r88.<dynoptic.mc.MCResult: boolean modelIsSafe()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z13 = virtualinvoke r88.<dynoptic.mc.MCResult: boolean modelIsSafe()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z13 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z13 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r93 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z13 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r114 = virtualinvoke r88.<dynoptic.mc.MCResult: dynoptic.mc.MCcExample getCExample()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r114 = virtualinvoke r88.<dynoptic.mc.MCResult: dynoptic.mc.MCcExample getCExample()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void refineCExample(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.mc.MCcExample)>(r2, $r114)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void refineCExample(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.mc.MCcExample)>(r2, $r114) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = i6 + 1
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = i6 + 1 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z17 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z17 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z17 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z17 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z17 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r93 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r11 = (dynoptic.invariants.BinaryInvariant) $r93
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r11 = (dynoptic.invariants.BinaryInvariant) $r93 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z14 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z14 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z14 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z14 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r11 == r6
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z14 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z16 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z16 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z16 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z16 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r95 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z16 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r103 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r103 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r103
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r103 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = i1 + 1
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = i1 + 1 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r104 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r104 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r105 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r105 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r105.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r107 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r107 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r104.<java.util.logging.Logger: void info(java.lang.String)>($r113)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r104.<java.util.logging.Logger: void info(java.lang.String)>($r113) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= (branch)]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= (branch)] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r95 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r96 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r96 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r96.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r96.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished checking ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished checking ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invariants.")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invariants.") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r95.<java.util.logging.Logger: void info(java.lang.String)>($r102)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r95.<java.util.logging.Logger: void info(java.lang.String)>($r102) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : return
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r11 == r6 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r94 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r11 == r6 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r94 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r94.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r94.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r94
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithInvTracing(dynoptic.invariants.BinaryInvariant)>(r6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r37 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r37 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checking_scm_")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checking_scm_") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r39 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String getConnectorString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r39 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String getConnectorString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r9 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.lang.String toScmString(java.lang.String)>($r41)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r9 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.lang.String toScmString(java.lang.String)>($r41) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i7 = interfaceinvoke r4.<java.util.Set: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i8 = interfaceinvoke r5.<java.util.Set: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i8 = interfaceinvoke r5.<java.util.Set: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i9 = $i7 + $i8
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i9 = $i7 + $i8 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i10 = interfaceinvoke r3.<java.util.List: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i10 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i11 = $i9 + $i10
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i11 = $i9 + $i10 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i11 == i0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i11 == i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r34 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i11 == i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r35 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r34 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r34.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r34.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r34
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r32 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r6 == $r32
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r6 == $r32 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r33 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r6 == $r32 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z6 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r33 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r33.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r33.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r33
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i1 <= i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r31 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i1 <= i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r31 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r31.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r31.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r31
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r19 = new java.lang.Exception >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>("maxTimeout value must be greater than baseTimeout value")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>("maxTimeout value must be greater than baseTimeout value") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r19
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z3 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z3 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z3 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r14 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z3 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r14 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r14.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r14.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r14
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r13 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r13 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r13.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r13.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r13
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r2 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r12 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r2 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r12 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r12.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r12.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r12
