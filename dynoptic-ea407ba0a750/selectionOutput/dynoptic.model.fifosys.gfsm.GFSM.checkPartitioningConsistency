dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : return
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : r2 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r5
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : r2 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r5 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z1 == 0
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : r4 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r6
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : r4 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r6 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r7 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState getFSMStates()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r7 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState getFSMStates()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r8 = virtualinvoke r4.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState getFSMStates()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r8 = virtualinvoke r4.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState getFSMStates()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z2 = virtualinvoke $r7.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: boolean equals(java.lang.Object)>($r8)
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z2 = virtualinvoke $r7.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: boolean equals(java.lang.Object)>($r8) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z2 == 0
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z3 = <dynoptic.model.fifosys.gfsm.GFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z3 = <dynoptic.model.fifosys.gfsm.GFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z3 != 0
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r9 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.GFSMState getParent()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r9 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.GFSMState getParent()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r10 = virtualinvoke r4.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.GFSMState getParent()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r10 = virtualinvoke r4.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.GFSMState getParent()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z4 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10)
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $z4 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z4 != 0
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r11 = new java.lang.AssertionError
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : $r11 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : specialinvoke $r11.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : specialinvoke $r11.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.checkPartitioningConsistency : throw $r11
