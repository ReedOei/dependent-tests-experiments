dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : z0 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : z1 = 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : z1 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z2 == 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if z1 != 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : return
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : z1 = 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r6 = (dynoptic.model.fifosys.gfsm.GFSMState) $r16
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r6 = (dynoptic.model.fifosys.gfsm.GFSMState) $r16 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r7 = null
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r7 = null >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r8 = null
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r8 = null >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r17 = virtualinvoke r6.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r17 = virtualinvoke r6.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r9 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r9 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z3 == 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r18 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if r7 != null
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if r7 != null >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if r7 != null >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r21 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r21 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r22 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r21
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r22 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r21 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r23 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r23 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r24 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r23
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r24 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r23 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: void remapPredTxns(dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map)>(r22, r24, r3)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: void remapPredTxns(dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map)>(r22, r24, r3) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>(r22)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>(r22) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>(r22)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>(r22) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : z1 = 1
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : z1 = 1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= (branch)]
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= (branch)] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if z1 != 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r18 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r10 = (synoptic.model.event.DistEventType) $r18
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r10 = (synoptic.model.event.DistEventType) $r18 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r11 = virtualinvoke r6.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r10)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r11 = virtualinvoke r6.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r10) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r12 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r12 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z4 == 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z4 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r19 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z4 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r19 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r13 = (dynoptic.model.fifosys.gfsm.GFSMState) $r19
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r13 = (dynoptic.model.fifosys.gfsm.GFSMState) $r19 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r14 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r14 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z5 == 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z5 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r20 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z5 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $r20 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r15 = (dynoptic.model.fifosys.gfsm.GFSMState) $r20
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r15 = (dynoptic.model.fifosys.gfsm.GFSMState) $r20 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if r13 != r15
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if r13 != r15 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if r13 != r15 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z6 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: boolean checkSubsuming(dynoptic.model.fifosys.gfsm.GFSMState,dynoptic.model.fifosys.gfsm.GFSMState,java.util.Map)>(r13, r15, r3)
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z6 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.GFSM: boolean checkSubsuming(dynoptic.model.fifosys.gfsm.GFSMState,dynoptic.model.fifosys.gfsm.GFSMState,java.util.Map)>(r13, r15, r3) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z6 == 0
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z6 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r7 = r13
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : if $z6 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r7 = r13 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r8 = r15
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : r8 = r15 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSM.mergeSimulatingStates : $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
