dynoptic.model.export.GraphExporter.getDotCommand : r0 = <dynoptic.model.export.GraphExporter: java.lang.String[] dotCommands> >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : i0 = lengthof r0
dynoptic.model.export.GraphExporter.getDotCommand : i0 = lengthof r0 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : i1 = 0
dynoptic.model.export.GraphExporter.getDotCommand : i1 = 0 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : if i1 >= i0
dynoptic.model.export.GraphExporter.getDotCommand : if i1 >= i0 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : r1 = r0[i1]
dynoptic.model.export.GraphExporter.getDotCommand : if i1 >= i0 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : r4 = staticinvoke <synoptic.main.SynopticMain: synoptic.main.SynopticMain getInstanceWithExistenceCheck()>()
dynoptic.model.export.GraphExporter.getDotCommand : r4 = staticinvoke <synoptic.main.SynopticMain: synoptic.main.SynopticMain getInstanceWithExistenceCheck()>() >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r5 = r4.<synoptic.main.SynopticMain: synoptic.main.options.SynopticOptions options>
dynoptic.model.export.GraphExporter.getDotCommand : $r5 = r4.<synoptic.main.SynopticMain: synoptic.main.options.SynopticOptions options> >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r6 = $r5.<synoptic.main.options.SynopticOptions: java.lang.String dotExecutablePath>
dynoptic.model.export.GraphExporter.getDotCommand : $r6 = $r5.<synoptic.main.options.SynopticOptions: java.lang.String dotExecutablePath> >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : if $r6 != null
dynoptic.model.export.GraphExporter.getDotCommand : if $r6 != null >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r7 = <dynoptic.model.export.GraphExporter: java.util.logging.Logger logger>
dynoptic.model.export.GraphExporter.getDotCommand : if $r6 != null >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r14 = r4.<synoptic.main.SynopticMain: synoptic.main.options.SynopticOptions options>
dynoptic.model.export.GraphExporter.getDotCommand : $r14 = r4.<synoptic.main.SynopticMain: synoptic.main.options.SynopticOptions options> >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r15 = $r14.<synoptic.main.options.SynopticOptions: java.lang.String dotExecutablePath>
dynoptic.model.export.GraphExporter.getDotCommand : $r15 = $r14.<synoptic.main.options.SynopticOptions: java.lang.String dotExecutablePath> >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : return $r15
dynoptic.model.export.GraphExporter.getDotCommand : $r7 = <dynoptic.model.export.GraphExporter: java.util.logging.Logger logger> >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r8 = new java.lang.StringBuilder
dynoptic.model.export.GraphExporter.getDotCommand : $r8 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.export.GraphExporter.getDotCommand : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate the dot command executable, use cmd line option:\n\t")
dynoptic.model.export.GraphExporter.getDotCommand : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate the dot command executable, use cmd line option:\n\t") >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r10 = r4.<synoptic.main.SynopticMain: synoptic.main.options.SynopticOptions options>
dynoptic.model.export.GraphExporter.getDotCommand : $r10 = r4.<synoptic.main.SynopticMain: synoptic.main.options.SynopticOptions options> >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r11 = virtualinvoke $r10.<synoptic.main.options.SynopticOptions: java.lang.String getOptDesc(java.lang.String)>("dotExecutablePath")
dynoptic.model.export.GraphExporter.getDotCommand : $r11 = virtualinvoke $r10.<synoptic.main.options.SynopticOptions: java.lang.String getOptDesc(java.lang.String)>("dotExecutablePath") >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
dynoptic.model.export.GraphExporter.getDotCommand : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.export.GraphExporter.getDotCommand : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : virtualinvoke $r7.<java.util.logging.Logger: void severe(java.lang.String)>($r13)
dynoptic.model.export.GraphExporter.getDotCommand : virtualinvoke $r7.<java.util.logging.Logger: void severe(java.lang.String)>($r13) >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r14 = r4.<synoptic.main.SynopticMain: synoptic.main.options.SynopticOptions options>
dynoptic.model.export.GraphExporter.getDotCommand : r1 = r0[i1] >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $r3 = new java.io.File
dynoptic.model.export.GraphExporter.getDotCommand : $r3 = new java.io.File >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1)
dynoptic.model.export.GraphExporter.getDotCommand : specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : r2 = $r3
dynoptic.model.export.GraphExporter.getDotCommand : r2 = $r3 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>()
dynoptic.model.export.GraphExporter.getDotCommand : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : if $z0 == 0
dynoptic.model.export.GraphExporter.getDotCommand : if $z0 == 0 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : return r1
dynoptic.model.export.GraphExporter.getDotCommand : if $z0 == 0 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : i1 = i1 + 1
dynoptic.model.export.GraphExporter.getDotCommand : i1 = i1 + 1 >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : goto [?= (branch)]
dynoptic.model.export.GraphExporter.getDotCommand : goto [?= (branch)] >>>>>>>> dynoptic.model.export.GraphExporter.getDotCommand : if i1 >= i0
