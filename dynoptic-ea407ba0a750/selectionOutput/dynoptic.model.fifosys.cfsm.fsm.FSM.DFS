dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r5 = virtualinvoke r1.<dk.brics.automaton.State: java.util.Set getTransitions()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r5 = virtualinvoke r1.<dk.brics.automaton.State: java.util.Set getTransitions()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : return
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r7 = (dk.brics.automaton.Transition) $r12
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r7 = (dk.brics.automaton.Transition) $r12 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r8 = virtualinvoke r7.<dk.brics.automaton.Transition: dk.brics.automaton.State getDest()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r8 = virtualinvoke r7.<dk.brics.automaton.Transition: dk.brics.automaton.State getDest()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r9 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r13
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r9 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if r9 != null
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if r9 != null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r14 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if r9 != null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c0 = virtualinvoke r7.<dk.brics.automaton.Transition: char getMin()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c0 = virtualinvoke r7.<dk.brics.automaton.Transition: char getMin()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c1 = virtualinvoke r7.<dk.brics.automaton.Transition: char getMax()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c1 = virtualinvoke r7.<dk.brics.automaton.Transition: char getMax()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c2 = c0
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c2 = c0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if c2 > c1
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if c2 > c1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r10 = virtualinvoke r4.<dynoptic.model.automaton.EventTypeEncodings: synoptic.model.event.DistEventType getEventType(char)>(c2)
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if c2 > c1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r10 = virtualinvoke r4.<dynoptic.model.automaton.EventTypeEncodings: synoptic.model.event.DistEventType getEventType(char)>(c2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r10, r9)
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r10, r9) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $i5 = c2 + 1
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $i5 = c2 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c2 = (char) $i5
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c2 = (char) $i5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : goto [?= (branch)]
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : goto [?= (branch)] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if c2 > c1
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r14 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $z1 = virtualinvoke r8.<dk.brics.automaton.State: boolean isAccept()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $z1 = virtualinvoke r8.<dk.brics.automaton.State: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $i3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $i3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $i4 = interfaceinvoke r3.<java.util.Map: int size()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $i4 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : specialinvoke $r14.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>($z1, 0, $i3, $i4)
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : specialinvoke $r14.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>($z1, 0, $i3, $i4) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r9 = $r14
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : r9 = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r15 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states>
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r15 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r9)
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r9) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $z3 = virtualinvoke r8.<dk.brics.automaton.State: boolean isAccept()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $z3 = virtualinvoke r8.<dk.brics.automaton.State: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if $z3 == 0
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r16 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set acceptStates>
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: void DFS(dk.brics.automaton.State,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map,dynoptic.model.automaton.EventTypeEncodings)>(r8, r9, r3, r4)
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: void DFS(dk.brics.automaton.State,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map,dynoptic.model.automaton.EventTypeEncodings)>(r8, r9, r3, r4) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : c0 = virtualinvoke r7.<dk.brics.automaton.Transition: char getMin()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : $r16 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set acceptStates> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>(r9)
dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>(r9) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.DFS : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: void DFS(dk.brics.automaton.State,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map,dynoptic.model.automaton.EventTypeEncodings)>(r8, r9, r3, r4)
