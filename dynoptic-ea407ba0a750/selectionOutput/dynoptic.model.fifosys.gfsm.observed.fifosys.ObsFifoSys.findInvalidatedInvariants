dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r4 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getInitState()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r4 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getInitState()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : return r2
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r6 = (dynoptic.invariants.BinaryInvariant) $r9
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r6 = (dynoptic.invariants.BinaryInvariant) $r9 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r10 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: java.util.logging.Logger logger>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r10 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: java.util.logging.Logger logger> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r7 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r7 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-> Checking ")
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-> Checking ") >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r12 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r12 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for invalidation.")
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for invalidation.") >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r15)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r15) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r8 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: dynoptic.invariants.checkers.BinChecker newChecker()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r8 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: dynoptic.invariants.checkers.BinChecker newChecker()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z1 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState,java.util.Set)>(r8, r4, r3)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z1 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState,java.util.Set)>(r8, r4, r3) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r16 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: java.util.logging.Logger logger>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : interfaceinvoke r3.<java.util.Set: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : interfaceinvoke r3.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r16 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: java.util.logging.Logger logger> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : virtualinvoke $r16.<java.util.logging.Logger: void info(java.lang.String)>("--> INVALID.")
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : virtualinvoke $r16.<java.util.logging.Logger: void info(java.lang.String)>("--> INVALID.") >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : interfaceinvoke r3.<java.util.Set: void clear()>()
