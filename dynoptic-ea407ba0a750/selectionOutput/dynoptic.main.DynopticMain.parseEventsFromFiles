dynoptic.main.DynopticMain.parseEventsFromFiles : $z0 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if $z0 != 0
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if r1 != null
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.parseEventsFromFiles : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if $z1 != 0
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z1 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $r5 = r0.<dynoptic.main.DynopticMain: synoptic.main.SynopticMain synMain>
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z1 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.parseEventsFromFiles : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if $z2 != 0
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if r2 != null
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.parseEventsFromFiles : $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if $z3 != 0
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z3 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z4 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z3 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : r3 = staticinvoke <synoptic.main.SynopticMain: java.util.List parseEvents(synoptic.main.parser.TraceParser,java.util.List)>(r1, r2)
dynoptic.main.DynopticMain.parseEventsFromFiles : r3 = staticinvoke <synoptic.main.SynopticMain: java.util.List parseEvents(synoptic.main.parser.TraceParser,java.util.List)>(r1, r2) >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z5 = virtualinvoke r1.<synoptic.main.parser.TraceParser: boolean logTimeTypeIsTotallyOrdered()>()
dynoptic.main.DynopticMain.parseEventsFromFiles : $z5 = virtualinvoke r1.<synoptic.main.parser.TraceParser: boolean logTimeTypeIsTotallyOrdered()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if $z5 == 0
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z5 == 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $r9 = new dynoptic.main.OptionException
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z5 == 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke r0.<dynoptic.main.DynopticMain: void postParseEvents(java.util.List)>(r3)
dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke r0.<dynoptic.main.DynopticMain: void postParseEvents(java.util.List)>(r3) >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : return r3
dynoptic.main.DynopticMain.parseEventsFromFiles : $r9 = new dynoptic.main.OptionException >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r9.<dynoptic.main.OptionException: void <init>(java.lang.String)>("Dynoptic expects a log that is partially ordered.")
dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r9.<dynoptic.main.OptionException: void <init>(java.lang.String)>("Dynoptic expects a log that is partially ordered.") >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : throw $r9
dynoptic.main.DynopticMain.parseEventsFromFiles : $z4 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if $z4 == 0
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z4 == 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $r8 = new java.lang.AssertionError
dynoptic.main.DynopticMain.parseEventsFromFiles : if $z4 == 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : r3 = staticinvoke <synoptic.main.SynopticMain: java.util.List parseEvents(synoptic.main.parser.TraceParser,java.util.List)>(r1, r2)
dynoptic.main.DynopticMain.parseEventsFromFiles : $r8 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r8.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r8.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : throw $r8
dynoptic.main.DynopticMain.parseEventsFromFiles : if r2 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $r7 = new java.lang.AssertionError
dynoptic.main.DynopticMain.parseEventsFromFiles : if r2 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.parseEventsFromFiles : $r7 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r7.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r7.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : throw $r7
dynoptic.main.DynopticMain.parseEventsFromFiles : $r5 = r0.<dynoptic.main.DynopticMain: synoptic.main.SynopticMain synMain> >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : if $r5 != null
dynoptic.main.DynopticMain.parseEventsFromFiles : if $r5 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $r6 = new java.lang.AssertionError
dynoptic.main.DynopticMain.parseEventsFromFiles : if $r5 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.parseEventsFromFiles : $r6 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r6.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r6.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : throw $r6
dynoptic.main.DynopticMain.parseEventsFromFiles : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $r4 = new java.lang.AssertionError
dynoptic.main.DynopticMain.parseEventsFromFiles : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.parseEventsFromFiles : $r4 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.parseEventsFromFiles : specialinvoke $r4.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromFiles : throw $r4
