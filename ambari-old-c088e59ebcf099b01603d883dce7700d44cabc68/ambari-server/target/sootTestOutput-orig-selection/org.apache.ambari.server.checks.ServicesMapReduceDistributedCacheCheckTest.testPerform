org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r28 = "^([^:]*dfs|wasb|ecs):.*" >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig>
org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r29 = null
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r29 = null >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r3 == null
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r3 == null >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r29 == null
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r29 == null >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r4 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r4 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r30 = r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r30 = r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r31 = interfaceinvoke $r30.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r31 = interfaceinvoke $r30.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1: org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest this$0>
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1: org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest)>($r1)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : return $r2
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : return $r1
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r32 = (org.apache.ambari.server.state.Clusters) $r31
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r32 = (org.apache.ambari.server.state.Clusters) $r31 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r5 = interfaceinvoke $r32.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r4)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r5 = interfaceinvoke $r32.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r8 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r8 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r33 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("mapred-site")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r33 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("mapred-site") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r9 = (org.apache.ambari.server.state.DesiredConfig) $r33
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r9 = (org.apache.ambari.server.state.DesiredConfig) $r33 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r34 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("core-site")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r34 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("core-site") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r10 = (org.apache.ambari.server.state.DesiredConfig) $r34
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r10 = (org.apache.ambari.server.state.DesiredConfig) $r34 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r35 = virtualinvoke r9.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r35 = virtualinvoke r9.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>("mapred-site", $r35)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>("mapred-site", $r35) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r36 = virtualinvoke r10.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r36 = virtualinvoke r10.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r12 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>("core-site", $r36)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r12 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>("core-site", $r36) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r37 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r37 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("mapreduce.application.classpath")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("mapreduce.application.classpath") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r13 = (java.lang.String) $r38
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r13 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r39 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r39 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r40 = interfaceinvoke $r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("mapreduce.application.framework.path")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r40 = interfaceinvoke $r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("mapreduce.application.framework.path") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r14 = (java.lang.String) $r40
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r14 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r41 = interfaceinvoke r12.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r41 = interfaceinvoke r12.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("fs.defaultFS")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("fs.defaultFS") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r15 = (java.lang.String) $r42
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : r15 = (java.lang.String) $r42 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r43 = new java.util.ArrayList
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r43 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : specialinvoke $r43.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : specialinvoke $r43.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r13 == null
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r13 == null >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r17 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("app_classpath", r1, r2)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r17 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("app_classpath", r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0
org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4
org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5]
org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : return $r5
org.apache.ambari.server.checks.CheckDescription.getFail : return $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion>
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r14 == null
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r14 == null >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r18 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("framework_path", r1, r2)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r18 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("framework_path", r1, r2) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z9 = interfaceinvoke $r43.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z9 = interfaceinvoke $r43.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z9 != 0
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z9 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke $r22.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("MAPREDUCE2")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke $r22.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("MAPREDUCE2") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r23 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r23 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r23)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r24 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r43, " ")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r24 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r43, " ") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r24)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z7 = virtualinvoke r13.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z7 = virtualinvoke r13.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z7 == 0
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z7 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z6 = virtualinvoke r14.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z6 = virtualinvoke r14.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z6 == 0
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z6 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z2 = virtualinvoke r14.<java.lang.String: boolean matches(java.lang.String)>(r28)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z2 = virtualinvoke r14.<java.lang.String: boolean matches(java.lang.String)>(r28) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z2 != 0
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r15 == null
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if r15 == null >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z4 = virtualinvoke r15.<java.lang.String: boolean matches(java.lang.String)>(r28)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $z4 = virtualinvoke r15.<java.lang.String: boolean matches(java.lang.String)>(r28) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z4 != 0
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : if $z4 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r19 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r19 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke $r19.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("MAPREDUCE2")
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke $r19.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("MAPREDUCE2") >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r20 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r20 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r20)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r20) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r21 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("not_dfs", r1, r2)
org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : $r21 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("not_dfs", r1, r2) >>>>>>>> org.apache.ambari.server.checks.ServicesMapReduceDistributedCacheCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r21)
