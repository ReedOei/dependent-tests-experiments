org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r2 = new org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r2 = new org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>(r0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>(r0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r1[0] = $r2
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily osFamily>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily osFamily> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : return $r3
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : return $r3 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getTargetVersion : return "2.6.0"
org.apache.ambari.server.upgrade.UpgradeCatalog260.getTargetVersion : return "2.6.0" >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executePreDMLUpdates : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeSupersetFromDruid()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executePreDMLUpdates : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeSupersetFromDruid()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeSupersetFromDruid : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeComponent(java.lang.String,java.lang.String)>("DRUID_SUPERSET", "druid-superset")
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeSupersetFromDruid : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeComponent(java.lang.String,java.lang.String)>("DRUID_SUPERSET", "druid-superset") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8[0] = "serviceconfigmapping"
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8[0] = "serviceconfigmapping" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8[1] = "clusterconfig"
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8[1] = "clusterconfig" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8[2] = r2
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r8[2] = r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE config_id IN (SELECT config_id from %s where type_name like \'%s%%\')", $r8)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE config_id IN (SELECT config_id from %s where type_name like \'%s%%\')", $r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r9 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r9 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r9[0] = "clusterconfig"
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r9[0] = "clusterconfig" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r9[1] = r2
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r9[1] = r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE type_name like \'%s%%\'", $r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE type_name like \'%s%%\'", $r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r10 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r10[0] = "hostcomponentdesiredstate"
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r10[0] = "hostcomponentdesiredstate" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r10[1] = r1
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r10[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE component_name = \'%s\'", $r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE component_name = \'%s\'", $r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r11 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r11 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r11[0] = "hostcomponentstate"
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r11[0] = "hostcomponentstate" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r11[1] = r1
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r11[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE component_name = \'%s\'", $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE component_name = \'%s\'", $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r12 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r12 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r12[0] = "servicecomponentdesiredstate"
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r12[0] = "servicecomponentdesiredstate" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r12[1] = r1
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r12[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE component_name = \'%s\'", $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DELETE FROM %s WHERE component_name = \'%s\'", $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r5)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r6)
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeComponent : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>(r7)
