org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r1 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : specialinvoke $r1.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : specialinvoke $r1.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r2 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest$1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r2 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest$1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : specialinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest$1: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : specialinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest$1: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r3 = virtualinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest$1: java.lang.reflect.Type getType()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r3 = virtualinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r4 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>("{  \"name\": \"identity_1\",  \"principal\":{\"value\": \"service/_HOST@_REALM\",\"configuration\": \"service-site/service.component.kerberos.principal\",\"type\": \"service\",\"local_username\": \"localUser\"},  \"keytab\":{  \"file\": \"/etc/security/keytabs/${host}/subject.service.keytab\",  \"owner\": {      \"name\": \"subject\",      \"access\": \"rw\"  },  \"group\": {      \"name\": \"hadoop\",      \"access\": \"r\"  },  \"configuration\": \"service-site/service.component.keytab.file\"},  \"when\": {\"contains\" : [\"services\", \"HIVE\"]}}", $r3)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r4 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>("{  \"name\": \"identity_1\",  \"principal\":{\"value\": \"service/_HOST@_REALM\",\"configuration\": \"service-site/service.component.kerberos.principal\",\"type\": \"service\",\"local_username\": \"localUser\"},  \"keytab\":{  \"file\": \"/etc/security/keytabs/${host}/subject.service.keytab\",  \"owner\": {      \"name\": \"subject\",      \"access\": \"rw\"  },  \"group\": {      \"name\": \"hadoop\",      \"access\": \"r\"  },  \"configuration\": \"service-site/service.component.keytab.file\"},  \"when\": {\"contains\" : [\"services\", \"HIVE\"]}}", $r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : r0 = (java.util.Map) $r4
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : r0 = (java.util.Map) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r5 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : $r5 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = null
org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (java.util.Map$Entry) $r10
org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r11)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r2)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : if r0 != null
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r1 = <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.util.Map NAME_TO_CLASS>
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r1 = <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.util.Map NAME_TO_CLASS> >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r3 = (java.lang.Class) $r2
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r3 = (java.lang.Class) $r2 >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : return $r3
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : return $r3 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r3 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r3 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = newarray (java.lang.Class)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12[0] = class "Ljava/util/Map;"
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12[0] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r31 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r12)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r31 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r12) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r31 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r31 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r14)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r14) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = $r15
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = $r15 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if r0 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("contains")
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("contains") >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $r27 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $r27 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r2 = (java.util.Collection) $r27
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r2 = (java.util.Collection) $r27 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $i0 != 2
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z1 = r4 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z1 = r4 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z1 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z2 = r5 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z2 = r5 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z2 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.ContainsPredicate
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.ContainsPredicate >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r24 = (java.lang.String) r4
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r24 = (java.lang.String) r4 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r25 = (java.lang.String) r5
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r25 = (java.lang.String) r5 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25)
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : return $r22
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : return $r22 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = (org.apache.ambari.server.collections.Predicate) $r16
org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = (org.apache.ambari.server.collections.Predicate) $r16 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)]
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r30]
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r30] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : return r30
org.apache.ambari.server.collections.PredicateUtils.fromMap : return r30 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setWhen : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setWhen : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : return $r5
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromJSON : return $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosIdentityDescriptor;"
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosIdentityDescriptor;" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z0 = r1 instanceof org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z0 = r1 instanceof org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor) r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : return $z1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : return $z1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r19 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r19 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r19 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r19 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : goto [?= $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()]
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : goto [?= $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r7 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r7 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalDescriptor;"
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalDescriptor;" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor) r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r7 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r7 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : goto [?= return $z3]
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : goto [?= return $z3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : return $z3
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : return $z3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r10 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r10 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z3 = virtualinvoke $r11.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean equals(java.lang.Object)>($r12)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z3 = virtualinvoke $r11.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosKeytabDescriptor;"
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosKeytabDescriptor;" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor) r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r7 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r7 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r10 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r10 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z3 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r13 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r13 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z4 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r16 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r16 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r18 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r18 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z5 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z6 = 1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z6 = 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : goto [?= return $z6]
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : goto [?= return $z6] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : return $z6
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : return $z6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z3 == 0
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r13 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $r13 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z4 = virtualinvoke $r14.<org.apache.ambari.server.collections.Predicate: boolean equals(java.lang.Object)>($r15)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z4 = virtualinvoke $r14.<org.apache.ambari.server.collections.Predicate: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if r1 != r0
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if r1 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : if r1 != r0
org.apache.ambari.server.collections.functors.OperationPredicate.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : if r1 != null
org.apache.ambari.server.collections.functors.OperationPredicate.equals : if r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.collections.Predicate: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.collections.Predicate: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : if r1 != r0
org.apache.ambari.server.collections.Predicate.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : if r1 != null
org.apache.ambari.server.collections.Predicate.equals : if r1 != null >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : $z0 = r1 instanceof org.apache.ambari.server.collections.Predicate
org.apache.ambari.server.collections.Predicate.equals : $z0 = r1 instanceof org.apache.ambari.server.collections.Predicate >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : if $z0 == 0
org.apache.ambari.server.collections.Predicate.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.Predicate: int hashCode()>()
org.apache.ambari.server.collections.Predicate.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.Predicate: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i0 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: int hashCode()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i0 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i0 = specialinvoke r0.<org.apache.ambari.server.collections.Predicate: int hashCode()>()
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i0 = specialinvoke r0.<org.apache.ambari.server.collections.Predicate: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.Predicate.hashCode : $r1 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name>
org.apache.ambari.server.collections.Predicate.hashCode : $r1 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name> >>>>>>>> org.apache.ambari.server.collections.Predicate.hashCode : if $r1 != null
org.apache.ambari.server.collections.Predicate.hashCode : if $r1 != null >>>>>>>> org.apache.ambari.server.collections.Predicate.hashCode : $r2 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name>
org.apache.ambari.server.collections.Predicate.hashCode : $r2 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name> >>>>>>>> org.apache.ambari.server.collections.Predicate.hashCode : $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.collections.Predicate.hashCode : $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.Predicate.hashCode : $i1 = 37 * $i2
org.apache.ambari.server.collections.Predicate.hashCode : $i1 = 37 * $i2 >>>>>>>> org.apache.ambari.server.collections.Predicate.hashCode : return $i1
org.apache.ambari.server.collections.Predicate.hashCode : return $i1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : if $r1 != null
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : if $r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i4 = virtualinvoke $r2.<org.apache.ambari.server.collections.functors.ContextTransformer: int hashCode()>()
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i4 = virtualinvoke $r2.<org.apache.ambari.server.collections.functors.ContextTransformer: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $r1 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key>
org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $r1 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key> >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : if $r1 != null
org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : if $r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $r2 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key>
org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $r2 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key> >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $i1 = 37 * $i2
org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : $i1 = 37 * $i2 >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : return $i1
org.apache.ambari.server.collections.functors.ContextTransformer.hashCode : return $i1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i2 = 37 * $i4
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i2 = 37 * $i4 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i3 = $i0 + $i2
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : $i3 = $i0 + $i2 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : return $i3
org.apache.ambari.server.collections.functors.OperationPredicate.hashCode : return $i3 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value>
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value> >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : if $r1 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : if $r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value>
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value> >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i4 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i4 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i2 = 37 * $i4
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i2 = 37 * $i4 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i3 = $i0 + $i2
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : $i3 = $i0 + $i2 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : return $i3
org.apache.ambari.server.collections.functors.ContainsPredicate.hashCode : return $i3 >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>()
org.apache.ambari.server.collections.Predicate.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : if $i0 != $i1
org.apache.ambari.server.collections.Predicate.equals : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : r2 = (org.apache.ambari.server.collections.Predicate) r1
org.apache.ambari.server.collections.Predicate.equals : r2 = (org.apache.ambari.server.collections.Predicate) r1 >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : $r3 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name>
org.apache.ambari.server.collections.Predicate.equals : $r3 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name> >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : if $r3 != null
org.apache.ambari.server.collections.Predicate.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : $r5 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name>
org.apache.ambari.server.collections.Predicate.equals : $r5 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name> >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : $r4 = r2.<org.apache.ambari.server.collections.Predicate: java.lang.String name>
org.apache.ambari.server.collections.Predicate.equals : $r4 = r2.<org.apache.ambari.server.collections.Predicate: java.lang.String name> >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.collections.Predicate.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.collections.Predicate.equals : return $z1
org.apache.ambari.server.collections.Predicate.equals : return $z1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $z0 == 0
org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $z1 = r1 instanceof org.apache.ambari.server.collections.functors.OperationPredicate
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $z1 = r1 instanceof org.apache.ambari.server.collections.functors.OperationPredicate >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $z1 == 0
org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: int hashCode()>()
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>()
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $i0 != $i1
org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : r2 = (org.apache.ambari.server.collections.functors.OperationPredicate) r1
org.apache.ambari.server.collections.functors.OperationPredicate.equals : r2 = (org.apache.ambari.server.collections.functors.OperationPredicate) r1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $r3 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $r3 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $r3 != null
org.apache.ambari.server.collections.functors.OperationPredicate.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $r5 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $r5 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $r4 = r2.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $r4 = r2.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : $z2 = virtualinvoke $r5.<org.apache.ambari.server.collections.functors.ContextTransformer: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.collections.functors.OperationPredicate.equals : $z2 = virtualinvoke $r5.<org.apache.ambari.server.collections.functors.ContextTransformer: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : if r1 != r0
org.apache.ambari.server.collections.functors.ContextTransformer.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : if r1 != null
org.apache.ambari.server.collections.functors.ContextTransformer.equals : if r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : $z0 = r1 instanceof org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.functors.ContextTransformer.equals : $z0 = r1 instanceof org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : if $z0 == 0
org.apache.ambari.server.collections.functors.ContextTransformer.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.ContextTransformer: int hashCode()>()
org.apache.ambari.server.collections.functors.ContextTransformer.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.ContextTransformer: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>()
org.apache.ambari.server.collections.functors.ContextTransformer.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : if $i0 != $i1
org.apache.ambari.server.collections.functors.ContextTransformer.equals : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : r2 = (org.apache.ambari.server.collections.functors.ContextTransformer) r1
org.apache.ambari.server.collections.functors.ContextTransformer.equals : r2 = (org.apache.ambari.server.collections.functors.ContextTransformer) r1 >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : $r3 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key>
org.apache.ambari.server.collections.functors.ContextTransformer.equals : $r3 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key> >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : if $r3 != null
org.apache.ambari.server.collections.functors.ContextTransformer.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : $r5 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key>
org.apache.ambari.server.collections.functors.ContextTransformer.equals : $r5 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key> >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : $r4 = r2.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key>
org.apache.ambari.server.collections.functors.ContextTransformer.equals : $r4 = r2.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key> >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.collections.functors.ContextTransformer.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.equals : return $z1
org.apache.ambari.server.collections.functors.ContextTransformer.equals : return $z1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.equals : return $z2
org.apache.ambari.server.collections.functors.OperationPredicate.equals : return $z2 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $z0 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $z1 = r1 instanceof org.apache.ambari.server.collections.functors.ContainsPredicate
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $z1 = r1 instanceof org.apache.ambari.server.collections.functors.ContainsPredicate >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $z1 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: int hashCode()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $i0 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $i0 != $i1
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : r2 = (org.apache.ambari.server.collections.functors.ContainsPredicate) r1
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : r2 = (org.apache.ambari.server.collections.functors.ContainsPredicate) r1 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $r3 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value>
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $r3 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value> >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $r3 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $r5 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value>
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $r5 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value> >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $r4 = r2.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value>
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $r4 = r2.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value> >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.equals : return $z2
org.apache.ambari.server.collections.functors.ContainsPredicate.equals : return $z2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z4 == 0
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z5 = 1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z5 = 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : goto [?= return $z5]
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : goto [?= return $z5] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : return $z5
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : return $z5 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : $r0 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : $r0 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : $r1 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest: java.util.Map MAP_VALUE>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : $r1 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest: java.util.Map MAP_VALUE> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : specialinvoke $r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>($r1)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : specialinvoke $r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>($r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : return $r0
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.createFromMap : return $r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.equals : $z5 = 0
