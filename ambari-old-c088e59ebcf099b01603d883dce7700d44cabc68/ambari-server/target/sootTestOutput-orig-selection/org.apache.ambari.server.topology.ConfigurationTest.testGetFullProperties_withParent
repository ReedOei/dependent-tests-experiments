org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r14 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r14.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r14.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r15 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop1", "val1.1")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop1", "val1.1") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop2", "val2.1")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop2", "val2.1") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop3", "val3.1")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop3", "val3.1") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r19 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop4", "val4.1")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop4", "val4.1") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop5", "val5.1")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop5", "val5.1") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type1", $r15)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type1", $r15) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type2", $r19)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type2", $r19) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r24 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r24 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r25 = <org.apache.ambari.server.topology.ConfigurationTest: java.util.Map EMPTY_ATTRIBUTES>
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r25 = <org.apache.ambari.server.topology.ConfigurationTest: java.util.Map EMPTY_ATTRIBUTES> >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r24.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r14, $r25)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r24.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r14, $r25) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r26 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r26 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r26.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r26.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r27 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r27 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r27.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r27.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop1", "val1.2")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop1", "val1.2") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop2", "val2.2")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop2", "val2.2") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop6", "val6.2")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop6", "val6.2") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r31 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r31 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r31.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r31.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop7", "val7.2")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop7", "val7.2") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop8", "val8.2")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop8", "val8.2") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type1", $r27)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type1", $r27) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type3", $r31)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type3", $r31) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r36 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r36 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r37 = <org.apache.ambari.server.topology.ConfigurationTest: java.util.Map EMPTY_ATTRIBUTES>
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r37 = <org.apache.ambari.server.topology.ConfigurationTest: java.util.Map EMPTY_ATTRIBUTES> >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r36.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map,org.apache.ambari.server.topology.Configuration)>($r26, $r37, $r24)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r36.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map,org.apache.ambari.server.topology.Configuration)>($r26, $r37, $r24) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r38 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r38 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r38.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r38.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r39 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r39 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r39.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r39.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop1", "val1.3")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop1", "val1.3") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop9", "val9.3")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop9", "val9.3") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r42 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r42 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r42.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r42.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop4", "val4.3")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop4", "val4.3") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r44 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r44 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r44.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r44.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop7", "val7.3")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop7", "val7.3") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r46 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r46 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r46.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r46.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop10", "val10.3")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop10", "val10.3") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop11", "val11.3")
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop11", "val11.3") >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type1", $r39)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type1", $r39) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type2", $r42)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type2", $r42) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type3", $r44)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type3", $r44) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type4", $r46)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type4", $r46) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r53 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r53 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r54 = <org.apache.ambari.server.topology.ConfigurationTest: java.util.Map EMPTY_ATTRIBUTES>
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : $r54 = <org.apache.ambari.server.topology.ConfigurationTest: java.util.Map EMPTY_ATTRIBUTES> >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r53.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map,org.apache.ambari.server.topology.Configuration)>($r38, $r54, $r36)
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : specialinvoke $r53.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map,org.apache.ambari.server.topology.Configuration)>($r38, $r54, $r36) >>>>>>>> org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : return $r53
org.apache.ambari.server.topology.ConfigurationTest.createConfigurationWithParents_PropsOnly : return $r53 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r1 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(2147483647)
org.apache.ambari.server.topology.Configuration.getFullProperties : $r1 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(2147483647) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if i0 != 0
org.apache.ambari.server.topology.Configuration.getFullProperties : if i0 != 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r3 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r3 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if $r3 != null
org.apache.ambari.server.topology.Configuration.getFullProperties : if $r3 != null >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r28 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.getFullProperties : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r4 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r4 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : i1 = i0 + -1
org.apache.ambari.server.topology.Configuration.getFullProperties : i1 = i0 + -1 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r5 = virtualinvoke $r4.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(i1)
org.apache.ambari.server.topology.Configuration.getFullProperties : $r5 = virtualinvoke $r4.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(i1) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= r29 = $r28]
org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= r29 = $r28] >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r29 = $r28
org.apache.ambari.server.topology.Configuration.getFullProperties : r29 = $r28 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r6 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r6 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if $z2 == 0
org.apache.ambari.server.topology.Configuration.getFullProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r8 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r8 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r31 = (java.util.Map$Entry) $r8
org.apache.ambari.server.topology.Configuration.getFullProperties : r31 = (java.util.Map$Entry) $r8 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r9 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r9 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r1 = (java.lang.String) $r9
org.apache.ambari.server.topology.Configuration.getFullProperties : r1 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r10 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.getFullProperties : $r10 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r11 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r11 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r12 = (java.util.Map) $r11
org.apache.ambari.server.topology.Configuration.getFullProperties : $r12 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r10.<java.util.HashMap: void <init>(java.util.Map)>($r12)
org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r10.<java.util.HashMap: void <init>(java.util.Map)>($r12) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $z0 = interfaceinvoke r29.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Configuration.getFullProperties : $z0 = interfaceinvoke r29.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if $z0 == 0
org.apache.ambari.server.topology.Configuration.getFullProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.apache.ambari.server.topology.Configuration.getFullProperties : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : return r29
org.apache.ambari.server.topology.Configuration.getFullProperties : return r29 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r28.<java.util.HashMap: void <init>(java.util.Map)>($r5)
org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r28.<java.util.HashMap: void <init>(java.util.Map)>($r5) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r14 = interfaceinvoke r29.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Configuration.getFullProperties : $r14 = interfaceinvoke r29.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r15 = (java.util.Map) $r14
org.apache.ambari.server.topology.Configuration.getFullProperties : $r15 = (java.util.Map) $r14 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : interfaceinvoke $r15.<java.util.Map: void putAll(java.util.Map)>($r10)
org.apache.ambari.server.topology.Configuration.getFullProperties : interfaceinvoke $r15.<java.util.Map: void putAll(java.util.Map)>($r10) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= (branch)]
org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : return $r1
org.apache.ambari.server.topology.Configuration.getFullProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : return $r1
org.apache.ambari.server.topology.Configuration.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.Configuration.getParentConfiguration : $r1 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getParentConfiguration : $r1 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getParentConfiguration : return $r1
org.apache.ambari.server.topology.Configuration.getParentConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.topology.Configuration.getAttributes : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map attributes>
org.apache.ambari.server.topology.Configuration.getAttributes : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map attributes> >>>>>>>> org.apache.ambari.server.topology.Configuration.getAttributes : return $r1
org.apache.ambari.server.topology.Configuration.getAttributes : return $r1 >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r2 = new java.util.HashSet
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r3 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r3 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : r9 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : r9 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : if $z0 == 0
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : r10 = (java.lang.String) $r8
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : r10 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r5 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullAttributes()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r5 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullAttributes()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : $r11 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullAttributes : $r11 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : if $r11 != null
org.apache.ambari.server.topology.Configuration.getFullAttributes : if $r11 != null >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : $r43 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.getFullAttributes : $r43 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : $r12 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullAttributes : $r12 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : $r13 = virtualinvoke $r12.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullAttributes()>()
org.apache.ambari.server.topology.Configuration.getFullAttributes : $r13 = virtualinvoke $r12.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullAttributes()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : specialinvoke $r43.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.Configuration.getFullAttributes : specialinvoke $r43.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : goto [?= r1 = $r43]
org.apache.ambari.server.topology.Configuration.getFullAttributes : goto [?= r1 = $r43] >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : r1 = $r43
org.apache.ambari.server.topology.Configuration.getFullAttributes : r1 = $r43 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : $r14 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map attributes>
org.apache.ambari.server.topology.Configuration.getFullAttributes : $r14 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map attributes> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.Configuration.getFullAttributes : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : r2 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.Configuration.getFullAttributes : r2 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.Configuration.getFullAttributes : $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : if $z5 == 0
org.apache.ambari.server.topology.Configuration.getFullAttributes : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : return r1
org.apache.ambari.server.topology.Configuration.getFullAttributes : return r1 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullAttributes : specialinvoke $r43.<java.util.HashMap: void <init>(java.util.Map)>($r13)
org.apache.ambari.server.topology.Configuration.getFullAttributes : specialinvoke $r43.<java.util.HashMap: void <init>(java.util.Map)>($r13) >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : r11 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : r11 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : if $z1 == 0
org.apache.ambari.server.topology.Configuration.getAllConfigTypes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getAllConfigTypes : return $r2
