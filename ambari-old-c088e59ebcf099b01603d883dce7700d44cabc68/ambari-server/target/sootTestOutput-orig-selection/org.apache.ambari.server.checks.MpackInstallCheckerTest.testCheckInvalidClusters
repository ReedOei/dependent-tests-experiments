org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$2: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor>
org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$2: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor> >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/google/inject/persist/PersistService;")
org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/google/inject/persist/PersistService;") >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : $r4 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$2: com.google.inject.persist.PersistService val$mockPersistService>
org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : $r4 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$2: com.google.inject.persist.PersistService val$mockPersistService> >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.checks.MpackInstallCheckerTest$2.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r1 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r1 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r1 != null
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r1 != null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r2 != null
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r2 != null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r3 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r3 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> = $r4
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> = $r4 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r8 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r8 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : return $r8
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : return $r8 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r88 = null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r88 = null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r89 = null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r89 = null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r12 = new java.util.HashMap
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r12 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r4 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r4 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r89 = interfaceinvoke r4.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r89 = interfaceinvoke r4.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r88 = interfaceinvoke r89.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select c.cluster_name, s.stack_name, s.stack_version from clusters c join stack s on c.desired_stack_id = s.stack_id")
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r88 = interfaceinvoke r89.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select c.cluster_name, s.stack_name, s.stack_version from clusters c join stack s on c.desired_stack_id = s.stack_id") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r88 == null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r88 == null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z1 = interfaceinvoke r88.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z1 = interfaceinvoke r88.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z1 == 0
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r25 = new java.util.HashMap
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r25 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r25.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r25.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r26 = interfaceinvoke r88.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_name")
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r26 = interfaceinvoke r88.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_name") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r27 = interfaceinvoke r88.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_version")
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r27 = interfaceinvoke r88.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_version") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r29 = interfaceinvoke r88.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("cluster_name")
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r29 = interfaceinvoke r88.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("cluster_name") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r25)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r25) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z1 = interfaceinvoke r88.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z1 = interfaceinvoke r88.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r91 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r91 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z2 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z2 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z2 == 0
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r14 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r14 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r5 = (java.util.Map$Entry) $r14
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r5 = (java.util.Map$Entry) $r14 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r6 = (java.lang.String) $r15
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r6 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r7 = (java.util.Map) $r16
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r7 = (java.util.Map) $r16 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r17 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r17 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r8 = (java.lang.String) $r19
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r8 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r20 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r20 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r9 = (java.lang.String) $r20
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r9 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z0 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r8)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z0 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z0 != 0
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21 = newarray (java.lang.Object)[4]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[0] = r6
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[0] = r6 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[1] = r8
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[1] = r8 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[2] = r9
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[2] = r9 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r22 = virtualinvoke r1.<java.util.HashSet: java.lang.String toString()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r22 = virtualinvoke r1.<java.util.HashSet: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[3] = $r22
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21[3] = $r22 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("This Ambari instance is already managing the cluster %s that has the %s-%s stack installed on it. The management pack you are attempting to install only contains stack definitions for %s. Since this management pack does not contain a stack that has already being deployed by Ambari, the --purge option would cause your existing Ambari installation to be unusable. Due to that we cannot install this management pack.", $r21)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("This Ambari instance is already managing the cluster %s that has the %s-%s stack installed on it. The management pack you are attempting to install only contains stack definitions for %s. Since this management pack does not contain a stack that has already being deployed by Ambari, the --purge option would cause your existing Ambari installation to be unusable. Due to that we cannot install this management pack.", $r21) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r23 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r23 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String)>(r10)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r24 = <java.lang.System: java.io.PrintStream err>
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r24 = <java.lang.System: java.io.PrintStream err> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(r10)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r0.<org.apache.ambari.server.checks.MpackInstallChecker: boolean errorsFound> = 1
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r0.<org.apache.ambari.server.checks.MpackInstallChecker: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z2 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z2 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r88.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r88.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= (branch)]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r89 == null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r89 == null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r89.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r89.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= return]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.isErrorsFound : $z0 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: boolean errorsFound>
org.apache.ambari.server.checks.MpackInstallChecker.isErrorsFound : $z0 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: boolean errorsFound> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.isErrorsFound : return $z0
