org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : if r4 != null
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap serviceMapping>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap serviceMapping> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : $r2 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(r3)
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : $r2 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1 = newarray (java.lang.Object)[7]
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1 = newarray (java.lang.Object)[7] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.Long hostId>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.Long hostId> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[0] = $r2
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String hostName>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String hostName> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[1] = $r3
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[1] = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String principal>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String principal> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[2] = $r4
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[2] = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: boolean isService>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: boolean isService> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[3] = $r5
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[3] = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String cacheFile>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String cacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[4] = $r6
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[4] = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap serviceMapping>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap serviceMapping> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[5] = $r7
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[5] = $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String keytabPath>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String keytabPath> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[6] = $r8
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1[6] = $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1)
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : return $i0
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : return $i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set principals> = r1
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set principals> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : if r1 == null
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set principals>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set principals> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : r3 = (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal) $r5
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : r3 = (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: void setResolvedKerberosKeytab(org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab)>(r0)
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: void setResolvedKerberosKeytab(org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.setResolvedKerberosKeytab : r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab resolvedKerberosKeytab> = r1
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.setResolvedKerberosKeytab : r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab resolvedKerberosKeytab> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.setPrincipals : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosServerAction;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosServerAction;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r6 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.KerberosServerAction access$000(org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r6 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.KerberosServerAction access$000(org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$000 : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.KerberosServerAction action>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$000 : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.KerberosServerAction action> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$000 : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.state.Clusters val$clusters>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.state.Clusters val$clusters> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r11)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r13 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r13 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r18 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandlerFactory;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r18 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandlerFactory;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandlerFactory;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandlerFactory;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r18.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r18.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/stageutils/KerberosKeytabController;")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/stageutils/KerberosKeytabController;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r22 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r22 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2: org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r23 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController access$100(org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest)>($r22)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : $r23 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController access$100(org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$100 : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController kerberosKeytabController>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$100 : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController kerberosKeytabController> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$100 : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r23)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$2.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: boolean isClosed()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: boolean isClosed()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : if $r1 != null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : if $r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $z0 = 1
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $z0 = 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : goto [?= return $z0]
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : return $z0
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $r2 != null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r3 = new org.apache.commons.csv.CSVPrinter
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r3 = new org.apache.commons.csv.CSVPrinter >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r4 = new java.io.FileWriter
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r4 = new java.io.FileWriter >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r4.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r5, 1)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r4.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r5, 1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r6 = <org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat DEFAULT>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r6 = <org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat DEFAULT> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r3.<org.apache.commons.csv.CSVPrinter: void <init>(java.lang.Appendable,org.apache.commons.csv.CSVFormat)>($r4, $r6)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r3.<org.apache.commons.csv.CSVPrinter: void <init>(java.lang.Appendable,org.apache.commons.csv.CSVFormat)>($r4, $r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = $r3
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $l0 = virtualinvoke $r7.<java.io.File: long length()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $l0 = virtualinvoke $r7.<java.io.File: long length()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $b1 = $l0 cmp 0L
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $b1 = $l0 cmp 0L >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $b1 != 0
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $b1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.lang.Iterable getHeaderRecord()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.lang.Iterable getHeaderRecord()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1 = newarray (java.lang.String)[11]
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1 = newarray (java.lang.String)[11] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[0] = "hostname"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[0] = "hostname" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[1] = "service"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[1] = "service" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[2] = "component"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[2] = "component" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[3] = "principal"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[3] = "principal" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[4] = "principal_type"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[4] = "principal_type" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[5] = "keytab_file_path"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[5] = "keytab_file_path" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[6] = "keytab_file_owner_name"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[6] = "keytab_file_owner_name" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[7] = "keytab_file_owner_access"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[7] = "keytab_file_owner_access" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[8] = "keytab_file_group_name"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[8] = "keytab_file_group_name" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[9] = "keytab_file_group_access"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[9] = "keytab_file_group_access" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[10] = "keytab_file_is_cachable"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[10] = "keytab_file_is_cachable" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1)
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : virtualinvoke $r8.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>(r1)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : virtualinvoke $r8.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12 = newarray (java.lang.String)[11]
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12 = newarray (java.lang.String)[11] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[0] = r1
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[1] = r2
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[1] = r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[2] = r3
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[2] = r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[3] = r4
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[3] = r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[4] = r5
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[4] = r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[5] = r6
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[5] = r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[6] = r7
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[6] = r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[7] = r8
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[7] = r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[8] = r9
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[8] = r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[9] = r10
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[9] = r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[10] = r11
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[10] = r11 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: void appendRecord(java.lang.String[])>($r12)
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: void appendRecord(java.lang.String[])>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : if $r2 != null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : if $r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : virtualinvoke $r3.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Object[])>(r1)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : virtualinvoke $r3.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Object[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : if $r1 == null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : if $r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : virtualinvoke $r2.<org.apache.commons.csv.CSVPrinter: void close()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : virtualinvoke $r2.<org.apache.commons.csv.CSVPrinter: void close()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r39 = null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r39 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getCommandParameters()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getCommandParameters()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r3
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r12 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r12 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke $r12.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Processing identities...")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke $r12.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Processing identities...") >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.writeStdOut : $r2 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut>
org.apache.ambari.server.serveraction.ActionLog.writeStdOut : $r2 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.writeStdOut : specialinvoke r0.<org.apache.ambari.server.serveraction.ActionLog: void write(java.lang.StringBuffer,java.lang.String)>($r2, r1)
org.apache.ambari.server.serveraction.ActionLog.writeStdOut : specialinvoke r0.<org.apache.ambari.server.serveraction.ActionLog: void write(java.lang.StringBuffer,java.lang.String)>($r2, r1) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : if r2 == null
org.apache.ambari.server.serveraction.ActionLog.write : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r4 = new java.util.Date
org.apache.ambari.server.serveraction.ActionLog.write : $r4 = new java.util.Date >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : specialinvoke $r4.<java.util.Date: void <init>()>()
org.apache.ambari.server.serveraction.ActionLog.write : specialinvoke $r4.<java.util.Date: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r5 = r0.<org.apache.ambari.server.serveraction.ActionLog: org.apache.commons.lang.time.FastDateFormat dateFormat>
org.apache.ambari.server.serveraction.ActionLog.write : $r5 = r0.<org.apache.ambari.server.serveraction.ActionLog: org.apache.commons.lang.time.FastDateFormat dateFormat> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r6 = virtualinvoke $r5.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Date)>($r4)
org.apache.ambari.server.serveraction.ActionLog.write : $r6 = virtualinvoke $r5.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Date)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6)
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ")
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ") >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n")
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r13 = <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r13 = <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>("Processing identities...")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>("Processing identities...") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r2 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $r4 = virtualinvoke r1.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $r4 = virtualinvoke r1.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if $r4 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if $r4 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : return $r4
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r3 = interfaceinvoke $r19.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.security.credential.PrincipalKeyCredential getKDCAdministratorCredentials(java.lang.String)>($r20)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r3 = interfaceinvoke $r19.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.security.credential.PrincipalKeyCredential getKDCAdministratorCredentials(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KDCType getKDCType(java.util.Map)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KDCType getKDCType(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "kdc_type")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "kdc_type") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r0 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r0 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r3 = (java.lang.String) $r2
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r3 = (java.lang.String) $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : return $r3
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $r2 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType translate(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $r2 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType translate(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if r0 == null
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if r0 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_")
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCType;", r0)
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCType;", r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType) $r1
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType) $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : return $r2
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : return $r4
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r5 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getDefaultRealm(java.util.Map)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r5 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getDefaultRealm(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : $r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "default_realm")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : $r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "default_realm") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r21 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory kerberosOperationHandlerFactory>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r21 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory kerberosOperationHandlerFactory> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r6 = virtualinvoke $r21.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler getKerberosOperationHandler(org.apache.ambari.server.serveraction.kerberos.KDCType)>(r4)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r6 = virtualinvoke $r21.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler getKerberosOperationHandler(org.apache.ambari.server.serveraction.kerberos.KDCType)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getConfiguration(java.lang.String)>("kerberos-env")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getConfiguration(java.lang.String)>("kerberos-env") >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : $r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.AbstractServerAction: java.util.Map getConfigurations()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : $r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.AbstractServerAction: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : if $r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : if $r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurations()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : return $r3
org.apache.ambari.server.serveraction.AbstractServerAction.getConfigurations : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : $r4 = (java.util.Map) $r3
org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : $r4 = (java.util.Map) $r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : return $r4
org.apache.ambari.server.serveraction.AbstractServerAction.getConfiguration : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke r6.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r3, r5, r7)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke r6.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r3, r5, r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $r22 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController kerberosKeytabController>]
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $r22 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController kerberosKeytabController>] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r22 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController kerberosKeytabController>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r22 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController kerberosKeytabController> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getServiceComponentFilter()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getServiceComponentFilter()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getServiceComponentFilter : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.lang.String)>("service_component_filter")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getServiceComponentFilter : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.lang.String)>("service_component_filter") >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.AbstractServerAction: java.util.Map getCommandParameters()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.AbstractServerAction: java.util.Map getCommandParameters()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : if r2 != null
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r4 = (java.lang.String) $r3
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : return $r4
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getServiceComponentFilter : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getServiceComponentFilter : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getServiceComponentFilter : return null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getServiceComponentFilter : return null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Set getHostFilter()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Set getHostFilter()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getHostFilter : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.lang.String)>("host_filter")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getHostFilter : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.lang.String)>("host_filter") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getHostFilter : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getHostFilter : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getHostFilter : return null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getHostFilter : return null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Collection getIdentityFilter()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Collection getIdentityFilter()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getIdentityFilter : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.lang.String)>("identity_filter")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getIdentityFilter : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.lang.String)>("identity_filter") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getIdentityFilter : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getIdentityFilter : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getIdentityFilter : return null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getIdentityFilter : return null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r26 = virtualinvoke $r22.<org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController: java.util.Set getFilteredKeytabs(java.util.Map,java.util.Set,java.util.Collection)>($r23, $r24, $r25)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r26 = virtualinvoke $r22.<org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController: java.util.Set getFilteredKeytabs(java.util.Map,java.util.Set,java.util.Collection)>($r23, $r24, $r25) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r42 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r42 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z0 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z0 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r27 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r27 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r43 = (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab) $r27
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r43 = (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab) $r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r28 = virtualinvoke r43.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set getPrincipals()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r28 = virtualinvoke r43.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set getPrincipals()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.getPrincipals : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set principals>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.getPrincipals : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: java.util.Set principals> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.getPrincipals : return $r1
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab.getPrincipals : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r8 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r8 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r29 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r29 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r9 = (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal) $r29
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r9 = (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal) $r29 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r39 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.CommandReport processIdentity(org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal,org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler,java.util.Map,java.util.Map)>(r9, r6, r7, r1)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r39 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.CommandReport processIdentity(org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal,org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler,java.util.Map,java.util.Map)>(r9, r6, r7, r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("FAIL")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("FAIL") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : if $r5 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : if $r5 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : $r6 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : $r6 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.getPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String principal>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.getPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String principal> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.getPrincipal : return $r1
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : $r7 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : $r7 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : return null
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.processIdentity : return null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r39 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r39 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $z0 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $z0 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke r6.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void close()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke r6.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void close()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $r45 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog>]
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= $r45 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog>] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r45 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r45 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke $r45.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Processing identities completed.")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke $r45.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Processing identities completed.") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r46 = <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r46 = <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String)>("Processing identities completed.")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String)>("Processing identities completed.") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r39 != null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r39 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r15 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r15 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r16 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdOut()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r16 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdOut()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut>
org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdOut : return $r2
org.apache.ambari.server.serveraction.ActionLog.getStdOut : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r17 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r17 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r18 = virtualinvoke $r17.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdErr()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r18 = virtualinvoke $r17.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdErr()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdErr>
org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdErr> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdErr : return $r2
org.apache.ambari.server.serveraction.ActionLog.getStdErr : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r47 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r15, "{}", $r16, $r18)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r47 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r15, "{}", $r16, $r18) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r6 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r6 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r6 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r6 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r29 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r29 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r30 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r30 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = new org.apache.ambari.server.agent.CommandReport
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = new org.apache.ambari.server.agent.CommandReport >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void <init>()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = $r8
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = $r8 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder
org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : return $r4
org.apache.ambari.server.utils.StageUtils.getActionId : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r11)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1
org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r13)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r15)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r15) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1
org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r17)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1
org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r30 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r30 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1
org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1
org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0
org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1
org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r4
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1
org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r3
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1
org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1
org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0
org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= return $r47]
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : goto [?= return $r47] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : return $r47
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : return $r47 >>>>>>>> org.apache.ambari.server.agent.CommandReport.getStatus : $r1 = r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status>
org.apache.ambari.server.agent.CommandReport.getStatus : $r1 = r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> >>>>>>>> org.apache.ambari.server.agent.CommandReport.getStatus : return $r1
