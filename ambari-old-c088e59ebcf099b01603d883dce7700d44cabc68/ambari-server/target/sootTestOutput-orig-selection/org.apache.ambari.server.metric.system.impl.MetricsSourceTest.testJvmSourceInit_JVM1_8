org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $r2 = (java.lang.String) r1 >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $f0 = virtualinvoke r0.<org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher: float parseVersion(java.lang.String)>($r2)
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $f0 = virtualinvoke r0.<org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher: float parseVersion(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+(?:\\.\\d+)).*")
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+(?:\\.\\d+)).*") >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : r3 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : r3 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : if $z0 == 0
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : if $z0 == 0 >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : $r4 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : $r4 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4)
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : return $f0
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.parseVersion : return $f0 >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $f1 = r0.<org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher: float version>
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $f1 = r0.<org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher: float version> >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $b0 = $f0 cmpl $f1
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $b0 = $f0 cmpl $f1 >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : if $b0 != 0
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : if $b0 != 0 >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $z0 = 1
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : $z0 = 1 >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : goto [?= return $z0]
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : return $z0
org.apache.ambari.server.metric.system.impl.MetricsSourceTest$VersionMatcher.matches : return $z0 >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : $r4 = new org.apache.ambari.server.metrics.system.impl.JvmMetricsSource
org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : $r4 = new org.apache.ambari.server.metrics.system.impl.JvmMetricsSource >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : specialinvoke $r4.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void <init>()>()
org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : specialinvoke $r4.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void <init>()>() >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : r2 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getMetricsConfiguration()>()
org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : r2 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getMetricsConfiguration()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : r0 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.util.Properties readConfigFile()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : r0 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.util.Properties readConfigFile()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r2 = new java.util.Properties
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/metrics/system/impl/MetricsConfiguration;"
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/metrics/system/impl/MetricsConfiguration;" >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("metrics.properties")
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("metrics.properties") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r5 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r5 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("metrics.properties not found in classpath")
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("metrics.properties not found in classpath") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : if r0 == null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : if r0 == null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : return null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : return null >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : $r5 = new org.apache.ambari.server.metric.system.impl.TestAmbariMetricsSinkImpl
org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : $r5 = new org.apache.ambari.server.metric.system.impl.TestAmbariMetricsSinkImpl >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : specialinvoke $r5.<org.apache.ambari.server.metric.system.impl.TestAmbariMetricsSinkImpl: void <init>()>()
org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : specialinvoke $r5.<org.apache.ambari.server.metric.system.impl.TestAmbariMetricsSinkImpl: void <init>()>() >>>>>>>> org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : virtualinvoke $r4.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void init(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,org.apache.ambari.server.metrics.system.MetricsSink)>(r2, $r5)
org.apache.ambari.server.metric.system.impl.MetricsSourceTest.testJvmSourceInit : virtualinvoke $r4.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void init(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,org.apache.ambari.server.metrics.system.MetricsSink)>(r2, $r5) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void init(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,org.apache.ambari.server.metrics.system.MetricsSink)>(r1, r2)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void init(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,org.apache.ambari.server.metrics.system.MetricsSink)>(r1, r2) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource.init : r0.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: org.apache.ambari.server.metrics.system.MetricsSink sink> = r2
org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource.init : r0.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: org.apache.ambari.server.metrics.system.MetricsSink sink> = r2 >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r4 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r4 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gc")
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gc") >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r8 = new com.codahale.metrics.jvm.GarbageCollectorMetricSet
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r8 = new com.codahale.metrics.jvm.GarbageCollectorMetricSet >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r8.<com.codahale.metrics.jvm.GarbageCollectorMetricSet: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r8.<com.codahale.metrics.jvm.GarbageCollectorMetricSet: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r9 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r9 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r7, $r8, $r9)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r7, $r8, $r9) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r6 = interfaceinvoke r2.<com.codahale.metrics.MetricSet: java.util.Map getMetrics()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r6 = interfaceinvoke r2.<com.codahale.metrics.MetricSet: java.util.Map getMetrics()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : if $z0 == 0
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : if $z0 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : r5 = (java.util.Map$Entry) $r8
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : r5 = (java.util.Map$Entry) $r8 >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $z1 = $r9 instanceof com.codahale.metrics.MetricSet
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $z1 = $r9 instanceof com.codahale.metrics.MetricSet >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : if $z1 == 0
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : if $z1 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r14 = (java.lang.String) $r13
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r18 = (com.codahale.metrics.Metric) $r17
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : $r18 = (com.codahale.metrics.Metric) $r17 >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : virtualinvoke r3.<com.codahale.metrics.MetricRegistry: com.codahale.metrics.Metric register(java.lang.String,com.codahale.metrics.Metric)>($r16, $r18)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : virtualinvoke r3.<com.codahale.metrics.MetricRegistry: com.codahale.metrics.Metric register(java.lang.String,com.codahale.metrics.Metric)>($r16, $r18) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.registerAll : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r11 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r11 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".buffers")
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".buffers") >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r15 = new com.codahale.metrics.jvm.BufferPoolMetricSet
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r15 = new com.codahale.metrics.jvm.BufferPoolMetricSet >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r16 = staticinvoke <java.lang.management.ManagementFactory: javax.management.MBeanServer getPlatformMBeanServer()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r16 = staticinvoke <java.lang.management.ManagementFactory: javax.management.MBeanServer getPlatformMBeanServer()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r15.<com.codahale.metrics.jvm.BufferPoolMetricSet: void <init>(javax.management.MBeanServer)>($r16)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r15.<com.codahale.metrics.jvm.BufferPoolMetricSet: void <init>(javax.management.MBeanServer)>($r16) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r17 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r17 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r14, $r15, $r17)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r14, $r15, $r17) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r18 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r19 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r19 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".memory")
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".memory") >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r23 = new com.codahale.metrics.jvm.MemoryUsageGaugeSet
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r23 = new com.codahale.metrics.jvm.MemoryUsageGaugeSet >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r23.<com.codahale.metrics.jvm.MemoryUsageGaugeSet: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r23.<com.codahale.metrics.jvm.MemoryUsageGaugeSet: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r24 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r24 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r22, $r23, $r24)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r22, $r23, $r24) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r25 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r25 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r26 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r26 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".threads")
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".threads") >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r30 = new com.codahale.metrics.jvm.ThreadStatesGaugeSet
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r30 = new com.codahale.metrics.jvm.ThreadStatesGaugeSet >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r30.<com.codahale.metrics.jvm.ThreadStatesGaugeSet: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r30.<com.codahale.metrics.jvm.ThreadStatesGaugeSet: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r31 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r31 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r29, $r30, $r31)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: void registerAll(java.lang.String,com.codahale.metrics.MetricSet,com.codahale.metrics.MetricRegistry)>($r29, $r30, $r31) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r33 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r33 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: com.codahale.metrics.MetricRegistry registry> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r32 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r34 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX>
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r34 = <org.apache.ambari.server.metrics.system.impl.JvmMetricsSource: java.lang.String JVM_PREFIX> >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".file.open.descriptor.ratio")
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".file.open.descriptor.ratio") >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r38 = new com.codahale.metrics.jvm.FileDescriptorRatioGauge
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r38 = new com.codahale.metrics.jvm.FileDescriptorRatioGauge >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r38.<com.codahale.metrics.jvm.FileDescriptorRatioGauge: void <init>()>()
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : specialinvoke $r38.<com.codahale.metrics.jvm.FileDescriptorRatioGauge: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : virtualinvoke $r33.<com.codahale.metrics.MetricRegistry: com.codahale.metrics.Metric register(java.lang.String,com.codahale.metrics.Metric)>($r37, $r38)
org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : virtualinvoke $r33.<com.codahale.metrics.MetricRegistry: com.codahale.metrics.Metric register(java.lang.String,com.codahale.metrics.Metric)>($r37, $r38) >>>>>>>> org.apache.ambari.server.metrics.system.impl.JvmMetricsSource.init : $r40 = virtualinvoke r1.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String,java.lang.String)>("interval", "10")
