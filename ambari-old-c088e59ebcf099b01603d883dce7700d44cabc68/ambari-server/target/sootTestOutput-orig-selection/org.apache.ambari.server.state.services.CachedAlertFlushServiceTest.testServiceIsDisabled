org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r5 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r5 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r2 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory>
org.apache.ambari.server.utils.AmbariPath.getPath : $r2 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r2 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r2 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r8 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r8 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name>
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r6
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r6 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherCorePoolSize()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherCorePoolSize()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r11 = (java.lang.Integer) $r10
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r11 = (java.lang.Integer) $r10 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r13 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r12)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r13 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i2 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherMaxPoolSize()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i2 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherMaxPoolSize()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r17 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r17 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r19 = (java.lang.Integer) $r18
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r19 = (java.lang.Integer) $r18 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i3 = virtualinvoke $r19.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i3 = virtualinvoke $r19.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r21 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r20)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r21 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i4 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherWorkerQueueSize()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i4 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherWorkerQueueSize()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r27 = (java.lang.Integer) $r26
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r27 = (java.lang.Integer) $r26 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i5 = virtualinvoke $r27.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $i5 = virtualinvoke $r27.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r29 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r29 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r31 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r31 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r31[0] = r3
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r31[0] = r3 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r31)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r31) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r33 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r33 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r34 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r34 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r35 = virtualinvoke $r34.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r35 = virtualinvoke $r34.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r33.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r33.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r36 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r36 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r37 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r37 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r38 = virtualinvoke $r37.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r38 = virtualinvoke $r37.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r36.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r38)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r36.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r39 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r39 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r40 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r40 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r41 = virtualinvoke $r40.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r41 = virtualinvoke $r40.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r39.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r41)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r39.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r42 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r42 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r42.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r42.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r43 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r43 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r44 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r44 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r45 = virtualinvoke $r44.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r45 = virtualinvoke $r44.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r43.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r45)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r43.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r46 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertsDAO;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r46 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertsDAO;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r47 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r47 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r48 = virtualinvoke $r47.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertsDAO;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r48 = virtualinvoke $r47.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertsDAO;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r46.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r48)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r46.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r50 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0>
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r50 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule: org.apache.ambari.server.state.services.CachedAlertFlushServiceTest this$0> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.state.services.CachedAlertFlushServiceTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51)
org.apache.ambari.server.state.services.CachedAlertFlushServiceTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : $r1 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushService: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : $r1 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushService: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : z0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : z0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : if z0 != 0
org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : virtualinvoke r0.<org.apache.ambari.server.state.services.CachedAlertFlushService: com.google.common.util.concurrent.Service stopAsync()>()
