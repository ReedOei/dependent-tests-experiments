org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r2 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("********* Initializing AmbariServer Metrics Service **********")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("********* Initializing AmbariServer Metrics Service **********") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r3 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getMetricsConfiguration()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r3 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getMetricsConfiguration()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : r0 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.util.Properties readConfigFile()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : r0 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.util.Properties readConfigFile()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r2 = new java.util.Properties
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/metrics/system/impl/MetricsConfiguration;"
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/metrics/system/impl/MetricsConfiguration;" >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("metrics.properties")
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("metrics.properties") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r5 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r5 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("metrics.properties not found in classpath")
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("metrics.properties not found in classpath") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : if r0 == null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : if r0 == null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : return null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.getMetricsConfiguration : return null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> = $r3
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> = $r3 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r4 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r4 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $r4 != null
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $r4 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.getSource : $r1 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: java.util.Map sources>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.getSource : $r1 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: java.util.Map sources> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.getSource : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.getSource : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.getSource : $r3 = (org.apache.ambari.server.metrics.system.MetricsSource) $r2
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.getSource : $r3 = (org.apache.ambari.server.metrics.system.MetricsSource) $r2 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.getSource : return $r3
