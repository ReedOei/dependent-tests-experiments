org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getTargetVersion : return "2.6.0"
org.apache.ambari.server.upgrade.UpgradeCatalog260.getTargetVersion : return "2.6.0" >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : if r1 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : if r2 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : return r2
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : return r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r10 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r10 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r4 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r4 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-ssl-client")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-ssl-client") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z2 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>("ssl.client.truststore.alias")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z2 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>("ssl.client.truststore.alias") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r12 = <org.apache.ambari.server.upgrade.UpgradeCatalog260: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r12 = <org.apache.ambari.server.upgrade.UpgradeCatalog260: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Removing ssl.client.truststore.alias from ams-ssl-client")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Removing ssl.client.truststore.alias from ams-ssl-client") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("ssl.client.truststore.alias")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("ssl.client.truststore.alias") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeConfigurationPropertiesFromCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Set)>(r5, "ams-ssl-client", $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeConfigurationPropertiesFromCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Set)>(r5, "ams-ssl-client", $r13) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeConfigurationPropertiesFromCluster : $r4 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeConfigurationPropertiesFromCluster : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeConfigurationPropertiesFromCluster : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeConfigurationPropertiesFromCluster : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeConfigurationPropertiesFromCluster : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r1, r2, $r4, r3, 0, 1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeConfigurationPropertiesFromCluster : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r1, r2, $r4, r3, 0, 1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r15 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r15 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r5 = (org.apache.ambari.server.controller.AmbariManagementController) $r16
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r5 = (org.apache.ambari.server.controller.AmbariManagementController) $r16 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r68, r3, z0, r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r68, r3, z0, r9) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : return $r7
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : return $r7 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map removeProperties(java.util.Map,java.util.Set,com.google.common.collect.Multimap)>(r69, r4, r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map removeProperties(java.util.Map,java.util.Set,com.google.common.collect.Multimap)>(r69, r4, r9) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = (java.lang.String) $r8
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r10 = new java.util.AbstractMap$SimpleEntry
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r10 = new java.util.AbstractMap$SimpleEntry >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r10.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r6, "")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r10.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r6, "") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : return $r7
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : return $r7 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i1 = interfaceinvoke r9.<com.google.common.collect.Multimap: int size()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i1 = interfaceinvoke r9.<com.google.common.collect.Multimap: int size()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $i1 <= 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r58 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r58 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r57 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariUpgradeConfigUpdatesFileName>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r57 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariUpgradeConfigUpdatesFileName> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke $r58.<org.apache.ambari.server.configuration.Configuration: void writeToAmbariUpgradeConfigUpdatesFile(com.google.common.collect.Multimap,java.lang.String,java.lang.String,java.lang.String)>(r9, r2, r10, $r57)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke $r58.<org.apache.ambari.server.configuration.Configuration: void writeToAmbariUpgradeConfigUpdatesFile(com.google.common.collect.Multimap,java.lang.String,java.lang.String,java.lang.String)>(r9, r2, r10, $r57) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r67 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r67 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r67.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Write to config updates file failed:", $r66)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r67.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Write to config updates file failed:", $r66) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r71 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r68, r69)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r71 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r68, r69) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $z3 = interfaceinvoke $r71.<com.google.common.collect.MapDifference: boolean areEqual()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $z3 = interfaceinvoke $r71.<com.google.common.collect.MapDifference: boolean areEqual()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $z3 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $z3 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r27 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r27 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[0] = r6
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[0] = r6 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[1] = r2
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[1] = r2 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r28 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r28 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[2] = $r28
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[2] = $r28 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'{}\' and configType \'{}\' to cluster \'{}\'", $r26)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'{}\' and configType \'{}\' to cluster \'{}\'", $r26) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r72
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r72 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, $r29, r2, r69, r6, r72)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, $r29, r2, r69, r6, r72) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r11 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r11 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= return]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= return] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
