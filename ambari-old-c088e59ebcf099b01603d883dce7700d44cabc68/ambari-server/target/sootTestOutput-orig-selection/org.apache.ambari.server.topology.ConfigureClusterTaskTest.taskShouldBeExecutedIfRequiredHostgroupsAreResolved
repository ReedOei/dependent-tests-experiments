org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r2 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("Entering")
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("Entering") >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : r1 = specialinvoke r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: java.util.Collection getTopologyRequiredHostGroups()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : r1 = specialinvoke r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: java.util.Collection getTopologyRequiredHostGroups()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.getTopologyRequiredHostGroups : $r2 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterConfigurationRequest configRequest>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.getTopologyRequiredHostGroups : $r2 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterConfigurationRequest configRequest> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.getTopologyRequiredHostGroups : $r3 = virtualinvoke $r2.<org.apache.ambari.server.topology.ClusterConfigurationRequest: java.util.Collection getRequiredHostGroups()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.getTopologyRequiredHostGroups : $r3 = virtualinvoke $r2.<org.apache.ambari.server.topology.ClusterConfigurationRequest: java.util.Collection getRequiredHostGroups()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.getTopologyRequiredHostGroups : return $r3
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.getTopologyRequiredHostGroups : return $r3 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $z0 = specialinvoke r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: boolean areHostGroupsResolved(java.util.Collection)>(r1)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $z0 = specialinvoke r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: boolean areHostGroupsResolved(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z3 = 1
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z3 = 1 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r7 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r7 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r2 = interfaceinvoke $r7.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r2 = interfaceinvoke $r7.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z1 == 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : return z3
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : return z3 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : if $z0 != 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r3 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r3 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("All required host groups are complete, cluster configuration can now begin")
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("All required host groups are complete, cluster configuration can now begin") >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r4 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterConfigurationRequest configRequest>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r4 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterConfigurationRequest configRequest> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : virtualinvoke $r4.<org.apache.ambari.server.topology.ClusterConfigurationRequest: void process()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : virtualinvoke $r4.<org.apache.ambari.server.topology.ClusterConfigurationRequest: void process()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r5 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r5 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("Cluster configuration finished successfully")
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("Cluster configuration finished successfully") >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : specialinvoke r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: void notifyListeners()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : specialinvoke r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: void notifyListeners()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r2 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r2 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r4 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r4 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : r1 = virtualinvoke $r5.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>(l0)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : r1 = virtualinvoke $r5.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r7 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.events.publishers.AmbariEventPublisher ambariEventPublisher>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r7 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.events.publishers.AmbariEventPublisher ambariEventPublisher> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r6 = new org.apache.ambari.server.events.ClusterConfigFinishedEvent
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : $r6 = new org.apache.ambari.server.events.ClusterConfigFinishedEvent >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : specialinvoke $r6.<org.apache.ambari.server.events.ClusterConfigFinishedEvent: void <init>(long,java.lang.String)>(l0, r1)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : specialinvoke $r6.<org.apache.ambari.server.events.ClusterConfigFinishedEvent: void <init>(long,java.lang.String)>(l0, r1) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : virtualinvoke $r7.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: void publish(org.apache.ambari.server.events.AmbariEvent)>($r6)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.notifyListeners : virtualinvoke $r7.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: void publish(org.apache.ambari.server.events.AmbariEvent)>($r6) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r6 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r6 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>("Exiting")
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>("Exiting") >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.call : return $r7
