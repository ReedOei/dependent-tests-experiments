org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.createFromMap : $r1 = new org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.createFromMap : $r2 = <org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest: java.util.Map MAP_VALUE>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.createFromMap : $r2 = <org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest: java.util.Map MAP_VALUE> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.createFromMap : specialinvoke $r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void <init>(java.util.Map)>($r2)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.createFromMap : specialinvoke $r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void <init>(java.util.Map)>($r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if $r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r4 = new java.util.TreeSet
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r4 = new java.util.TreeSet >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : specialinvoke $r4.<java.util.TreeSet: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : specialinvoke $r4.<java.util.TreeSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> = $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> = $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.createFromMap : return $r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.createFromMap : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isContainer : return 1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isContainer : return 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("A_DIFFERENT_SERVICE_NAME", $r4)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("A_DIFFERENT_SERVICE_NAME", $r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getComponents()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getComponents()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponents : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponents : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponents : return $r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponents : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r17 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r17 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r16 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r16 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r18 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r16
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r18 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r16 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor)>(r18)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor)>(r18) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("A_DIFFERENT_COMPONENT_NAME", $r6)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("A_DIFFERENT_COMPONENT_NAME", $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List getIdentities(boolean,java.util.Map)>(0, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List getIdentities(boolean,java.util.Map)>(0, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r11 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r11 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : return 1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : return 1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z2 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i0)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations(boolean)>(0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r10
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r10 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site")
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r3 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r7
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r3 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r4 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r4 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : return $r1
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site", $r8)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site", $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i2 = interfaceinvoke r4.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i2 = interfaceinvoke r4.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r9 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.component.property1")
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r9 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.component.property1") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r10 = (java.lang.String) $r9
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r10)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r11 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.component.property")
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r11 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.component.property") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r12 = (java.lang.String) $r11
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r12 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("green", $r12)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("green", $r12) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Set getAuthToLocalProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r5)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i3 = interfaceinvoke r5.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $i3 = interfaceinvoke r5.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r13 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r13 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r15 = (java.lang.String) $r14
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("component.name.rules2", $r15)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("component.name.rules2", $r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.List getIdentities()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.List getIdentities()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r19)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i1 = interfaceinvoke r19.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i1 = interfaceinvoke r19.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r20 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r20 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r15 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r15 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r21 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r15
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r21 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r21)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r21) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.isContainer : return 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.isContainer : return 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor)>($r1)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor)>($r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("user@_REALM", $r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("user@_REALM", $r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site/service.component.kerberos.https.principal", $r2)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site/service.component.kerberos.https.principal", $r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r3 = <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType USER>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r3 = <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType USER> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r5)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor)>($r2)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromMap : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest: void validateFromMap(org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor)>($r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("/etc/security/keytabs/subject.service.keytab", $r1)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("/etc/security/keytabs/subject.service.keytab", $r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("root", $r2)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("root", $r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("rw", $r3)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("rw", $r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("hadoop", $r4)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("hadoop", $r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("r", $r5)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("r", $r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site/service2.component.keytab.file", $r6)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site/service2.component.keytab.file", $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r22 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r22 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r22)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i2 = interfaceinvoke r22.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i2 = interfaceinvoke r22.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r6 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r6 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r23 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r23 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r23)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r23) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r2 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r2 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r7 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r7 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site", $r7)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site", $r7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i3 = interfaceinvoke r2.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i3 = interfaceinvoke r2.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i3)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.property1")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.property1") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r9 = (java.lang.String) $r8
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r9)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.property")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.property") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r11 = (java.lang.String) $r10
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("green", $r11)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("green", $r11) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Set getAuthToLocalProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i4 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $i4 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i4)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r12 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r12 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r14 = (java.lang.String) $r13
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service.name.rules2", $r14)
