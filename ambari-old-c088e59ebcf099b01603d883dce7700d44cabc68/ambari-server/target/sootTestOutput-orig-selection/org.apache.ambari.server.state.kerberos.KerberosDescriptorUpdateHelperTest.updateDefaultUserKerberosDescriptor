org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r3 = new java.util.Properties >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : specialinvoke $r3.<java.util.Properties: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : specialinvoke $r3.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("metadata.path", "src/main/resources/stacks")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("metadata.path", "src/main/resources/stacks") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("common.services.path", "src/main/resources/common-services")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("common.services.path", "src/main/resources/common-services") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("server.version.file", "target/version")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("server.version.file", "target/version") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("custom.action.definitions", "/tmp/nofile")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("custom.action.definitions", "/tmp/nofile") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("resources.dir", "src/main/resources")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("resources.dir", "src/main/resources") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r9 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r9 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : specialinvoke $r9.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r3)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : specialinvoke $r9.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r10 = new com.google.inject.assistedinject.FactoryModuleBuilder
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r10 = new com.google.inject.assistedinject.FactoryModuleBuilder >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : specialinvoke $r10.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : specialinvoke $r10.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r11 = virtualinvoke $r10.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r11 = virtualinvoke $r10.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: void install(com.google.inject.Module)>($r11)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: void install(com.google.inject.Module)>($r11) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r13 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0>
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r13 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r16 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0>
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r16 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r19 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0>
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r19 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r18.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r18.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r22 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0>
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r22 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r23)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r24 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r24 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r24.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r24.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ExtensionLinkDAO;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ExtensionLinkDAO;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r26 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0>
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r26 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1: org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest this$0> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ExtensionLinkDAO;")
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ExtensionLinkDAO;") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27)
org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest$1.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMetadataPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.configuration.Configuration.getMetadataPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMetadataPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getMetadataPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMetadataPath : return $r2
org.apache.ambari.server.configuration.Configuration.getMetadataPath : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCommonServicesPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty COMMON_SERVICES_DIR_PATH>
org.apache.ambari.server.configuration.Configuration.getCommonServicesPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty COMMON_SERVICES_DIR_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCommonServicesPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getCommonServicesPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCommonServicesPath : return $r2
org.apache.ambari.server.configuration.Configuration.getCommonServicesPath : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getExtensionsPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty EXTENSIONS_DIR_PATH>
org.apache.ambari.server.configuration.Configuration.getExtensionsPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty EXTENSIONS_DIR_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getExtensionsPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getExtensionsPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getExtensionsPath : return $r2
org.apache.ambari.server.configuration.Configuration.getExtensionsPath : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersionFilePath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.configuration.Configuration.getServerVersionFilePath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersionFilePath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getServerVersionFilePath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersionFilePath : return $r2
org.apache.ambari.server.configuration.Configuration.getServerVersionFilePath : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCustomActionDefinitionPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CUSTOM_ACTION_DEFINITION>
org.apache.ambari.server.configuration.Configuration.getCustomActionDefinitionPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CUSTOM_ACTION_DEFINITION> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCustomActionDefinitionPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getCustomActionDefinitionPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCustomActionDefinitionPath : return $r2
org.apache.ambari.server.configuration.Configuration.getCustomActionDefinitionPath : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getResourceDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getResourceDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getResourceDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getResourceDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getResourceDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getResourceDirPath : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_CACHE_ENABLED>
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_CACHE_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : return $z0
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE>
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : return $i0
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : return $i0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE>
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : return $i0
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : return $i0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE>
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : return $i0
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : return $i0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.init : $r1 = new java.util.ArrayList
org.apache.ambari.server.api.services.AmbariMetaInfo.init : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.init : $r2 = r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.stack.OsFamily osFamily>
org.apache.ambari.server.api.services.AmbariMetaInfo.init : $r2 = r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.stack.OsFamily osFamily> >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.init : $r3 = virtualinvoke $r2.<org.apache.ambari.server.state.stack.OsFamily: java.util.Set os_list()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.init : $r3 = virtualinvoke $r2.<org.apache.ambari.server.state.stack.OsFamily: java.util.Set os_list()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.init : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.ambari.server.api.services.AmbariMetaInfo.init : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.init : r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.List ALL_SUPPORTED_OS> = $r1
org.apache.ambari.server.api.services.AmbariMetaInfo.init : r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.List ALL_SUPPORTED_OS> = $r1 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.init : specialinvoke r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: void readServerVersion()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.init : specialinvoke r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: void readServerVersion()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : r1 = r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.io.File serverVersionFile>
org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : r1 = r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.io.File serverVersionFile> >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : if $z0 != 0
org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : $r6 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : $r6 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Server version file does not exist.")
org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Server version file does not exist.") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readServerVersion : throw $r6
