org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r4 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r4.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r4.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return $r4
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return $r4 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController m_controller>
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController m_controller> >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : return $r1
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler getReadHandler()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler getReadHandler()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler m_testReadHandler>
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler m_testReadHandler> >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : return $r1
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r2 = interfaceinvoke $r8.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r1)
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r2 = interfaceinvoke $r8.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r1) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r9 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r9 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z0 = virtualinvoke $r9.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z0 = virtualinvoke $r9.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z0 != 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r10 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r10 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z1 = interfaceinvoke $r11.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z1 = interfaceinvoke $r11.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z1 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r3 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: java.util.Map buildCreateSet(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2)
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r3 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: java.util.Map buildCreateSet(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r24 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r24 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r3 = virtualinvoke $r24.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getNamedPropertySets()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r3 = virtualinvoke $r24.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getNamedPropertySets()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r25 = new java.util.HashMap
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r25 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r25.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r25.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r26 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r26 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r6 = interfaceinvoke $r26.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r6 = interfaceinvoke $r26.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r7 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r7 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r27 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r6)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r27 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r6) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1
org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r8 = interfaceinvoke $r27.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r6)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r8 = interfaceinvoke $r27.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r6) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r9 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r9 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r10 = interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r10 = interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r11 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r11 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z0 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r28 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r28 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r12 = (org.apache.ambari.server.api.util.TreeNode) $r28
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r12 = (org.apache.ambari.server.api.util.TreeNode) $r28 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r29 = interfaceinvoke r12.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r29 = interfaceinvoke r12.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r13 = (org.apache.ambari.server.controller.spi.Resource) $r29
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r13 = (org.apache.ambari.server.controller.spi.Resource) $r29 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r14 = interfaceinvoke r13.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r8)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r14 = interfaceinvoke r13.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z1 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : return $r25
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : return $r25 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : goto [?= $i0 = interfaceinvoke r3.<java.util.Map: int size()>()]
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : goto [?= $i0 = interfaceinvoke r3.<java.util.Map: int size()>()] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i0 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i0 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i0 == 1
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i0 == 1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i1 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i1 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i1 != 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i1 != 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r34 = "A minimum of one sub-resource must be specified for creation."
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r34 = "A minimum of one sub-resource must be specified for creation." >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : goto [?= $r28 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.services.Result createInvalidRequestResult(java.lang.String)>($r34)]
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : goto [?= $r28 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.services.Result createInvalidRequestResult(java.lang.String)>($r34)] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r28 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.services.Result createInvalidRequestResult(java.lang.String)>($r34)
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r28 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.services.Result createInvalidRequestResult(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r2 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r2 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r3 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r3 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r5 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r5 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Request: ")
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Request: ") >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r3.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r5, $r8)
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r3.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r5, $r8) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r2.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r3)
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r2.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r3) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : return $r2
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : return $r2 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : return $r28
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : return $r28 >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1
org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : return $r1
