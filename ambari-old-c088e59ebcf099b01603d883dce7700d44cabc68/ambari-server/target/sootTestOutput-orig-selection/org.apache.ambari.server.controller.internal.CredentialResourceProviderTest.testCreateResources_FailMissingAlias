org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r4 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Persisting master key into {}", $r5)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Persisting master key into {}", $r5) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r66 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r66 = null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r1 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r1 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r37 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.ambari.server.security.encryption.AESEncryptor aes>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r37 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.ambari.server.security.encryption.AESEncryptor aes> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r66 = virtualinvoke $r37.<org.apache.ambari.server.security.encryption.AESEncryptor: org.apache.ambari.server.security.encryption.EncryptionResult encrypt(java.lang.String)>(r1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r66 = virtualinvoke $r37.<org.apache.ambari.server.security.encryption.AESEncryptor: org.apache.ambari.server.security.encryption.EncryptionResult encrypt(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8")
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8") >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AESEncryptor: org.apache.ambari.server.security.encryption.EncryptionResult encrypt(byte[])>(r2)
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AESEncryptor: org.apache.ambari.server.security.encryption.EncryptionResult encrypt(byte[])>(r2) >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r3 = new org.apache.ambari.server.security.encryption.EncryptionResult
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r3 = new org.apache.ambari.server.security.encryption.EncryptionResult >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r5 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: byte[] salt>
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r5 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: byte[] salt> >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r4 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher ecipher>
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r4 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher ecipher> >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r6 = virtualinvoke $r4.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r6 = virtualinvoke $r4.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>() >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r7 = virtualinvoke $r6.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "Ljavax/crypto/spec/IvParameterSpec;")
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r7 = virtualinvoke $r6.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "Ljavax/crypto/spec/IvParameterSpec;") >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r8 = (javax.crypto.spec.IvParameterSpec) $r7
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r8 = (javax.crypto.spec.IvParameterSpec) $r7 >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r9 = virtualinvoke $r8.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>()
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r9 = virtualinvoke $r8.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>() >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r10 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher ecipher>
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r10 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher ecipher> >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r11 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r11 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1) >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : specialinvoke $r3.<org.apache.ambari.server.security.encryption.EncryptionResult: void <init>(byte[],byte[],byte[])>($r5, $r9, $r11)
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : specialinvoke $r3.<org.apache.ambari.server.security.encryption.EncryptionResult: void <init>(byte[],byte[],byte[])>($r5, $r9, $r11) >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return $r3
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return $r3 >>>>>>>> org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return r3
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return r3 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if $z0 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $l0 = virtualinvoke r0.<java.io.File: long length()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $l0 = virtualinvoke r0.<java.io.File: long length()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $b1 = $l0 cmp 0L
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $b1 = $l0 cmp 0L >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if $b1 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if $b1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r28 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r28 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r27 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r27 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r29 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r29 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r27[0] = $r29
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r27[0] = $r29 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Master key file exists at %s, resetting.", $r27)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Master key file exists at %s, resetting.", $r27) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>($r30)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r68 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r68 = null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r31 = new java.io.FileOutputStream
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r31 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r31.<java.io.FileOutputStream: void <init>(java.io.File)>(r0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r31.<java.io.FileOutputStream: void <init>(java.io.File)>(r0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r68 = virtualinvoke $r31.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r68 = virtualinvoke $r31.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r68.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(0L)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r68.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(0L) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r68 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r68 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r68.<java.nio.channels.FileChannel: void close()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r68.<java.nio.channels.FileChannel: void close()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= (branch)]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r66 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r66 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r6 = new java.util.ArrayList
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#1.0# ")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#1.0# ") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r9 = staticinvoke <org.apache.commons.net.ntp.TimeStamp: org.apache.commons.net.ntp.TimeStamp getCurrentTime()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r9 = staticinvoke <org.apache.commons.net.ntp.TimeStamp: org.apache.commons.net.ntp.TimeStamp getCurrentTime()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r10 = virtualinvoke $r9.<org.apache.commons.net.ntp.TimeStamp: java.lang.String toDateString()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r10 = virtualinvoke $r9.<org.apache.commons.net.ntp.TimeStamp: java.lang.String toDateString()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r14 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] salt>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r14 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] salt> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r15 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r14)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r15 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r14) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r18 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] iv>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r18 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] iv> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r19 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r18)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r19 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r18) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r22 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] cipher>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r22 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] cipher> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r23 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r22)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r23 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r22) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r75 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r26)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r75 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r26) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r75)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r75) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>(r0, "UTF8", $r6)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>(r0, "UTF8", $r6) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void protectAccess(java.io.File)>(r0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void protectAccess(java.io.File)>(r0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z2 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z2 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z4 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z4 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z6 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z6 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= return 1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= return 1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : return 1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : return 1 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r2 = new java.util.Properties
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r5 = r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: org.apache.ambari.server.controller.internal.CredentialResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r5 = r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: org.apache.ambari.server.controller.internal.CredentialResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r6 = $r5.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest: org.junit.rules.TemporaryFolder tmpFolder>
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r6 = $r5.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest: org.junit.rules.TemporaryFolder tmpFolder> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r7 = virtualinvoke $r6.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r7 = virtualinvoke $r6.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r4, $r8)
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r4, $r8) >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r12 = r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: org.apache.ambari.server.controller.internal.CredentialResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r12 = r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: org.apache.ambari.server.controller.internal.CredentialResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r13 = $r12.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest: org.junit.rules.TemporaryFolder tmpFolder>
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r13 = $r12.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest: org.junit.rules.TemporaryFolder tmpFolder> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r14 = virtualinvoke $r13.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r14 = virtualinvoke $r13.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, $r15)
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, $r15) >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;")
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreServiceImpl;")
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreServiceImpl;") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurePasswordHelper;")
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurePasswordHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r22 = new org.apache.ambari.server.security.SecurePasswordHelper
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r22 = new org.apache.ambari.server.security.SecurePasswordHelper >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : specialinvoke $r22.<org.apache.ambari.server.security.SecurePasswordHelper: void <init>()>()
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : specialinvoke $r22.<org.apache.ambari.server.security.SecurePasswordHelper: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22)
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r24 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : $r24 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : specialinvoke $r24.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2)
org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : specialinvoke $r24.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProviderTest$1.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
