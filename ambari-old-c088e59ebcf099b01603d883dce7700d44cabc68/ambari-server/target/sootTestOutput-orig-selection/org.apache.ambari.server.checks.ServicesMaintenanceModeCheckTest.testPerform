org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r8 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r8 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest this$0>
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest)>($r1)
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r2
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r1
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r11 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r11 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r3 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r11)
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r3 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r4 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheck: java.util.Set getServicesInUpgrade(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r4 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheck: java.util.Set getServicesInUpgrade(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r4 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r4 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r5 = interfaceinvoke $r4.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r5 = interfaceinvoke $r4.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r6 = (org.apache.ambari.server.state.Clusters) $r5
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r6 = (org.apache.ambari.server.state.Clusters) $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r2 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r7)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r2 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r11 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinitionXml(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r11 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinitionXml(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getVersionDefinitionXml : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getVersionDefinitionXml : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion>
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getVersionDefinitionXml : r5 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getVersionDefinitionXml : r5 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getVersionDefinitionXml : return r5
org.apache.ambari.server.checks.AbstractCheckDescriptor.getVersionDefinitionXml : return r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r3 = virtualinvoke r11.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r3 = virtualinvoke r11.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : return $r8
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : return $r8 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z1 = virtualinvoke $r12.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z1 = virtualinvoke $r12.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z1 != 0
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
