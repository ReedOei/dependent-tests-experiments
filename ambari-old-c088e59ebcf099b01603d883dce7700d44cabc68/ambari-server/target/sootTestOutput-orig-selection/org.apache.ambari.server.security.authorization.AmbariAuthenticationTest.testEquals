org.apache.ambari.server.audit.AuditLoggerModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AsyncAuditLogger;")
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AsyncAuditLogger;") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r8 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("AsyncAuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r8 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("AsyncAuditLogger") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r9 = interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.'annotation'.Annotation)>($r8)
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r9 = interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.'annotation'.Annotation)>($r8) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r9.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLoggerDefaultImpl;")
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r9.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLoggerDefaultImpl;") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class)>($r11, class "Lorg/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator;")
org.apache.ambari.server.audit.AuditLoggerModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class)>($r11, class "Lorg/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator;") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.lang.String getPackageToScan()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.lang.String getPackageToScan()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r1 = class "Lorg/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator;"
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r1 = class "Lorg/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator;" >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>()
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>()
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : return $r3
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : return $r3 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getExclusions()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getExclusions()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : return $r1
org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : return $r1 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getSelectors()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getSelectors()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : $r2 = new java.util.ArrayList
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator;")
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator;") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : return $r2
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : return $r2 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r2 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: java.util.Set findOnClassPath(java.lang.String,java.util.List,java.util.List)>($r12, $r13, $r14)
org.apache.ambari.server.audit.AuditLoggerModule.configure : r2 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: java.util.Set findOnClassPath(java.lang.String,java.util.List,java.util.List)>($r12, $r13, $r14) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r7 = new java.util.LinkedHashSet
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r7 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r8 = class "Lorg/apache/ambari/server/cleanup/ClasspathScannerUtils;"
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r8 = class "Lorg/apache/ambari/server/cleanup/ClasspathScannerUtils;" >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r19 = staticinvoke <com.google.common.reflect.ClassPath: com.google.common.reflect.ClassPath 'from'(java.lang.ClassLoader)>($r9)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r19 = staticinvoke <com.google.common.reflect.ClassPath: com.google.common.reflect.ClassPath 'from'(java.lang.ClassLoader)>($r9) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r10 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r10 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking package [{}] for binding candidates.", r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking package [{}] for binding candidates.", r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r11 = virtualinvoke r19.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String)>(r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r11 = virtualinvoke r19.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r4 = virtualinvoke $r11.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r4 = virtualinvoke $r11.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z3 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z3 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r5 = (com.google.common.reflect.ClassPath$ClassInfo) $r12
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r5 = (com.google.common.reflect.ClassPath$ClassInfo) $r12 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r6 = virtualinvoke r5.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.Class load()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r6 = virtualinvoke r5.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.Class load()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r6)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z0 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z0 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z1 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean isEligible(java.lang.Class,java.util.List)>(r6, r2)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z1 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean isEligible(java.lang.Class,java.util.List)>(r6, r2) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z0 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkSubClasses(java.lang.Class,java.util.List)>(r0, r1)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z0 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkSubClasses(java.lang.Class,java.util.List)>(r0, r1) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z3 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z3 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r5 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r5 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking interfaces for: [{}]", r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking interfaces for: [{}]", r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r2 = staticinvoke <org.apache.commons.lang.ClassUtils: java.util.List getAllInterfaces(java.lang.Class)>(r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r2 = staticinvoke <org.apache.commons.lang.ClassUtils: java.util.List getAllInterfaces(java.lang.Class)>(r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z0 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z0 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r4 = (java.lang.Class) $r6
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r4 = (java.lang.Class) $r6 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z1 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z1 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z1 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r7 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r7 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking candidate for subclassing interface: ", r4)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking candidate for subclassing interface: ", r4) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z2 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z2 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z3 = 1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z3 = 1 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= return z3]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= return z3] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : return z3
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : return z3 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z0 != 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z0 != 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 1 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : goto [?= return $z2]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : return $z2
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : return $z2 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z1 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r14 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r14 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found class [{}]", r6)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found class [{}]", r6) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= (branch)]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z1 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkAnnotations(java.lang.Class,java.util.List)>(r0, r1)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z1 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkAnnotations(java.lang.Class,java.util.List)>(r0, r1) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $r4 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $r4 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking annotations for: [{}]", r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking annotations for: [{}]", r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z1 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z1 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r2 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r2 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i0 = lengthof r2
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i0 = lengthof r2 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : return z1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : return z1 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z1 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r13 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r13 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Candidate [{}] doesn\'t match.", r6)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Candidate [{}] doesn\'t match.", r6) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= return $r7]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= return $r7] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : return $r7
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : return $r7 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : if $z0 == 0
org.apache.ambari.server.audit.AuditLoggerModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r4 = (java.lang.Class) $r17
org.apache.ambari.server.audit.AuditLoggerModule.configure : r4 = (java.lang.Class) $r17 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r18 = <org.apache.ambari.server.audit.AuditLoggerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r18 = <org.apache.ambari.server.audit.AuditLoggerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Binding audit event creator {}", r4)
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Binding audit event creator {}", r4) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r19 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r19 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r20 = interfaceinvoke $r19.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(r4)
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r20 = interfaceinvoke $r19.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(r4) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r21 = <com.google.inject.Scopes: com.google.inject.Scope SINGLETON>
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r21 = <com.google.inject.Scopes: com.google.inject.Scope SINGLETON> >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r20.<com.google.inject.binder.ScopedBindingBuilder: void in(com.google.inject.Scope)>($r21)
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r20.<com.google.inject.binder.ScopedBindingBuilder: void in(com.google.inject.Scope)>($r21) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.audit.AuditLoggerModule.configure : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/request/RequestAuditLogger;")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/request/RequestAuditLogger;") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/request/RequestAuditLoggerImpl;")
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/request/RequestAuditLoggerImpl;") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r3 = new java.util.Properties
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r3 = new java.util.Properties >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r3.<java.util.Properties: void <init>()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r3.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_SECURITY>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_SECURITY> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r5 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r5 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r5, "ldap")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r5, "ldap") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r8, "in-memory")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r8, "in-memory") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, "src/test/resources/stacks")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, "src/test/resources/stacks") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "src/test/resources/version")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "src/test/resources/version") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "centos5")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "centos5") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r19 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r19 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r20, "src/test/resources/")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r20, "src/test/resources/") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r22 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LDAP_GROUP_BASE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r22 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LDAP_GROUP_BASE> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r23 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r23 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r23, "ou=groups,dc=ambari,dc=apache,dc=org")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r23, "ou=groups,dc=ambari,dc=apache,dc=org") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r25 = new org.apache.ambari.server.controller.ControllerModule
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r25 = new org.apache.ambari.server.controller.ControllerModule >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r25.<org.apache.ambari.server.controller.ControllerModule: void <init>(java.util.Properties)>($r3)
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r25.<org.apache.ambari.server.controller.ControllerModule: void <init>(java.util.Properties)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r23 = null
org.apache.ambari.server.state.stack.OsFamily.init : r23 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r14
org.apache.ambari.server.state.stack.OsFamily.init : throw $r14 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20
org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17)
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r22
org.apache.ambari.server.state.stack.OsFamily.init : throw $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r15
org.apache.ambari.server.state.stack.OsFamily.init : throw $r15 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r27 = new java.lang.RuntimeException
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r27 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r26)
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r26) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : throw $r27
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : throw $r27 >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;")
org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;")
org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15)
org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23)
org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if r0 != r1
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if r1 == null
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if r1 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if $r3 == $r4
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : r2 = (org.apache.ambari.server.security.authorization.AmbariAuthentication) r1
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : r2 = (org.apache.ambari.server.security.authorization.AmbariAuthentication) r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r6 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: org.springframework.security.core.Authentication authentication>
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r6 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: org.springframework.security.core.Authentication authentication> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r5 = r2.<org.apache.ambari.server.security.authorization.AmbariAuthentication: org.springframework.security.core.Authentication authentication>
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r5 = r2.<org.apache.ambari.server.security.authorization.AmbariAuthentication: org.springframework.security.core.Authentication authentication> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5)
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if $z0 == 0
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z2 = 0
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z2 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : return $z2
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : return $z2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r1 = newarray (java.lang.Object)[2]
org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r1 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r2 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: org.springframework.security.core.Authentication authentication>
org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r2 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: org.springframework.security.core.Authentication authentication> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r1[0] = $r2
org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r3 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: java.lang.Object principalOverride>
org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r3 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: java.lang.Object principalOverride> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r1[1] = $r3
org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $r1[1] = $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1)
org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : return $i0
org.apache.ambari.server.security.authorization.AmbariAuthentication.hashCode : return $i0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r8 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: java.lang.Object principalOverride>
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r8 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthentication: java.lang.Object principalOverride> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r7 = r2.<org.apache.ambari.server.security.authorization.AmbariAuthentication: java.lang.Object principalOverride>
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $r7 = r2.<org.apache.ambari.server.security.authorization.AmbariAuthentication: java.lang.Object principalOverride> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7)
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if $z1 == 0
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z2 = 1
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : $z2 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : goto [?= return $z2]
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : return 1
org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : return 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthentication.equals : return 0
