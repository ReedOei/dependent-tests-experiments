org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.createFromMap : $r1 = new org.apache.ambari.server.state.kerberos.KerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.createFromMap : $r2 = <org.apache.ambari.server.state.kerberos.KerberosDescriptorTest: java.util.Map MAP_VALUE>
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.createFromMap : $r2 = <org.apache.ambari.server.state.kerberos.KerberosDescriptorTest: java.util.Map MAP_VALUE> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.createFromMap : specialinvoke $r1.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.createFromMap : specialinvoke $r1.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if $r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r4 = new java.util.TreeSet
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r4 = new java.util.TreeSet >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : specialinvoke $r4.<java.util.TreeSet: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : specialinvoke $r4.<java.util.TreeSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> = $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> = $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> = $r6
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.createFromMap : return $r1
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.createFromMap : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isContainer : return 1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isContainer : return 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getProperties : return $r1
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r8 = (java.lang.String) $r7
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("EXAMPLE.COM", $r8)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("EXAMPLE.COM", $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("some.property")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("some.property") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r10 = (java.lang.String) $r9
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("Hello World", $r10)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("Hello World", $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r11 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r11 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r13 = (java.lang.String) $r12
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("global.name.rules", $r13)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("global.name.rules", $r13) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getServices()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getServices : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getServices : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getServices : return $r1
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getServices : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i2 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i2 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r29 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r29 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r19 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r19 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r30 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r19
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r30 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r19 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r31 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("A_DIFFERENT_COMPONENT_NAME")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r31 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("A_DIFFERENT_COMPONENT_NAME") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if $r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r5 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r4
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r5 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : return $r5
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : return $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r31)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r31) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r4 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(1, null)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r4 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r3 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r3 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if $r3 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if $r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r12 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r12 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z0 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("../")
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z0 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("../") >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : return r13
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : return r13 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r19 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r19 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r5 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r5 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : $r3 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : $r3 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : specialinvoke $r3.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : specialinvoke $r3.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r2)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r3 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r14 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_PRINCIPAL>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r14 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_PRINCIPAL> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r13 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r13 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r15 = virtualinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r15 = virtualinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r2 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r2 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", $r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", $r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String translate(org.apache.ambari.server.state.kerberos.KerberosPrincipalType)>($r5)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String translate(org.apache.ambari.server.state.kerberos.KerberosPrincipalType)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : if r0 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : if r0 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String name()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r6)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", $r8)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("local_username", $r10)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("local_username", $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r4 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r10 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_KEYTAB>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r10 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_KEYTAB> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r11 = virtualinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r11 = virtualinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r4 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r4 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r4.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r4.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r15 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r15 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("file", r15)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("file", r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r16 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r16 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r16)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r16) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r17 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r17 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("access", r17)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("access", r17) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z0 != 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r6)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owner", $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r7 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r7 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r7.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r7.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r18 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r18 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r18 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r18 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r18)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r18) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r19 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r19 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("access", r19)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("access", r19) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z1 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z1 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z1 != 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("group", $r7)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("group", $r7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r20 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r20 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", r20)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", r20) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : return $r4
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r5 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r5 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : return r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : return r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>($r6)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = $r5
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : if $r1 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : if $r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r3 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getPath()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r3 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if r8 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if r8 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r4 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r4 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r5 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r5 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r5)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r5) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 47)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 47) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = $r3
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : return $r2
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setPath(java.lang.String)>($r20)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setPath(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : return r18
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : return r18 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r11 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r11 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : return 1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : return 1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z2 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r12)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r16 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r16 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r17 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r17 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r18 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r18 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $i0 = lengthof r16
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $i0 = lengthof r16 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : tableswitch($i0) {     case 1:
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : tableswitch($i0) {     case 1: >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r19 = r16[1]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r19 = r16[1] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r19 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r19 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getRoot()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getRoot()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : if $r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : if $r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : goto [?= $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : goto [?= $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : return r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : return r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r20 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r20 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r17 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r17 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $r1 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $r1 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r21 = virtualinvoke r20.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>($r1, r19)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r21 = virtualinvoke r20.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>($r1, r19) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type SERVICE>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type SERVICE> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : if $r3 != r1
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : if $r3 != r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r4 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r4 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : if $r3 != r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : if $r3 != r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>(r2)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : goto [?= return r8]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : goto [?= return r8] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : return r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : return r8 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : return $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : return $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : return $r4
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z2 = r21 instanceof org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z2 = r21 instanceof org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z2 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) r21
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) r21 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r19)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r19) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r18 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r18 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r5 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r5 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setName(java.lang.String)>($r5)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setName(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setReference(java.lang.String)>($r6)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setReference(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r7 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r7 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor)>($r7)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.update : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.update : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor)>($r8)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor)>($r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setFile(java.lang.String)>(r2)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setFile(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setFile : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setName(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setFile : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r3 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r3 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r3 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setConfiguration(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setConfiguration(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r4 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setOwnerName(java.lang.String)>(r4)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setOwnerName(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r5 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r5 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r5 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r5 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setOwnerAccess(java.lang.String)>(r5)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setOwnerAccess(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r6 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r6 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setGroupName(java.lang.String)>(r6)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setGroupName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r7 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : r7 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r7 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r7 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setGroupAccess(java.lang.String)>(r7)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setGroupAccess(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r4 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : goto [?= $r20 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : goto [?= $r20 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = null
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i5 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i5 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i5)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r26 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r26 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r34 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r26
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r34 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r26 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r27 = "/shared"
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r27 = "/shared" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r28 = virtualinvoke r34.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r28 = virtualinvoke r34.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = r34
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = r34 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32)]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32)] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r35 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(0, null)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r35 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(0, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r35)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i6 = interfaceinvoke r35.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i6 = interfaceinvoke r35.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i6)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r36 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared_identity")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r36 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared_identity") >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r36)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r36) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r5)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r20 = virtualinvoke r36.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r20 = virtualinvoke r36.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r21 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r21 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosKeytabDescriptor;"
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosKeytabDescriptor;" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor) r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z0 = r1 instanceof org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z0 = r1 instanceof org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor) r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : return $z1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : return $z1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r7 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r7 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r10 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r10 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z3 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r13 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r13 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z4 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r16 != null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $r16 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r18 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $r18 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z5 == 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z6 = 1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : $z6 = 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : goto [?= return $z6]
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : goto [?= return $z6] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : return $z6
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.equals : return $z6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r22 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r22 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r23 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r23 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalDescriptor;"
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalDescriptor;" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor) r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r7 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r7 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : goto [?= return $z3]
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : goto [?= return $z3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : return $z3
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : return $z3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r6 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations(boolean)>(1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r6 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r11 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r11 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r11.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r11.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r12 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r12 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r24 = r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r24 = r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r24 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r24 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z3 = virtualinvoke r24.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z3 = virtualinvoke r24.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z3 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r23 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer) r24
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r23 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer) r24 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r25 = virtualinvoke $r23.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r25 = virtualinvoke $r23.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations(boolean)>(0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r10
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r10 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r25 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r25 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r25)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r25) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r24 = virtualinvoke r24.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r24 = virtualinvoke r24.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : staticinvoke <java.util.Collections: void reverse(java.util.List)>($r12)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : staticinvoke <java.util.Collections: void reverse(java.util.List)>($r12) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r26 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r26 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r13 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r13 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = (java.util.Map) $r13
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = (java.util.Map) $r13 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r4 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r4 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z2 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r5 = (java.util.Map$Entry) $r15
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r5 = (java.util.Map$Entry) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r6 = (java.lang.String) $r16
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r6 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r7 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r17
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r7 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r17 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r7 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r7 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r18 = new org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r18 = new org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r19 = virtualinvoke r7.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r19 = virtualinvoke r7.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r2 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r2 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r8 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r8 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>(java.util.Map)>($r5)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>(java.util.Map)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : return $r2
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r18.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void <init>(java.util.Map)>($r19)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r18.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void <init>(java.util.Map)>($r19) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r20 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r20 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r21 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r21 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r9 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r21
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r9 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r21 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r9 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r9 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r18)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r18) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r11
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r11 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r6)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i7 = interfaceinvoke r6.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i7 = interfaceinvoke r6.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i7)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r24)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r25 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r25 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r25)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r37 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r37 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r37)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i3 = interfaceinvoke r37.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i3 = interfaceinvoke r37.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r15 = interfaceinvoke r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r15 = interfaceinvoke r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r38 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r15
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r38 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r38)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r38) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r39 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r39 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : return $r1
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r16 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r16 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("cluster-conf", $r16)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("cluster-conf", $r16) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r39)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r39) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i4 = interfaceinvoke r39.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i4 = interfaceinvoke r39.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r17 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("property1")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r17 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("property1") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r18 = (java.lang.String) $r17
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r18 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r18)
