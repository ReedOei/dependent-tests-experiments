org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $r1 = r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey: java.util.Set metricNames> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : i3 = interfaceinvoke $r1.<java.util.Set: int hashCode()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : i3 = interfaceinvoke $r1.<java.util.Set: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i0 = 31 * i3
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i0 = 31 * i3 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $r2 = r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey: java.lang.String appId>
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $r2 = r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey: java.lang.String appId> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : i4 = $i0 + $i1
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : i4 = $i0 + $i1 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i2 = 31 * i4
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i2 = 31 * i4 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $r3 = r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey: java.lang.String hostNames>
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $r3 = r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey: java.lang.String hostNames> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : if $r3 == null
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i5 = 0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : $i5 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : i6 = $i2 + $i5
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : i6 = $i2 + $i5 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : return i6
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.hashCode : return i6 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.equals : if r0 != r1
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.equals : return 1
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineAppMetricCacheKey.equals : return 1 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.instance : $r0 = <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration singleton>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.instance : $r0 = <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration singleton> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.instance : return $r0
org.apache.ambari.server.configuration.ComponentSSLConfiguration.instance : return $r0 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePath : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePath>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePath : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePath> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePath : return $r1
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePath : return $r1 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePassword : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePassword>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePassword : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePassword> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePassword : return $r1
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePassword : return $r1 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststoreType>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststoreType> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : return $r1
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : return $r1 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l0 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l0 = virtualinvoke r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l2 = $l0 - $l1
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l2 = $l0 - $l1 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : r5 = r3
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : r5 = r3 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l3 = virtualinvoke r4.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l3 = virtualinvoke r4.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $b4 = $l3 cmp 0L
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $b4 = $l3 cmp 0L >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : if $b4 >= 0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : if $b4 >= 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l5 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l5 = virtualinvoke r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l6 = virtualinvoke r1.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l6 = virtualinvoke r1.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $b7 = $l5 cmp $l6
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $b7 = $l5 cmp $l6 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : if $b7 <= 0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : if $b7 <= 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l8 = virtualinvoke r2.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l8 = virtualinvoke r2.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l9 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: long getTimeShiftedStartTime(long)>($l8)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l9 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: long getTimeShiftedStartTime(long)>($l8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $b1 = l0 cmp 9999999999L
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $b1 = l0 cmp 9999999999L >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : if $b1 >= 0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : if $b1 >= 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $r1 = r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: java.lang.Long BUFFER_TIME_DIFF_CATCHUP_INTERVAL>
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $r1 = r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: java.lang.Long BUFFER_TIME_DIFF_CATCHUP_INTERVAL> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $l2 = virtualinvoke $r1.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $l2 = virtualinvoke $r1.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $l3 = l0 - $l2
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : $l3 = l0 - $l2 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : return $l3
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getTimeShiftedStartTime : return $l3 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $r6 = <org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $r6 = <org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $r7 = new java.util.Date
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $r7 = new java.util.Date >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l10 = virtualinvoke r5.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l10 = virtualinvoke r5.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l11 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: long getMillisecondsTime(long)>($l10)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : $l11 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: long getMillisecondsTime(long)>($l10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getMillisecondsTime : $b1 = l0 cmp 9999999999L
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getMillisecondsTime : $b1 = l0 cmp 9999999999L >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getMillisecondsTime : if $b1 >= 0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getMillisecondsTime : if $b1 >= 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getMillisecondsTime : return l0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getMillisecondsTime : return l0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : specialinvoke $r7.<java.util.Date: void <init>(long)>($l11)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : specialinvoke $r7.<java.util.Date: void <init>(long)>($l11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Requesting timeseries data with new startTime = {}", $r7)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Requesting timeseries data with new startTime = {}", $r7) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : return r5
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestStartTime : return r5 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : r5 = r3
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : r5 = r3 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l0 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l0 = virtualinvoke r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l2 = $l0 - $l1
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l2 = $l0 - $l1 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l3 = virtualinvoke r4.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l3 = virtualinvoke r4.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $b4 = $l3 cmp 0L
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $b4 = $l3 cmp 0L >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : if $b4 >= 0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : if $b4 >= 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $r6 = <org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $r6 = <org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $r7 = new java.util.Date
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $r7 = new java.util.Date >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l8 = virtualinvoke r5.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l8 = virtualinvoke r5.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l9 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: long getMillisecondsTime(long)>($l8)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l9 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory: long getMillisecondsTime(long)>($l8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : specialinvoke $r7.<java.util.Date: void <init>(long)>($l9)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : specialinvoke $r7.<java.util.Date: void <init>(long)>($l9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Requesting timeseries data with new endTime = {}", $r7)
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Requesting timeseries data with new endTime = {}", $r7) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : return r5
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : return r5 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l5 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l5 = virtualinvoke r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l6 = virtualinvoke r1.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $l6 = virtualinvoke r1.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $b7 = $l5 cmp $l6
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : $b7 = $l5 cmp $l6 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : if $b7 <= 0
org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : if $b7 <= 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheEntryFactory.getRefreshRequestEndTime : r5 = r1
