org.apache.ambari.server.collections.PredicateUtils.toJSON : if r0 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.toJSON : $r1 = null
org.apache.ambari.server.collections.PredicateUtils.toJSON : $r1 = null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.toJSON : goto [?= return $r1]
org.apache.ambari.server.collections.PredicateUtils.toJSON : goto [?= return $r1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.toJSON : return $r1
org.apache.ambari.server.collections.PredicateUtils.toJSON : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"or\":[{\"equals\":[\"configurations/cluster-env/property1\",\"false\"]},")
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"or\":[{\"equals\":[\"configurations/cluster-env/property1\",\"false\"]},") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"and\":[{\"contains\":[\"services\",\"HDFS\"]},{\"equals\":[\"configurations/service-env/property1\",\"true\"]}]}")
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"and\":[{\"contains\":[\"services\",\"HDFS\"]},{\"equals\":[\"configurations/service-env/property1\",\"true\"]}]}") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]}")
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]}") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"not\":")
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"not\":") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : return $r11
org.apache.ambari.server.collections.PredicateUtilsTest.createJSON : return $r11 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r9 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r9 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r9.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>("services")
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r9.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>("services") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r10 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r10 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r10.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>("configurations/service-env/property1")
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r10.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>("configurations/service-env/property1") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r11 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r11 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r11.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>("configurations/cluster-env/property1")
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r11.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>("configurations/cluster-env/property1") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r12 = new org.apache.ambari.server.collections.functors.ContainsPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r12 = new org.apache.ambari.server.collections.functors.ContainsPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r12.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r9, "HDFS")
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r12.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r9, "HDFS") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r13 = new org.apache.ambari.server.collections.functors.EqualsPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r13 = new org.apache.ambari.server.collections.functors.EqualsPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r13.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r10, "true")
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r13.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r10, "true") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r14 = new org.apache.ambari.server.collections.functors.EqualsPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r14 = new org.apache.ambari.server.collections.functors.EqualsPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r14.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r11, "false")
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r14.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r11, "false") >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r15 = new org.apache.ambari.server.collections.functors.AndPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r15 = new org.apache.ambari.server.collections.functors.AndPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r15.<org.apache.ambari.server.collections.functors.AndPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r12, $r13)
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r15.<org.apache.ambari.server.collections.functors.AndPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r12, $r13) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r16 = new org.apache.ambari.server.collections.functors.OrPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r16 = new org.apache.ambari.server.collections.functors.OrPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r16.<org.apache.ambari.server.collections.functors.OrPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r14, $r15)
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r16.<org.apache.ambari.server.collections.functors.OrPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r14, $r15) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r17 = new org.apache.ambari.server.collections.functors.NotPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : $r17 = new org.apache.ambari.server.collections.functors.NotPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r17.<org.apache.ambari.server.collections.functors.NotPredicate: void <init>(org.apache.commons.collections.Predicate)>($r16)
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : specialinvoke $r17.<org.apache.ambari.server.collections.functors.NotPredicate: void <init>(org.apache.commons.collections.Predicate)>($r16) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : return $r17
org.apache.ambari.server.collections.PredicateUtilsTest.createPredicate : return $r17 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.toJSON : $r1 = virtualinvoke r0.<org.apache.ambari.server.collections.Predicate: java.lang.String toJSON()>()
org.apache.ambari.server.collections.PredicateUtils.toJSON : $r1 = virtualinvoke r0.<org.apache.ambari.server.collections.Predicate: java.lang.String toJSON()>() >>>>>>>> org.apache.ambari.server.collections.Predicate.toJSON : r1 = virtualinvoke r0.<org.apache.ambari.server.collections.Predicate: java.util.Map toMap()>()
org.apache.ambari.server.collections.Predicate.toJSON : r1 = virtualinvoke r0.<org.apache.ambari.server.collections.Predicate: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.toMap : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: java.util.Map toMap()>()
org.apache.ambari.server.collections.functors.NotPredicate.toMap : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: java.lang.String getName()>()
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.Predicate.getName : $r1 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name>
org.apache.ambari.server.collections.Predicate.getName : $r1 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name> >>>>>>>> org.apache.ambari.server.collections.Predicate.getName : return $r1
org.apache.ambari.server.collections.Predicate.getName : return $r1 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : $r2 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: java.util.Map containedPredicateToMap()>()
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : $r2 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: java.util.Map containedPredicateToMap()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r11 = null
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r11 = null >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $r3 = r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate>
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $r3 = r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate> >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if $r3 == null
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if $r3 == null >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $r4 = r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate>
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $r4 = r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate> >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r1 = interfaceinvoke $r4.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r1 = interfaceinvoke $r4.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if r1 == null
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if r1 == null >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $i0 = lengthof r1
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if $i0 <= 0
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r2 = r1[0]
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r2 = r1[0] >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $z0 = r2 instanceof org.apache.ambari.server.collections.Predicate
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $z0 = r2 instanceof org.apache.ambari.server.collections.Predicate >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if $z0 == 0
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $r10 = (org.apache.ambari.server.collections.Predicate) r2
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : $r10 = (org.apache.ambari.server.collections.Predicate) r2 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r11 = virtualinvoke $r10.<org.apache.ambari.server.collections.Predicate: java.util.Map toMap()>()
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : r11 = virtualinvoke $r10.<org.apache.ambari.server.collections.Predicate: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.toMap : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.util.Map toMap()>()
org.apache.ambari.server.collections.functors.OrPredicate.toMap : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.lang.String getName()>()
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : $r1 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : $r2 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.util.List containedPredicatesToMaps()>()
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : $r2 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.util.List containedPredicatesToMaps()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r5 = new java.util.ArrayList
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r6 = r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate>
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r6 = r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate> >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if $r6 == null
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if $r6 == null >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r7 = r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate>
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r7 = r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate> >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : r2 = interfaceinvoke $r7.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : r2 = interfaceinvoke $r7.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if r2 == null
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if r2 == null >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : i0 = lengthof r2
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : i0 = lengthof r2 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : i1 = 0
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : i1 = 0 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if i1 >= i0
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if i1 >= i0 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : r4 = r2[i1]
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : r4 = r2[i1] >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $z0 = r4 instanceof org.apache.ambari.server.collections.Predicate
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $z0 = r4 instanceof org.apache.ambari.server.collections.Predicate >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if $z0 == 0
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r13 = (org.apache.ambari.server.collections.Predicate) r4
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r13 = (org.apache.ambari.server.collections.Predicate) r4 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r14 = virtualinvoke $r13.<org.apache.ambari.server.collections.Predicate: java.util.Map toMap()>()
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : $r14 = virtualinvoke $r13.<org.apache.ambari.server.collections.Predicate: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r1 = new java.util.ArrayList
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r2 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r2 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r1 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r1 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : if $r1 != null
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : if $r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r2 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r2 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r3 = virtualinvoke $r2.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String getKey()>()
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r3 = virtualinvoke $r2.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.getKey : $r1 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key>
org.apache.ambari.server.collections.functors.ContextTransformer.getKey : $r1 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key> >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.getKey : return $r1
org.apache.ambari.server.collections.functors.ContextTransformer.getKey : return $r1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : return $r3
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : return $r3 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : return $r1
org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : return $r1 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r2[0] = $r3
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r2[0] = $r3 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r4 = r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: org.apache.commons.collections.functors.EqualPredicate delegate>
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r4 = r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: org.apache.commons.collections.functors.EqualPredicate delegate> >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r5 = virtualinvoke $r4.<org.apache.commons.collections.functors.EqualPredicate: java.lang.Object getValue()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r5 = virtualinvoke $r4.<org.apache.commons.collections.functors.EqualPredicate: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r2[1] = $r6
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r2[1] = $r6 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r7)
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r1)
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : $r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r1) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : return $r8
org.apache.ambari.server.collections.functors.EqualsPredicate.toMap : return $r8 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : goto [?= i1 = i1 + 1]
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : i1 = i1 + 1
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : goto [?= (branch)]
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.toMap : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.util.Map toMap()>()
org.apache.ambari.server.collections.functors.AndPredicate.toMap : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r1 = new java.util.ArrayList
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r2 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r2 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : return $r1
org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : return $r1 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r2[0] = $r3
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r2[0] = $r3 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r4 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value>
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r4 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value> >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r2[1] = $r4
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r2[1] = $r4 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("contains", $r1)
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("contains", $r1) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : return $r6
org.apache.ambari.server.collections.functors.ContainsPredicate.toMap : return $r6 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : return $r5
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.containedPredicatesToMaps : return $r5 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : $r3 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r1, $r2)
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : $r3 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r1, $r2) >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : return $r3
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.toMap : return $r3 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.toMap : return $r1
org.apache.ambari.server.collections.functors.AndPredicate.toMap : return $r1 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.toMap : return $r1
org.apache.ambari.server.collections.functors.OrPredicate.toMap : return $r1 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : goto [?= return r11]
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : goto [?= return r11] >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : return r11
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.containedPredicateToMap : return r11 >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : $r3 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r1, $r2)
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : $r3 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r1, $r2) >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : return $r3
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.toMap : return $r3 >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.toMap : return $r1
org.apache.ambari.server.collections.functors.NotPredicate.toMap : return $r1 >>>>>>>> org.apache.ambari.server.collections.Predicate.toJSON : if r1 != null
org.apache.ambari.server.collections.Predicate.toJSON : if r1 != null >>>>>>>> org.apache.ambari.server.collections.Predicate.toJSON : $r2 = new com.google.gson.Gson
org.apache.ambari.server.collections.Predicate.toJSON : $r2 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.collections.Predicate.toJSON : specialinvoke $r2.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.collections.Predicate.toJSON : specialinvoke $r2.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.collections.Predicate.toJSON : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1)
org.apache.ambari.server.collections.Predicate.toJSON : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.collections.Predicate.toJSON : return $r3
