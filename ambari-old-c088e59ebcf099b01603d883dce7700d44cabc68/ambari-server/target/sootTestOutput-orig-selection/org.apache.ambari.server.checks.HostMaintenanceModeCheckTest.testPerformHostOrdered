org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r7 = r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r7 = r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r8 = interfaceinvoke $r7.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r8 = interfaceinvoke $r7.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : $r1 = r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2: org.apache.ambari.server.checks.HostMaintenanceModeCheckTest this$0>
org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : $r1 = r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2: org.apache.ambari.server.checks.HostMaintenanceModeCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.HostMaintenanceModeCheckTest)>($r1)
org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.HostMaintenanceModeCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.HostMaintenanceModeCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.HostMaintenanceModeCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : return $r2
org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : return $r1
org.apache.ambari.server.checks.HostMaintenanceModeCheckTest$2.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r9 = (org.apache.ambari.server.state.Clusters) $r8
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r9 = (org.apache.ambari.server.state.Clusters) $r8 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r4 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r4 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r19 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r19 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r15 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r15 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r20 = (org.apache.ambari.server.state.Host) $r15
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r20 = (org.apache.ambari.server.state.Host) $r15 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r6 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : r6 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r16 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r16 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if r6 == $r16
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if r6 == $r16 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : goto [?= $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : goto [?= $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r10 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r10 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $z1 = virtualinvoke $r10.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $z1 = virtualinvoke $r10.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $z1 != 0
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r17 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r17 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r18 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r18 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : virtualinvoke $r17.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : virtualinvoke $r17.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r11 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType getUpgradeType()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r11 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType getUpgradeType()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType m_upgradeType>
org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType m_upgradeType> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r12 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED>
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r12 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED> >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $r11 != $r12
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $r11 != $r12 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r21 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r21 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : goto [?= virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21)]
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : goto [?= virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21)] >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21)
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r13 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType getUpgradeType()>()
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r13 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType getUpgradeType()>() >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r14 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED>
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r14 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED> >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $r13 != $r14
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : if $r13 != $r14 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r23 = virtualinvoke r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("cannot_upgrade_mm_hosts", r1, r2)
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : $r23 = virtualinvoke r0.<org.apache.ambari.server.checks.HostMaintenanceModeCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("cannot_upgrade_mm_hosts", r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0
org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4
org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5]
org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : return $r5
org.apache.ambari.server.checks.CheckDescription.getFail : return $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion>
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r33 = virtualinvoke r2.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r33 = virtualinvoke r2.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : $r1 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : $r1 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : return $r1
org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r14 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.state.stack.PrereqCheckType getType()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r14 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.state.stack.PrereqCheckType getType()>() >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getType : $r1 = r0.<org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.state.stack.PrereqCheckType m_type>
org.apache.ambari.server.checks.CheckDescription.getType : $r1 = r0.<org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.state.stack.PrereqCheckType m_type> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getType : return $r1
org.apache.ambari.server.checks.CheckDescription.getType : return $r1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r15 = <org.apache.ambari.server.state.stack.PrereqCheckType: org.apache.ambari.server.state.stack.PrereqCheckType SERVICE>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r15 = <org.apache.ambari.server.state.stack.PrereqCheckType: org.apache.ambari.server.state.stack.PrereqCheckType SERVICE> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $r14 != $r15
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $r14 != $r15 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r16 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String formatEntityList(java.util.LinkedHashSet)>(r33)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r16 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String formatEntityList(java.util.LinkedHashSet)>(r33) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : if r1 == null
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : if r1 == null >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $z0 = virtualinvoke r1.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $z0 = virtualinvoke r1.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $r4 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r1, ", ")
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $r4 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r1, ", ") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $i0 = virtualinvoke r1.<java.util.LinkedHashSet: int size()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $i0 = virtualinvoke r1.<java.util.LinkedHashSet: int size()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : if $i0 <= 1
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : return $r5
org.apache.ambari.server.checks.AbstractCheckDescriptor.formatEntityList : return $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{fails}}", $r16)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{fails}}", $r16) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32 >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : goto [?= virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r23)]
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : goto [?= virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r23)] >>>>>>>> org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r23)
org.apache.ambari.server.checks.HostMaintenanceModeCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : return $r1
