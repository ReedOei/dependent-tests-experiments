org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : $r2 = new org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : $r2 = new org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : specialinvoke $r2.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: void <init>(org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest)>(r0)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : specialinvoke $r2.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: void <init>(org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : $r1[0] = $r2
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r2 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r2 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r5 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r5 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r8 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r8 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r12 = virtualinvoke $r11.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r12 = virtualinvoke $r11.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/StageFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/StageFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r17 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r17 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/StageFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/StageFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r20 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r20 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r21 = virtualinvoke $r20.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r21 = virtualinvoke $r20.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r21)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r24 = virtualinvoke $r23.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r24 = virtualinvoke $r23.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/ActionManager;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/ActionManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r26 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r26 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/ActionManager;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/ActionManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r30 = virtualinvoke $r29.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r30 = virtualinvoke $r29.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r32 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r32 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r34 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ArtifactDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r34 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ArtifactDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r35 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r35 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ArtifactDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ArtifactDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r37 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/KerberosPrincipalDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r37 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/KerberosPrincipalDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r38 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r38 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r39 = virtualinvoke $r38.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/KerberosPrincipalDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r39 = virtualinvoke $r38.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/KerberosPrincipalDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r39)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r40 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/RoleCommandOrderProvider;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r40 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/RoleCommandOrderProvider;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r40.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/CachedRoleCommandOrderProvider;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r40.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/CachedRoleCommandOrderProvider;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r42 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r42 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r42.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactoryImpl;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r42.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactoryImpl;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r44 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/RoleCommandOrderProvider;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r44 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/RoleCommandOrderProvider;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r44.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/CachedRoleCommandOrderProvider;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r44.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/CachedRoleCommandOrderProvider;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r46 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r46 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r46.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactoryImpl;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r46.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactoryImpl;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r48 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stageplanner/RoleGraphFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r48 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stageplanner/RoleGraphFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r49 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r49 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stageplanner/RoleGraphFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stageplanner/RoleGraphFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r48.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r50)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r48.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r51 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r51 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r52 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r52 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r53 = virtualinvoke $r52.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r53 = virtualinvoke $r52.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r51.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r53)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r51.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r54 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/scheduler/RequestExecutionFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r54 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/scheduler/RequestExecutionFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r55 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r55 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r56 = virtualinvoke $r55.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/scheduler/RequestExecutionFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r56 = virtualinvoke $r55.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/scheduler/RequestExecutionFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r54.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r56)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r54.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r57 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r57 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r58 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r58 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r59 = virtualinvoke $r58.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r59 = virtualinvoke $r58.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r57.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r59)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r57.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r59) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r60 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/TopologyManager;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r60 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/TopologyManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r61 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r61 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r62 = virtualinvoke $r61.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/TopologyManager;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r62 = virtualinvoke $r61.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/TopologyManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r60.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r62)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r60.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r63 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r63 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r64 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r64 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r65 = virtualinvoke $r64.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r65 = virtualinvoke $r64.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r63.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r65)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r63.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r66 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/PersistedState;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r66 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/PersistedState;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r67 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r67 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r68 = virtualinvoke $r67.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/PersistedState;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r68 = virtualinvoke $r67.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/PersistedState;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r66.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r68)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r66.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r69 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/tasks/ConfigureClusterTaskFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r69 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/tasks/ConfigureClusterTaskFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r70 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r70 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r71 = virtualinvoke $r70.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/tasks/ConfigureClusterTaskFactory;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r71 = virtualinvoke $r70.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/tasks/ConfigureClusterTaskFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r69.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r71)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r69.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r72 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r72 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r73 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r73 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r74 = new java.util.Properties
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r74 = new java.util.Properties >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : specialinvoke $r74.<java.util.Properties: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : specialinvoke $r74.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : specialinvoke $r73.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r74)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : specialinvoke $r73.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r74) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r72.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r73)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r72.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r75 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r75 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r76 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r76 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r77 = virtualinvoke $r76.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r77 = virtualinvoke $r76.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r75.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r77)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r75.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r77) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r78 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r78 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r78.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelperImpl;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r78.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelperImpl;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r80 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r80 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r81 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r81 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r82 = virtualinvoke $r81.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r82 = virtualinvoke $r81.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r80.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r82)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r80.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r83 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/stackadvisor/StackAdvisorHelper;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r83 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/stackadvisor/StackAdvisorHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r84 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r84 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r85 = virtualinvoke $r84.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/stackadvisor/StackAdvisorHelper;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r85 = virtualinvoke $r84.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/stackadvisor/StackAdvisorHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r83.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r85)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r83.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r85) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r86 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r86 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r87 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r87 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r88 = virtualinvoke $r87.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r88 = virtualinvoke $r87.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r86.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r88)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r86.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r88) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r89 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r89 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r90 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r90 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3: org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r91 = virtualinvoke $r90.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : $r91 = virtualinvoke $r90.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r89.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r91)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest$3.configure : interfaceinvoke $r89.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r1 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HDFS_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r1 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HDFS_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r3 = virtualinvoke $r1.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r3 = virtualinvoke $r1.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.Role.toString : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name>
org.apache.ambari.server.Role.toString : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name> >>>>>>>> org.apache.ambari.server.Role.toString : return $r1
org.apache.ambari.server.Role.toString : return $r1 >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs", $r3)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs", $r3) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r5 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role GLUSTERFS_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r5 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role GLUSTERFS_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r7 = virtualinvoke $r5.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r7 = virtualinvoke $r5.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("glusterfs", $r7)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("glusterfs", $r7) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r10 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r10 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r9 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HBASE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r9 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HBASE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r11 = virtualinvoke $r9.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r11 = virtualinvoke $r9.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase", $r11)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase", $r11) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r14 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r14 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r13 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAPREDUCE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r13 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAPREDUCE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r15 = virtualinvoke $r13.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r15 = virtualinvoke $r13.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce", $r15)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce", $r15) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r18 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r18 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r17 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ZOOKEEPER_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r17 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ZOOKEEPER_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r19 = virtualinvoke $r17.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r19 = virtualinvoke $r17.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper", $r19)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper", $r19) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r22 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r22 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r21 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HIVE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r21 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HIVE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r23 = virtualinvoke $r21.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r23 = virtualinvoke $r21.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive", $r23)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive", $r23) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r26 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r26 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r25 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HCAT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r25 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HCAT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r27 = virtualinvoke $r25.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r27 = virtualinvoke $r25.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hcat", $r27)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hcat", $r27) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r30 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r30 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r29 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role OOZIE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r29 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role OOZIE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r31 = virtualinvoke $r29.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r31 = virtualinvoke $r29.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oozie", $r31)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oozie", $r31) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r34 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r34 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r33 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role PIG>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r33 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role PIG> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r35 = virtualinvoke $r33.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r35 = virtualinvoke $r33.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pig", $r35)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pig", $r35) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r38 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r38 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r37 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAHOUT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r37 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAHOUT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r39 = virtualinvoke $r37.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r39 = virtualinvoke $r37.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mahout", $r39)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mahout", $r39) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r42 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r42 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r41 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role SQOOP>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r41 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role SQOOP> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r43 = virtualinvoke $r41.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r43 = virtualinvoke $r41.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sqoop", $r43)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sqoop", $r43) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r46 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r46 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r45 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role YARN_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r45 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role YARN_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r47 = virtualinvoke $r45.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r47 = virtualinvoke $r45.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn", $r47)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn", $r47) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r50 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r50 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r49 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role KERBEROS_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r49 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role KERBEROS_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r51 = virtualinvoke $r49.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r51 = virtualinvoke $r49.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kerberos", $r51)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kerberos", $r51) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r54 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r54 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r53 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ACCUMULO_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r53 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ACCUMULO_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r55 = virtualinvoke $r53.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r55 = virtualinvoke $r53.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("accumulo", $r55)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("accumulo", $r55) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r1 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r1 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("RESTART")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("RESTART") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("START")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("START") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r3 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r3 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>("STOP")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>("STOP") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r4 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r4 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("INSTALL")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("INSTALL") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r5 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r5 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE_FUNCTION")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE_FUNCTION") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r7 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r7 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>("DISABLE_SECURITY")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>("DISABLE_SECURITY") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r8 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r8 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>("RECONFIGURE")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>("RECONFIGURE") >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_CACHE_ENABLED>
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_CACHE_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : return $z0
org.apache.ambari.server.configuration.Configuration.isAlertCacheEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE>
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : return $i0
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherCorePoolSize : return $i0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE>
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : return $i0
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherMaxPoolSize : return $i0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE>
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : return $i0
org.apache.ambari.server.configuration.Configuration.getAlertEventPublisherWorkerQueueSize : return $i0 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r0 = <org.apache.ambari.annotations.TransactionalLock$LockArea: org.apache.ambari.annotations.TransactionalLock$LockArea[] $VALUES>
org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r0 = <org.apache.ambari.annotations.TransactionalLock$LockArea: org.apache.ambari.annotations.TransactionalLock$LockArea[] $VALUES> >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r2 = (org.apache.ambari.annotations.TransactionalLock$LockArea[]) $r1
org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r2 = (org.apache.ambari.annotations.TransactionalLock$LockArea[]) $r1 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : return $r2
org.apache.ambari.annotations.TransactionalLock$LockArea.values : return $r2 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : $r4 = r0.<org.apache.ambari.annotations.TransactionalLock$LockArea: java.lang.Boolean m_enabled>
org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : $r4 = r0.<org.apache.ambari.annotations.TransactionalLock$LockArea: java.lang.Boolean m_enabled> >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : if null == $r4
org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : if null == $r4 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : $r12 = r0.<org.apache.ambari.annotations.TransactionalLock$LockArea: java.lang.Boolean m_enabled>
org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : $r12 = r0.<org.apache.ambari.annotations.TransactionalLock$LockArea: java.lang.Boolean m_enabled> >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : return $z1
org.apache.ambari.annotations.TransactionalLock$LockArea.isEnabled : return $z1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.setPersistedState : $r1 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.TopologyManager.setPersistedState : $r1 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.setPersistedState : $r2 = virtualinvoke $r1.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.topology.PersistedState getPersistedTopologyState()>()
org.apache.ambari.server.topology.TopologyManager.setPersistedState : $r2 = virtualinvoke $r1.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.topology.PersistedState getPersistedTopologyState()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.getPersistedTopologyState : $r1 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.topology.PersistedState persistedState>
org.apache.ambari.server.topology.AmbariContext.getPersistedTopologyState : $r1 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.getPersistedTopologyState : return $r1
org.apache.ambari.server.topology.AmbariContext.getPersistedTopologyState : return $r1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.setPersistedState : r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> = $r2
org.apache.ambari.server.topology.TopologyManager.setPersistedState : r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> = $r2 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.register : $r1 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.events.publishers.AmbariEventPublisher ambariEventPublisher>
org.apache.ambari.server.topology.TopologyManager.register : $r1 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.events.publishers.AmbariEventPublisher ambariEventPublisher> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.register : virtualinvoke $r1.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: void register(java.lang.Object)>(r0)
org.apache.ambari.server.topology.TopologyManager.register : virtualinvoke $r1.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: void register(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: com.google.common.eventbus.EventBus m_eventBus>
org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: com.google.common.eventbus.EventBus m_eventBus> >>>>>>>> org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1)
org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : return $r3
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getInjector : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : $r2 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clusterName", "c1")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clusterName", "c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : $r4 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction UPGRADE>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : $r4 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction UPGRADE> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : $r5 = virtualinvoke $r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String name()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : $r5 = virtualinvoke $r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("upgrade_direction", $r5)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("upgrade_direction", $r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : return $r2
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.getDefaultCommandParams : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/agent/ExecutionCommand;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/agent/ExecutionCommand;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : r2 = (org.apache.ambari.server.agent.ExecutionCommand) $r3
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : r2 = (org.apache.ambari.server.agent.ExecutionCommand) $r3 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r4 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r4 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : return r2
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockExecutionCommand : return r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r7 = (org.apache.ambari.server.state.Cluster) $r8
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r7 = (org.apache.ambari.server.state.Cluster) $r8 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r9 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r9 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r13 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r13 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $l0 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $l0 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r22 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r22 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r26 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r26 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r34 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r34 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r100 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r100 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $z0 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $z0 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : if $z0 == 0
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r35 = new java.util.HashSet
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r35 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36 = newarray (java.lang.String)[4]
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36 = newarray (java.lang.String)[4] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[0] = "HDFS"
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[0] = "HDFS" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[1] = "ZOOKEEPER"
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[1] = "ZOOKEEPER" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[2] = "YARN"
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[2] = "YARN" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[3] = "KNOX"
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r36[3] = "KNOX" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r37 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r36)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r37 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r36) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : specialinvoke $r35.<java.util.HashSet: void <init>(java.util.Collection)>($r37)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : specialinvoke $r35.<java.util.HashSet: void <init>(java.util.Collection)>($r37) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r38 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getServiceComponentHostMap(java.util.Set,java.util.Set)>(null, $r35)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r38 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getServiceComponentHostMap(java.util.Set,java.util.Set)>(null, $r35) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r42 = new java.util.HashSet
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r42 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43 = newarray (java.lang.String)[3]
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43[0] = "HDFS"
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43[0] = "HDFS" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43[1] = "ZOOKEEPER"
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43[1] = "ZOOKEEPER" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43[2] = "YARN"
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r43[2] = "YARN" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r44 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r43)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r44 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r43) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : specialinvoke $r42.<java.util.HashSet: void <init>(java.util.Collection)>($r44)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : specialinvoke $r42.<java.util.HashSet: void <init>(java.util.Collection)>($r44) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r45 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getServiceComponentHostMap(java.util.Set,java.util.Set)>(null, $r42)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r45 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getServiceComponentHostMap(java.util.Set,java.util.Set)>(null, $r42) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r49 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r49 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : specialinvoke $r49.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : specialinvoke $r49.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs-site", "HDFS")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs-site", "HDFS") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("core-site", "HDFS")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("core-site", "HDFS") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hadoop-env", "HDFS")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hadoop-env", "HDFS") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cluster-env", null)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cluster-env", null) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kerberos-env", "KERBEROS")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kerberos-env", "KERBEROS") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hdfs-audit", "RANGER")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hdfs-audit", "RANGER") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper-env", "ZOOKEEPER")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper-env", "ZOOKEEPER") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gateway-site", "KNOX")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gateway-site", "KNOX") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r58 = interfaceinvoke $r49.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r58 = interfaceinvoke $r49.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r103 = interfaceinvoke $r58.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r103 = interfaceinvoke $r58.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $z1 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $z1 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : if $z1 == 0
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r84 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r84 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r104 = (java.util.Map$Entry) $r84
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r104 = (java.util.Map$Entry) $r84 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r85 = interfaceinvoke r104.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r85 = interfaceinvoke r104.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r86 = (java.lang.String) $r85
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r86 = (java.lang.String) $r85 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r87 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>($r86)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r87 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>($r86) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r89 = interfaceinvoke r104.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r89 = interfaceinvoke r104.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r90 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r89)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r90 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r89) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : goto [?= $z1 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : goto [?= $z1 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r59 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $r59 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r105 = interfaceinvoke $r59.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : r105 = interfaceinvoke $r59.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $z2 = interfaceinvoke r105.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : $z2 = interfaceinvoke r105.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : if $z2 == 0
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : return r7
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosActionTest.createMockCluster : return r7 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: java.util.Map getCommandParameters()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: java.util.Map getCommandParameters()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r3
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if null == r2
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if null == r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if $z0 == 0
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $z1 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: boolean isDowngrade()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $z1 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: boolean isDowngrade()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $r1 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction DOWNGRADE>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $r1 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction DOWNGRADE> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $r2 = virtualinvoke $r1.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String name()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $r2 = virtualinvoke $r1.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: java.lang.String getCommandParameterValue(java.lang.String)>("upgrade_direction")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: java.lang.String getCommandParameterValue(java.lang.String)>("upgrade_direction") >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.AbstractServerAction: java.util.Map getCommandParameters()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.AbstractServerAction: java.util.Map getCommandParameters()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : if r2 != null
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r4 = (java.lang.String) $r3
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : return $r4
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameterValue : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : return $z0
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.isDowngrade : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if $z1 != 0
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r21 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("clusterName")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r21 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("clusterName") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : r3 = (java.lang.String) $r21
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : r3 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction: org.apache.ambari.server.state.Clusters m_clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : return $r1
org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : r4 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : r4 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r23 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r23 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r24 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r24 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if $r23 != $r24
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : if $r23 != $r24 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r25 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r25 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : virtualinvoke $r25.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Skipping: This facility is only available when Kerberos is enabled")
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : virtualinvoke $r25.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Skipping: This facility is only available when Kerberos is enabled") >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.writeStdOut : $r2 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut>
org.apache.ambari.server.serveraction.ActionLog.writeStdOut : $r2 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.writeStdOut : specialinvoke r0.<org.apache.ambari.server.serveraction.ActionLog: void write(java.lang.StringBuffer,java.lang.String)>($r2, r1)
org.apache.ambari.server.serveraction.ActionLog.writeStdOut : specialinvoke r0.<org.apache.ambari.server.serveraction.ActionLog: void write(java.lang.StringBuffer,java.lang.String)>($r2, r1) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : if r2 == null
org.apache.ambari.server.serveraction.ActionLog.write : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r4 = new java.util.Date
org.apache.ambari.server.serveraction.ActionLog.write : $r4 = new java.util.Date >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : specialinvoke $r4.<java.util.Date: void <init>()>()
org.apache.ambari.server.serveraction.ActionLog.write : specialinvoke $r4.<java.util.Date: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r5 = r0.<org.apache.ambari.server.serveraction.ActionLog: org.apache.commons.lang.time.FastDateFormat dateFormat>
org.apache.ambari.server.serveraction.ActionLog.write : $r5 = r0.<org.apache.ambari.server.serveraction.ActionLog: org.apache.commons.lang.time.FastDateFormat dateFormat> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r6 = virtualinvoke $r5.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Date)>($r4)
org.apache.ambari.server.serveraction.ActionLog.write : $r6 = virtualinvoke $r5.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Date)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6)
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ")
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ") >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n")
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : goto [?= $r16 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>]
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : goto [?= $r16 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r16 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r16 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r17 = virtualinvoke $r15.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdOut()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r17 = virtualinvoke $r15.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdOut()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut>
org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ActionLog.getStdOut : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdOut : return $r2
org.apache.ambari.server.serveraction.ActionLog.getStdOut : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r18 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r18 = r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdErr()>()
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.ActionLog: java.lang.String getStdErr()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdErr>
org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r1 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdErr> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ActionLog.getStdErr : $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.getStdErr : return $r2
org.apache.ambari.server.serveraction.ActionLog.getStdErr : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r16, "{}", $r17, $r19)
org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r16, "{}", $r17, $r19) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.PreconfigureKerberosAction.execute : return $r20
