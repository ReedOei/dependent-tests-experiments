org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/events/publishers/AmbariEventPublisher;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0
org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getInstance : $r0 = <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton>
org.apache.ambari.server.view.ViewRegistry.getInstance : $r0 = <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getInstance : return $r0
org.apache.ambari.server.view.ViewRegistry.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2]
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z0 != 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z1 = virtualinvoke r2.<java.lang.String: boolean matches(java.lang.String)>("^((\\d+\\.)?)*(\\*|\\d+)$")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z1 = virtualinvoke r2.<java.lang.String: boolean matches(java.lang.String)>("^((\\d+\\.)?)*(\\*|\\d+)$") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z1 != 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(42)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(42) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 != -1
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 != -1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r3, r2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r3, r2) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r0, r1, 0)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r0, r1, 0) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if r27 != null
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r27 != null >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if r28 != null
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r28 != null >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r27)
org.apache.ambari.server.utils.VersionUtils.compareVersions : r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r27) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r30 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r28)
org.apache.ambari.server.utils.VersionUtils.compareVersions : r30 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r28) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i1 = virtualinvoke r29.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i1 = virtualinvoke r29.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i1 < 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i1 < 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i2 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i2 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i2 < 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i2 < 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z0 = virtualinvoke r29.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z0 = virtualinvoke r29.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z0 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z1 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z1 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z1 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 >= 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 >= 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r6 = "${ambariVersion}"
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r6 = "${ambariVersion}" >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r7 = virtualinvoke r29.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r7 = virtualinvoke r29.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z2 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r8 = virtualinvoke r29.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([0-9]+).([0-9]+).([0-9]+).?([0-9]+)?.*", "$1.$2.$3.$4")
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r8 = virtualinvoke r29.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([0-9]+).([0-9]+).([0-9]+).?([0-9]+)?.*", "$1.$2.$3.$4") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r1 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.utils.VersionUtils.compareVersions : r1 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r9 = virtualinvoke r30.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([0-9]+).([0-9]+).([0-9]+).?([0-9]+)?.*", "$1.$2.$3.$4")
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r9 = virtualinvoke r30.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([0-9]+).([0-9]+).([0-9]+).?([0-9]+)?.*", "$1.$2.$3.$4") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r2 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.utils.VersionUtils.compareVersions : r2 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i4 = lengthof r1
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i4 = lengthof r1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i3 = lengthof r2
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i3 = lengthof r2 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i15 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3)
org.apache.ambari.server.utils.VersionUtils.compareVersions : i15 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i16 = i15
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i16 = i15 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i17 = $i16]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i17 = $i16] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i17 = $i16
org.apache.ambari.server.utils.VersionUtils.compareVersions : i17 = $i16 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r10 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r11 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i18 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : i18 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i18 >= i17
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i18 >= i17 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i11 = lengthof r1
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i11 = lengthof r1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i18 >= $i11
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i18 >= $i11 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r17 = r1[i18]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r17 = r1[i18] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19)]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19)] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $i12 = lengthof r2]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $i12 = lengthof r2] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i12 = lengthof r2
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i12 = lengthof r2 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i18 >= $i12
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i18 >= $i12 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r16 = r2[i18]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r16 = r2[i18] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21)]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21)] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i18 = i18 + 1]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i18 = i18 + 1] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i18 = i18 + 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : i18 = i18 + 1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= (branch)]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i5 = interfaceinvoke $r10.<java.util.List: int size()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i5 = interfaceinvoke $r10.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i6 = interfaceinvoke $r11.<java.util.List: int size()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i6 = interfaceinvoke $r11.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i23 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6)
org.apache.ambari.server.utils.VersionUtils.compareVersions : i23 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i24 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : i24 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i24 >= i23
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i24 >= i23 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i24)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i24) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r33 = (java.lang.Integer) $r12
org.apache.ambari.server.utils.VersionUtils.compareVersions : r33 = (java.lang.Integer) $r12 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i24)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i24) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r5 = (java.lang.Integer) $r13
org.apache.ambari.server.utils.VersionUtils.compareVersions : r5 = (java.lang.Integer) $r13 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i7 = virtualinvoke r33.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i7 = virtualinvoke r33.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i8 = virtualinvoke r5.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i8 = virtualinvoke r5.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i7 >= $i8
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i7 >= $i8 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i9 = virtualinvoke r33.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i9 = virtualinvoke r33.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = virtualinvoke r5.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = virtualinvoke r5.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i9 <= $i10
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i9 <= $i10 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : return 1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return $i0
org.apache.ambari.server.utils.VersionUtils.compareVersions : return $i0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : goto [?= (branch)]
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $i3 != i0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $i3 != i0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return -1
org.apache.ambari.server.utils.VersionUtils.compareVersions : return -1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Ambari server version ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Ambari server version ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" the configured ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" the configured ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ambari version ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ambari version ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for view ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for view ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r17 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r17 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r19 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR>
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r19 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r19, r6)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r19, r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r20 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r20 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>(r6)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i24 = i24 + 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : i24 = i24 + 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 <= 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 <= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r21 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r21 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r3, $r21, i2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r3, $r21, i2) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 <= i15
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 <= i15 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i16 = i0
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i16 = i0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : return 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i19 = 0
