org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createServiceAdministrator(java.lang.String,java.lang.Long)>("serviceAdmin", $r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createServiceAdministrator(java.lang.String,java.lang.Long)>("serviceAdmin", $r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createServiceAdministratorGrantedAuthority(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createServiceAdministratorGrantedAuthority(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createServiceAdministratorPrivilegeEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createServiceAdministratorPrivilegeEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createServiceAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createServiceAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26]
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r25
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostVersionDAO;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostVersionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r26
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r26 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/RequestStatusResponse;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/RequestStatusResponse;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.controller.RequestStatusResponse) $r27
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.controller.RequestStatusResponse) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r28
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r28 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lcom/google/inject/Injector;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lcom/google/inject/Injector;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r7 = (com.google.inject.Injector) $r29
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r7 = (com.google.inject.Injector) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.state.Clusters) $r30
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.state.Clusters) $r30 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.state.Cluster) $r31
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.state.Cluster) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.state.Service) $r32
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.state.Service) $r32 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r11 = (org.apache.ambari.server.state.ServiceComponent) $r33
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r11 = (org.apache.ambari.server.state.ServiceComponent) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponentHost;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponentHost;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r12 = (org.apache.ambari.server.state.ServiceComponentHost) $r34
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r12 = (org.apache.ambari.server.state.ServiceComponentHost) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/internal/RequestStageContainer;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/internal/RequestStageContainer;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r13 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r35
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r13 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/MaintenanceStateHelper;")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/MaintenanceStateHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r14 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r36
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : r14 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r36 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r37 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r37 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r37.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r37.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r39 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r39 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r39.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r39.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r40 = new org.apache.ambari.server.controller.ServiceComponentHostResponse
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r40 = new org.apache.ambari.server.controller.ServiceComponentHostResponse >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r40.<org.apache.ambari.server.controller.ServiceComponentHostResponse: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.HostComponentAdminState)>("Cluster102", "Service100", "Component100", "Component 100", "Host100", "Host100", "INSTALLED", "", "", "", "", null)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r40.<org.apache.ambari.server.controller.ServiceComponentHostResponse: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.HostComponentAdminState)>("Cluster102", "Service100", "Component100", "Component 100", "Host100", "Host100", "INSTALLED", "", "", "", "", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r39.<java.util.Set: boolean add(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r39.<java.util.Set: boolean add(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String clusterName>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r1 == null
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r8 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String clusterName>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r8 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i3 = virtualinvoke $r8.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i3 = virtualinvoke $r8.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= $i0 = 71 * $i3]
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= $i0 = 71 * $i3] >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i0 = 71 * $i3
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i0 = 71 * $i3 >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r2 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String serviceName>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r2 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r2 == null
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r7 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String serviceName>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r7 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i5 = virtualinvoke $r7.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i5 = virtualinvoke $r7.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= i6 = $i0 + $i5]
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= i6 = $i0 + $i5] >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : i6 = $i0 + $i5
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : i6 = $i0 + $i5 >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i1 = 71 * i6
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i1 = 71 * i6 >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r3 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String componentName>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r3 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r3 == null
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r6 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String componentName>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r6 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i7 = virtualinvoke $r6.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i7 = virtualinvoke $r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= i8 = $i1 + $i7]
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= i8 = $i1 + $i7] >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : i8 = $i1 + $i7
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : i8 = $i1 + $i7 >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i2 = 71 * i8
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i2 = 71 * i8 >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r4 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String hostname>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r4 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String hostname> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r4 == null
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : if $r4 == null >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r5 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String hostname>
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $r5 = r0.<org.apache.ambari.server.controller.ServiceComponentHostResponse: java.lang.String hostname> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i9 = virtualinvoke $r5.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : $i9 = virtualinvoke $r5.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= i10 = $i2 + $i9]
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : goto [?= i10 = $i2 + $i9] >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : i10 = $i2 + $i9
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : i10 = $i2 + $i9 >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : return i10
org.apache.ambari.server.controller.ServiceComponentHostResponse.hashCode : return i10 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r41 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r41 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r45 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String findServiceName(org.apache.ambari.server.state.Cluster,java.lang.String)>(r9, "Component100")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r45 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String findServiceName(org.apache.ambari.server.state.Cluster,java.lang.String)>(r9, "Component100") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service100")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service100") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r49 = interfaceinvoke r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster102")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r49 = interfaceinvoke r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster102") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r51 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r51 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r56 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r55)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r56 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r58 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service100")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r58 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service100") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r60 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r60 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r62 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component100")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r62 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component100") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r66 = interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r66 = interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r70 = interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r70 = interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component100")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component100") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r74 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r74 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r76 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r76 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r79 = virtualinvoke r5.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r79 = virtualinvoke r5.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r81 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("response msg")
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r81 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("response msg") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $l1 = virtualinvoke r5.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $l1 = virtualinvoke r5.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r83 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r83 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r85 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r85 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r85)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r85) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r87 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r87 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $z1 = virtualinvoke r14.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.ServiceComponentHost)>($r87, r12)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $z1 = virtualinvoke r14.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.ServiceComponentHost)>($r87, r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r88 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r88 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r91 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r90)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r91 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r93 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r93 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r94 = (java.util.Set) $r93
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r94 = (java.util.Set) $r93 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r95 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r94)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r95 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r94) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r99 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r99 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r99.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r99.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r100 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r100 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r100.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : specialinvoke $r100.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r100.<java.util.List: boolean add(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r100.<java.util.List: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r101 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r101 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r102 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r101, $r100)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r102 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r101, $r100) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r99.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component100", $r102)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r99.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component100", $r102) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r104 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r104 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r105 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(null, r9, $r37, null, null, null, $r99, $r104, 0, 0)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r105 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(null, r9, $r37, null, null, null, $r99, $r104, 0, 0) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r106 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r105)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r106 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r105) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r107 = interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r107 = interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r107.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r107.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : virtualinvoke r13.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : virtualinvoke r13.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r109 = virtualinvoke r13.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r109 = virtualinvoke r13.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r111 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r111 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest.testUpdateResources : $r113 = new org.apache.ambari.server.controller.internal.HostComponentResourceProviderTest$TestHostComponentResourceProvider
