org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r3 = new org.apache.ambari.server.state.kerberos.KerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: java.util.Map parseJSON(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: java.util.Map parseJSON(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if $r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r4 = new java.util.TreeSet
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r4 = new java.util.TreeSet >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : specialinvoke $r4.<java.util.TreeSet: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : specialinvoke $r4.<java.util.TreeSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> = $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> = $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = null
org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (java.util.Map$Entry) $r10
org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r11)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r2)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : if r0 != null
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r1 = <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.util.Map NAME_TO_CLASS>
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r1 = <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.util.Map NAME_TO_CLASS> >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r3 = (java.lang.Class) $r2
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r3 = (java.lang.Class) $r2 >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : return $r3
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : return $r3 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r3 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r3 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = newarray (java.lang.Class)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12[0] = class "Ljava/util/Map;"
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12[0] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r31 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r12)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r31 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r12) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r31 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r31 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r14)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r14) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = $r15
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = $r15 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if r0 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("contains")
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("contains") >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $r27 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $r27 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r2 = (java.util.Collection) $r27
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r2 = (java.util.Collection) $r27 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $i0 != 2
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z1 = r4 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z1 = r4 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z1 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z2 = r5 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z2 = r5 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z2 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.ContainsPredicate
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.ContainsPredicate >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r24 = (java.lang.String) r4
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r24 = (java.lang.String) r4 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r25 = (java.lang.String) r5
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r25 = (java.lang.String) r5 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25)
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : return $r22
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : return $r22 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = (org.apache.ambari.server.collections.Predicate) $r16
org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = (org.apache.ambari.server.collections.Predicate) $r16 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)]
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r30]
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r30] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : return r30
org.apache.ambari.server.collections.PredicateUtils.fromMap : return r30 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setWhen : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setWhen : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> = $r6
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r3
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if $r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r4
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : return $r5
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : return $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r11 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r11 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : return 1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : return 1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z2 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : if $r1 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : if $r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r3 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getPath()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r3 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if r8 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if r8 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r4 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r4 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r5 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r5 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r5)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r5) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 47)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 47) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : r8 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getParent : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getPath : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = $r3
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : return $r2
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPath : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if $r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r5 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r4
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r5 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : return $r5
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : return $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r3 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r3 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getReference : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if $r3 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if $r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r12)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r12 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r12 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z0 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("../")
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z0 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("../") >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r16 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r16 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r17 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r17 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r18 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r18 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $i0 = lengthof r16
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $i0 = lengthof r16 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : tableswitch($i0) {     case 1:
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : tableswitch($i0) {     case 1: >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r19 = r16[1]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r19 = r16[1] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r19 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r19 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getRoot()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getRoot()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : if $r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : if $r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : r2 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : goto [?= $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : goto [?= $r1 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : return r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getRoot : return r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r20 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r20 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r17 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if r17 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $r1 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $r1 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r21 = virtualinvoke r20.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>($r1, r19)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r21 = virtualinvoke r20.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>($r1, r19) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type SERVICE>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type SERVICE> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : if $r3 != r1
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : if $r3 != r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r4 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : $r4 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getDescriptor(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r3 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : if $r3 != r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : if $r3 != r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>(r2)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : r8 = r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : goto [?= return r8]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : goto [?= return r8] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : return r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentity : return r8 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : return $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getDescriptor : return $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : return $r4
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getDescriptor : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z2 = r21 instanceof org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : $z2 = r21 instanceof org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z2 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) r21
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : r13 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) r21 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : return r13
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getReferencedIdentityDescriptor : return r13 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r19 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r19 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r19)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor dereferenceIdentity(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r19) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getReferencedIdentityDescriptor(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r5 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r5 = new org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : $r3 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : $r3 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : specialinvoke $r3.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : specialinvoke $r3.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r2)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r3 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r14 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_PRINCIPAL>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r14 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_PRINCIPAL> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r13 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r13 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r15 = virtualinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r15 = virtualinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r2 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r2 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", $r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", $r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String translate(org.apache.ambari.server.state.kerberos.KerberosPrincipalType)>($r5)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String translate(org.apache.ambari.server.state.kerberos.KerberosPrincipalType)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : if r0 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : if r0 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String name()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r6)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", $r8)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("local_username", $r10)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("local_username", $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r4 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r10 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_KEYTAB>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r10 = <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String KEY_KEYTAB> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r11 = virtualinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r11 = virtualinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r4 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r4 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r4.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r4.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r15 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r15 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("file", r15)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("file", r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r16 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r16 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r16 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r17 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r17 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r17 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z0 != 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r7 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $r7 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r7.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : specialinvoke $r7.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r18 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r18 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r18 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r18 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r19 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r19 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z1 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : $z1 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z1 != 0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : r20 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r20 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : if r20 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : return $r4
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.toMap : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r5 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : if $r5 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : return r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.toMap : return r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>($r6)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void <init>(java.util.Map)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = $r5
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : r18 = $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setPath(java.lang.String)>($r20)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setPath(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPath : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String path> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : return r18
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : return r18 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r18 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : if r18 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : virtualinvoke r18.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r5 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r5 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setName(java.lang.String)>($r5)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setName(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setReference(java.lang.String)>($r6)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setReference(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r7 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r7 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor)>($r7)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.update : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.update : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor)>($r8)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor)>($r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.update : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate getWhen()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : return $r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getWhen : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r4 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.update : if r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.dereferenceIdentity : goto [?= $r20 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>()]
