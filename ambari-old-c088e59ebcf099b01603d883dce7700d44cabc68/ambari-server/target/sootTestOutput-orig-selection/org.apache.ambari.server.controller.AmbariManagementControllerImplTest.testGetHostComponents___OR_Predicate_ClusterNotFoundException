org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r1 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r7 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r7 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing requests: {}", r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing requests: {}", r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r8 = new java.util.HashSet
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r4 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r9
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r4 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r10 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Set getHostComponents(org.apache.ambari.server.controller.ServiceComponentHostRequest)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r10 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Set getHostComponents(org.apache.ambari.server.controller.ServiceComponentHostRequest)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r12 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r12 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing request {}", r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing request {}", r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r13 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r13 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String clusterName>
org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : return $r1
org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r13 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r13 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z0 = virtualinvoke $r16.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z0 = virtualinvoke $r16.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r17 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r17 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r135 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r18)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r135 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r122 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r122 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r122.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cluster not found ", $r121)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r122.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cluster not found ", $r121) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r123 = new org.apache.ambari.server.ParentObjectNotFoundException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r123 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r123.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", $r121)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r123.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", $r121) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : throw $r123
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : throw $r123 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : z4 = 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : z4 = 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $i1 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $i1 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $i1 <= 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r14 = class "Lorg/apache/ambari/server/HostNotFoundException;"
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r14 = class "Lorg/apache/ambari/server/HostNotFoundException;" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r15 = virtualinvoke $r13.<org.apache.ambari.server.ParentObjectNotFoundException: java.lang.Throwable getCause()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r15 = virtualinvoke $r13.<org.apache.ambari.server.ParentObjectNotFoundException: java.lang.Throwable getCause()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z2 = virtualinvoke $r14.<java.lang.Class: boolean isInstance(java.lang.Object)>($r15)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z2 = virtualinvoke $r14.<java.lang.Class: boolean isInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z2 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : throw $r13
