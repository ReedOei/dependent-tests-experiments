org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory: java.util.Map parseJSON(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse JSON-formatted string", $r9)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse JSON-formatted string", $r9) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : throw $r10
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : throw $r10 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r6 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r6 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("An error occurred processing the JSON-formatted string", $r5)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("An error occurred processing the JSON-formatted string", $r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : throw $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : throw $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor[] createInstances(java.util.Map)>($r3)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor[] createInstances(java.util.Map)>($r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("services")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("services") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r18 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r18 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing top-level \"services\" property in service-level Kerberos descriptor data")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing top-level \"services\" property in service-level Kerberos descriptor data") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : throw $r18
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : throw $r18 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory: java.util.Map parseFile(java.io.File)>(r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory: java.util.Map parseFile(java.io.File)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseFile : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseFile : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseFile : $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseFile : $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseFile : return $r13
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseFile : return $r13 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r8 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
