org.apache.ambari.server.agent.ActionQueue.enqueue : r3 = specialinvoke r0.<org.apache.ambari.server.agent.ActionQueue: java.util.Queue getHostQueue(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : r5 = specialinvoke r0.<org.apache.ambari.server.agent.ActionQueue: java.util.Queue getQueue(java.lang.String)>(r1)
org.apache.ambari.server.agent.ActionQueue.getHostQueue : r5 = specialinvoke r0.<org.apache.ambari.server.agent.ActionQueue: java.util.Queue getQueue(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getQueue : $r2 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.concurrent.ConcurrentMap hostQueues>
org.apache.ambari.server.agent.ActionQueue.getQueue : $r2 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.concurrent.ConcurrentMap hostQueues> >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getQueue : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.agent.ActionQueue.getQueue : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getQueue : $r4 = (java.util.Queue) $r3
org.apache.ambari.server.agent.ActionQueue.getQueue : $r4 = (java.util.Queue) $r3 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getQueue : return $r4
org.apache.ambari.server.agent.ActionQueue.getQueue : return $r4 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : if r5 != null
org.apache.ambari.server.agent.ActionQueue.getHostQueue : if r5 != null >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : $r3 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.concurrent.ConcurrentMap hostQueues>
org.apache.ambari.server.agent.ActionQueue.getHostQueue : $r3 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.concurrent.ConcurrentMap hostQueues> >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : $r2 = new java.util.concurrent.ConcurrentLinkedQueue
org.apache.ambari.server.agent.ActionQueue.getHostQueue : $r2 = new java.util.concurrent.ConcurrentLinkedQueue >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : specialinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>()
org.apache.ambari.server.agent.ActionQueue.getHostQueue : specialinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, $r2)
org.apache.ambari.server.agent.ActionQueue.getHostQueue : $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, $r2) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : r5 = (java.util.Queue) $r4
org.apache.ambari.server.agent.ActionQueue.getHostQueue : r5 = (java.util.Queue) $r4 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.getHostQueue : return r5
org.apache.ambari.server.agent.ActionQueue.getHostQueue : return r5 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.enqueue : interfaceinvoke r3.<java.util.Queue: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.agent.ActionQueue.enqueue : interfaceinvoke r3.<java.util.Queue: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.size : r2 = specialinvoke r0.<org.apache.ambari.server.agent.ActionQueue: java.util.Queue getQueue(java.lang.String)>(r1)
org.apache.ambari.server.agent.ActionQueue.size : r2 = specialinvoke r0.<org.apache.ambari.server.agent.ActionQueue: java.util.Queue getQueue(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.size : if r2 != null
org.apache.ambari.server.agent.ActionQueue.size : if r2 != null >>>>>>>> org.apache.ambari.server.agent.ActionQueue.size : $i0 = interfaceinvoke r2.<java.util.Queue: int size()>()
org.apache.ambari.server.agent.ActionQueue.size : $i0 = interfaceinvoke r2.<java.util.Queue: int size()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.size : return $i0
org.apache.ambari.server.agent.ActionQueue.size : return $i0 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : if null == r1
org.apache.ambari.server.agent.ActionQueue.dequeue : if null == r1 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : if null != r2
org.apache.ambari.server.agent.ActionQueue.dequeue : if null != r2 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : r3 = specialinvoke r0.<org.apache.ambari.server.agent.ActionQueue: java.util.Queue getQueue(java.lang.String)>(r1)
org.apache.ambari.server.agent.ActionQueue.dequeue : r3 = specialinvoke r0.<org.apache.ambari.server.agent.ActionQueue: java.util.Queue getQueue(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : if null != r3
org.apache.ambari.server.agent.ActionQueue.dequeue : if null != r3 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : $r8 = new java.util.ArrayList
org.apache.ambari.server.agent.ActionQueue.dequeue : $r8 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : $i0 = interfaceinvoke r3.<java.util.Queue: int size()>()
org.apache.ambari.server.agent.ActionQueue.dequeue : $i0 = interfaceinvoke r3.<java.util.Queue: int size()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.ambari.server.agent.ActionQueue.dequeue : specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : r5 = interfaceinvoke r3.<java.util.Queue: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.ActionQueue.dequeue : r5 = interfaceinvoke r3.<java.util.Queue: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.ActionQueue.dequeue : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : if $z0 == 0
org.apache.ambari.server.agent.ActionQueue.dequeue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.ActionQueue.dequeue : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : r6 = (org.apache.ambari.server.agent.AgentCommand) $r9
org.apache.ambari.server.agent.ActionQueue.dequeue : r6 = (org.apache.ambari.server.agent.AgentCommand) $r9 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : $r10 = virtualinvoke r6.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType getCommandType()>()
org.apache.ambari.server.agent.ActionQueue.dequeue : $r10 = virtualinvoke r6.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType getCommandType()>() >>>>>>>> org.apache.ambari.server.agent.AgentCommand.getCommandType : $r1 = r0.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType commandType>
org.apache.ambari.server.agent.AgentCommand.getCommandType : $r1 = r0.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType commandType> >>>>>>>> org.apache.ambari.server.agent.AgentCommand.getCommandType : return $r1
org.apache.ambari.server.agent.AgentCommand.getCommandType : return $r1 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : if $r10 != r2
org.apache.ambari.server.agent.ActionQueue.dequeue : if $r10 != r2 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.ActionQueue.dequeue : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.AlertDefinitionCommand.getCommandType : $r1 = <org.apache.ambari.server.agent.AgentCommand$AgentCommandType: org.apache.ambari.server.agent.AgentCommand$AgentCommandType ALERT_DEFINITION_COMMAND>
org.apache.ambari.server.agent.AlertDefinitionCommand.getCommandType : $r1 = <org.apache.ambari.server.agent.AgentCommand$AgentCommandType: org.apache.ambari.server.agent.AgentCommand$AgentCommandType ALERT_DEFINITION_COMMAND> >>>>>>>> org.apache.ambari.server.agent.AlertDefinitionCommand.getCommandType : return $r1
org.apache.ambari.server.agent.AlertDefinitionCommand.getCommandType : return $r1 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.agent.ActionQueue.dequeue : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : interfaceinvoke r5.<java.util.Iterator: void remove()>()
org.apache.ambari.server.agent.ActionQueue.dequeue : interfaceinvoke r5.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.dequeue : return $r8
