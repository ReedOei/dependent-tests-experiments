org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : i1 = 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : i1 = 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : if i1 >= i0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : if i1 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user-")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user-") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r7 = newarray (java.lang.String)[2]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r7 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hdfs")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hdfs") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r7[0] = $r11
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r7[0] = $r11 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r7[1] = $r15
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r7[1] = $r15 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r16)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r16) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : i1 = i1 + 1
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : goto [?= (branch)]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : return $r2
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockPayload : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r2 = virtualinvoke $r1.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r2 = virtualinvoke $r1.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r3 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r2)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r3 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r4 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand EXECUTE>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r4 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand EXECUTE> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r5 = interfaceinvoke $r3.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r5 = interfaceinvoke $r3.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r7 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r7 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r8 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r8 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("unit-test-cluster")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("unit-test-cluster") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r12 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r12 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r15 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r15 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r16 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r15)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r16 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r18 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r18 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r21 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r21 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r22 = virtualinvoke $r21.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r22 = virtualinvoke $r21.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.Role.toString : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name>
org.apache.ambari.server.Role.toString : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name> >>>>>>>> org.apache.ambari.server.Role.toString : return $r1
org.apache.ambari.server.Role.toString : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r23 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r23 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r25 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r25 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r26 = virtualinvoke $r25.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r26 = virtualinvoke $r25.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("custom-hook-script")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("custom-hook-script") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r30 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r30 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $l1 = virtualinvoke $r30.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $l1 = virtualinvoke $r30.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r32 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r31)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r32 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r34 = interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r33)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : $r34 = interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerActionTest.mockExecutionCommand : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(i0) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookParams.param : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param>
org.apache.ambari.server.hooks.users.UserHookParams.param : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookParams.param : return $r1
org.apache.ambari.server.hooks.users.UserHookParams.param : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r4 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r4 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Executing custom script server action; Context: {}", r1)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Executing custom script server action; Context: {}", r1) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: java.util.Map getCommandParameters()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: java.util.Map getCommandParameters()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r2 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = virtualinvoke $r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r3
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: void validateCommandParams(java.util.Map)>(r23)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: void validateCommandParams(java.util.Map)>(r23) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r2 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r2 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Validating command parameters ...")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Validating command parameters ...") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r3 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams PAYLOAD>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r3 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams PAYLOAD> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r4 = virtualinvoke $r3.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r4 = virtualinvoke $r3.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z0 != 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r5 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams SCRIPT>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r5 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams SCRIPT> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r6 = virtualinvoke $r5.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r6 = virtualinvoke $r5.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z1 != 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r7 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r7 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r8 = virtualinvoke $r7.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r8 = virtualinvoke $r7.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z2 != 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r9 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_SECURITY_TYPE>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r9 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_SECURITY_TYPE> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r10 = virtualinvoke $r9.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r10 = virtualinvoke $r9.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r10)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z3 != 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z3 != 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r11 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_USER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r11 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_USER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r12 = virtualinvoke $r11.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r12 = virtualinvoke $r11.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z4 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r12)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $z4 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z4 != 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : if $z4 != 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r13 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : $r13 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>("Command parameter validation passed.")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.validateCommandParams : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>("Command parameter validation passed.") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r6 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.apache.ambari.server.serveraction.users.CollectionPersisterServiceFactory collectionPersisterServiceFactory>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r6 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.apache.ambari.server.serveraction.users.CollectionPersisterServiceFactory collectionPersisterServiceFactory> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r5 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r5 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r7 = virtualinvoke $r5.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r7 = virtualinvoke $r5.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r8 = interfaceinvoke r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r8 = interfaceinvoke r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r9 = (java.lang.String) $r8
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r2 = interfaceinvoke $r6.<org.apache.ambari.server.serveraction.users.CollectionPersisterServiceFactory: org.apache.ambari.server.serveraction.users.CsvFilePersisterService createCsvFilePersisterService(java.lang.String)>($r9)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r2 = interfaceinvoke $r6.<org.apache.ambari.server.serveraction.users.CollectionPersisterServiceFactory: org.apache.ambari.server.serveraction.users.CsvFilePersisterService createCsvFilePersisterService(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r10 = specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: java.util.Map getPayload(java.util.Map)>(r23)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r10 = specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: java.util.Map getPayload(java.util.Map)>(r23) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r4 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.codehaus.jackson.map.ObjectMapper objectMapper>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r4 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.codehaus.jackson.map.ObjectMapper objectMapper> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r3 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams PAYLOAD>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r3 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams PAYLOAD> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r5 = virtualinvoke $r3.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r5 = virtualinvoke $r3.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r7 = (java.lang.String) $r6
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r8 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>($r7, class "Ljava/util/Map;")
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : $r8 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>($r7, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : r2 = (java.util.Map) $r8
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : r2 = (java.util.Map) $r8 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : return r2
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.getPayload : return r2 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : interfaceinvoke r2.<org.apache.ambari.server.serveraction.users.CollectionPersisterService: boolean persistMap(java.util.Map)>($r10)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : interfaceinvoke r2.<org.apache.ambari.server.serveraction.users.CollectionPersisterService: boolean persistMap(java.util.Map)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r3 = specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: java.lang.String[] assembleCommand(java.util.Map)>(r23)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r3 = specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: java.lang.String[] assembleCommand(java.util.Map)>(r23) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3 = newarray (java.lang.String)[6]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3 = newarray (java.lang.String)[6] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r4 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams SCRIPT>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r4 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams SCRIPT> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r5 = virtualinvoke $r4.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r5 = virtualinvoke $r4.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r7 = (java.lang.String) $r6
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[0] = $r7
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[0] = $r7 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r8 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r8 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r9 = virtualinvoke $r8.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r9 = virtualinvoke $r8.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r11 = (java.lang.String) $r10
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[1] = $r11
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[1] = $r11 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r12 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_SECURITY_TYPE>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r12 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_SECURITY_TYPE> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r13 = virtualinvoke $r12.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r13 = virtualinvoke $r12.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r15 = (java.lang.String) $r14
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[2] = $r15
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[2] = $r15 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r16 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_PRINCIPAL>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r16 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_PRINCIPAL> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r17 = virtualinvoke $r16.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r17 = virtualinvoke $r16.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r19 = (java.lang.String) $r18
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[3] = $r19
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[3] = $r19 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r20 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_KEYTAB>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r20 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_KEYTAB> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r21 = virtualinvoke $r20.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r21 = virtualinvoke $r20.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r22 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r22 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r23 = (java.lang.String) $r22
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[4] = $r23
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[4] = $r23 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r24 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_USER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r24 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_USER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r25 = virtualinvoke $r24.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r25 = virtualinvoke $r24.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r26 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r26 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r27 = (java.lang.String) $r26
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[5] = $r27
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r3[5] = $r27 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r28 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : $r28 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Server action command to be executed: {}", $r3)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Server action command to be executed: {}", $r3) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : return $r3
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.assembleCommand : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r11 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper shellCommandUtilityWrapper>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r11 = r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper shellCommandUtilityWrapper> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r24 = virtualinvoke $r11.<org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>(r3)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r24 = virtualinvoke $r11.<org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: void logCommandResult(java.lang.String,org.apache.ambari.server.utils.ShellCommandUtil$Result)>($r13, r24)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: void logCommandResult(java.lang.String,org.apache.ambari.server.utils.ShellCommandUtil$Result)>($r13, r24) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r6 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r6 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : $i0 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int exitCode>
org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : $i0 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int exitCode> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : if $i0 != 0
org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : if $i0 != 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : $z0 = 1
org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : $z0 = 1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : goto [?= return $z0]
org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : return $z0
org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z0 == 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r16 = "succeeded"
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r16 = "succeeded" >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Execution of command [ {} ] - {}", r1, $r16)]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Execution of command [ {} ] - {}", r1, $r16)] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Execution of command [ {} ] - {}", r1, $r16)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Execution of command [ {} ] - {}", r1, $r16) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z1 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z1 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z1 == 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r17 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r17 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.getStdout : $r1 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String stdout>
org.apache.ambari.server.utils.ShellCommandUtil$Result.getStdout : $r1 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String stdout> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.getStdout : return $r1
org.apache.ambari.server.utils.ShellCommandUtil$Result.getStdout : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= r18 = $r17]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= r18 = $r17] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r18 = $r17
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r18 = $r17 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $r17 != null
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $r17 != null >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r18 = ""
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r18 = "" >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r8 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(7900)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r8 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(7900) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r3 = virtualinvoke $r8.<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>(r18)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r3 = virtualinvoke $r8.<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>(r18) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r9 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r9 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z2 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z2 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z2 == 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r19 = "stdout"
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r19 = "stdout" >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("BEGIN - {} for command {}", $r19, r1)]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("BEGIN - {} for command {}", $r19, r1)] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("BEGIN - {} for command {}", $r19, r1)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("BEGIN - {} for command {}", $r19, r1) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z4 == 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r5 = (java.lang.String) $r13
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : r5 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r14 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r14 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("command output *** : {}", r5)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("command output *** : {}", r5) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r11 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r11 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z3 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $z3 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z3 == 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : if $z3 == 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r20 = "stdout"
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : $r20 = "stdout" >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("END - {} for command {}", $r20, r1)]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : goto [?= interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("END - {} for command {}", $r20, r1)] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("END - {} for command {}", $r20, r1)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.logCommandResult : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("END - {} for command {}", $r20, r1) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $i0 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $i0 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.getExitCode : $i0 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int exitCode>
org.apache.ambari.server.utils.ShellCommandUtil$Result.getExitCode : $i0 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int exitCode> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.getExitCode : return $i0
org.apache.ambari.server.utils.ShellCommandUtil$Result.getExitCode : return $i0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $z0 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $z0 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : if $z0 == 0
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r25 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r25 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : goto [?= $r14 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : goto [?= $r14 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r14 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r14 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r15 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r15 = virtualinvoke r24.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.getStderr : $r1 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String stderr>
org.apache.ambari.server.utils.ShellCommandUtil$Result.getStderr : $r1 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String stderr> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil$Result.getStderr : return $r1
org.apache.ambari.server.utils.ShellCommandUtil$Result.getStderr : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>($i0, $r25, "{}", $r14, $r15)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>($i0, $r25, "{}", $r14, $r15) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r6 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r6 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r6 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r6 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r29 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r29 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r30 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r30 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = new org.apache.ambari.server.agent.CommandReport
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = new org.apache.ambari.server.agent.CommandReport >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void <init>()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = $r8
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = $r8 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder
org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : return $r4
org.apache.ambari.server.utils.StageUtils.getActionId : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r11)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1
org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r13)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r15)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r15) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1
org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r17)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1
org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r30 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r30 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = virtualinvoke r30.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = virtualinvoke r30.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1
org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1
org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0
org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1
org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = ""
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = "" >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1
org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = ""
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = "" >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1
org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1
org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0
org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27 >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r16 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER>
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : $r16 = <org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Command report: {}", r26)
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Command report: {}", r26) >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : goto [?= return r26]
org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : goto [?= return r26] >>>>>>>> org.apache.ambari.server.serveraction.users.PostUserCreationHookServerAction.execute : return r26
