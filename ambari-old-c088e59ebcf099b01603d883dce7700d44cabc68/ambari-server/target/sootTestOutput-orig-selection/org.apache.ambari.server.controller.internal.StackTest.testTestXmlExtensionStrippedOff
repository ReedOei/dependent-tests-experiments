org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r72 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;")
org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;")
org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15)
org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23)
org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r23 = null
org.apache.ambari.server.state.stack.OsFamily.init : r23 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r14
org.apache.ambari.server.state.stack.OsFamily.init : throw $r14 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20
org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17)
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r22
org.apache.ambari.server.state.stack.OsFamily.init : throw $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r15
org.apache.ambari.server.state.stack.OsFamily.init : throw $r15 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71 >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDispatchDAO;")
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDispatchDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r4 = staticinvoke <org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest: org.apache.ambari.server.orm.dao.AlertDispatchDAO access$100(org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest)>($r3)
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r4 = staticinvoke <org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest: org.apache.ambari.server.orm.dao.AlertDispatchDAO access$100(org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest: org.apache.ambari.server.orm.dao.AlertDispatchDAO m_dao>
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest: org.apache.ambari.server.orm.dao.AlertDispatchDAO m_dao> >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest.access$100 : return $r1
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/ActionMetadata;")
org.apache.ambari.server.controller.internal.AlertTargetResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/ActionMetadata;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Clusters) $r4
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Clusters) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r5
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r6 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r6 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r10 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertsDAO;")
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r10 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertsDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r12 = staticinvoke <org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest: org.apache.ambari.server.orm.dao.AlertsDAO access$100(org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest)>($r11)
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r12 = staticinvoke <org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest: org.apache.ambari.server.orm.dao.AlertsDAO access$100(org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest: org.apache.ambari.server.orm.dao.AlertsDAO m_dao>
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest: org.apache.ambari.server.orm.dao.AlertsDAO m_dao> >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest.access$100 : return $r1
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r13 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r13 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/ActionMetadata;")
org.apache.ambari.server.controller.internal.AlertHistoryResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/metadata/ActionMetadata;") >>>>>>>> org.apache.ambari.server.controller.internal.StackAdvisorResourceProviderTest.createRecommendationResourceProvider : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.StackAdvisorResourceProviderTest.createRecommendationResourceProvider : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.StackAdvisorResourceProviderTest.createRecommendationResourceProvider : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r2
org.apache.ambari.server.controller.internal.StackAdvisorResourceProviderTest.createRecommendationResourceProvider : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r2 >>>>>>>> org.apache.ambari.server.controller.internal.StackAdvisorResourceProviderTest.createRecommendationResourceProvider : $r3 = new org.apache.ambari.server.controller.internal.RecommendationResourceProvider
org.apache.ambari.server.controller.internal.StackAdvisorResourceProviderTest.createRecommendationResourceProvider : $r3 = new org.apache.ambari.server.controller.internal.RecommendationResourceProvider >>>>>>>> org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1
org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1
org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceRequest.setServiceName : r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> = r1
org.apache.ambari.server.controller.StackServiceRequest.setServiceName : r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r10 = new java.util.HashSet
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r10 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r10.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r10.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r14 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r14 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r11 = new org.apache.ambari.server.controller.StackServiceComponentRequest
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r11 = new org.apache.ambari.server.controller.StackServiceComponentRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r13 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r13 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r12 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r12 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r11.<org.apache.ambari.server.controller.StackServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, $r12, r1, null)
org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r11.<org.apache.ambari.server.controller.StackServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, $r12, r1, null) >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.setComponentName : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName> = r1
org.apache.ambari.server.controller.StackServiceComponentRequest.setComponentName : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.setRecoveryEnabled : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String recoveryEnabled> = r1
org.apache.ambari.server.controller.StackServiceComponentRequest.setRecoveryEnabled : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String recoveryEnabled> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r15 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r15 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r3 = interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackComponents(java.util.Set)>($r15)
org.apache.ambari.server.controller.internal.Stack.parseComponents : r3 = interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackComponents(java.util.Set)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r5 = (org.apache.ambari.server.controller.StackServiceComponentResponse) $r18
org.apache.ambari.server.controller.internal.Stack.parseComponents : r5 = (org.apache.ambari.server.controller.StackServiceComponentResponse) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r6 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r6 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r19 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map componentService>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r19 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map componentService> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r1)
org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r7 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getCardinality()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r7 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getCardinality()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if r7 == null
org.apache.ambari.server.controller.internal.Stack.parseComponents : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r8 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r8 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if r8 == null
org.apache.ambari.server.controller.internal.Stack.parseComponents : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r21 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r21 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r24 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r24 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r23 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r23 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r9 = virtualinvoke $r22.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.List getComponentDependencies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r24, $r23, r1, r6)
org.apache.ambari.server.controller.internal.Stack.parseComponents : r9 = virtualinvoke $r22.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.List getComponentDependencies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r24, $r23, r1, r6) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if r9 == null
org.apache.ambari.server.controller.internal.Stack.parseComponents : if r9 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $z3 = interfaceinvoke r9.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $z3 = interfaceinvoke r9.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z3 != 0
org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $z4 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: boolean isMaster()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $z4 = virtualinvoke r5.<org.apache.ambari.server.controller.StackServiceComponentResponse: boolean isMaster()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z4 == 0
org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.parseComponents : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r16 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceComponents>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r16 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceComponents> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes>
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r3 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r3 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Set getExcludedConfigTypes()>()
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Set getExcludedConfigTypes()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4)
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r8 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r9 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r10 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r10 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r8)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r8) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r12 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r12 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r9)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r9) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r17 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r17 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r14 = new org.apache.ambari.server.controller.StackConfigurationRequest
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r14 = new org.apache.ambari.server.controller.StackConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r16 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r16 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r15 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r15 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r14.<org.apache.ambari.server.controller.StackConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, $r15, r2, null)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r14.<org.apache.ambari.server.controller.StackConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, $r15, r2, null) >>>>>>>> org.apache.ambari.server.controller.StackConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackConfigurationRequest: java.lang.String propertyName> = r1
org.apache.ambari.server.controller.StackConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackConfigurationRequest: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r18 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r14)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r18 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r5 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackConfigurations(java.util.Set)>($r18)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r5 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackConfigurations(java.util.Set)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r22 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r22 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r19 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r19 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r21 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r21 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r20 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r20 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r19.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r21, $r20, null)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r19.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r21, $r20, null) >>>>>>>> org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1
org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r23 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r23 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r6 = interfaceinvoke $r22.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r23)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r6 = interfaceinvoke $r22.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>(r6)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r41 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r41 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z1 == 0
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r28 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r28 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r42 = (org.apache.ambari.server.controller.StackConfigurationResponse) $r28
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r42 = (org.apache.ambari.server.controller.StackConfigurationResponse) $r28 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r29 = new org.apache.ambari.server.controller.internal.Stack$ConfigProperty
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r29 = new org.apache.ambari.server.controller.internal.Stack$ConfigProperty >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r29.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: void <init>(org.apache.ambari.server.controller.StackConfigurationResponse)>(r42)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r29.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: void <init>(org.apache.ambari.server.controller.StackConfigurationResponse)>(r42) >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml")
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml") >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i1 = $i0 - 4
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i1 = $i0 - 4 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1)
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r7 = virtualinvoke $r29.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r7 = virtualinvoke $r29.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String type>
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String type> >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : return $r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r30 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r30 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r44 = (java.util.Map) $r30
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r44 = (java.util.Map) $r30 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r44 != null
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r44 != null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r39 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r39 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r39.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r39.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r44 = $r39
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r44 = $r39 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r39)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r39) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r31 = virtualinvoke r42.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r31 = virtualinvoke r42.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r29)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r29) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r33 = virtualinvoke r42.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.Boolean isRequired()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r33 = virtualinvoke r42.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.Boolean isRequired()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z4 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z4 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z4 == 0
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r34 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r34 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r45 = (java.util.Map) $r34
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r45 = (java.util.Map) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r45 != null
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r45 != null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r37 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r37 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r37.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r37.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r45 = $r37
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r45 = $r37 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r37)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r37) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r35 = virtualinvoke r42.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r35 = virtualinvoke r42.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, $r29)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, $r29) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : goto [?= $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : goto [?= $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r24 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Map getConfigTypes()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r24 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Map getConfigTypes()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r46 = interfaceinvoke $r24.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r46 = interfaceinvoke $r24.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r47 = interfaceinvoke r46.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r47 = interfaceinvoke r46.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z2 == 0
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dbDependencyInfo>
org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dbDependencyInfo> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MYSQL_SERVER", "global/hive_database")
org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MYSQL_SERVER", "global/hive_database") >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r9 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r9 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r6 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r6 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r7 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r7 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : specialinvoke $r6.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r8, $r7, null)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : specialinvoke $r6.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r8, $r7, null) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r1 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r10)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r1 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r14 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r14 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r14.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r14.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r15 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r5 = (java.lang.String) $r17
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r5 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getConfigurationTypes(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getConfigurationTypes(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r4 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r4 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r6 = (java.util.Map) $r5
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r6 = (java.util.Map) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r7)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Set getExcludedConfigurationTypes(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Set getExcludedConfigurationTypes(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes>
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r3 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes>
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r3 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r5 = (java.util.Set) $r4
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r5 = (java.util.Set) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : goto [?= return $r5]
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : return $r5
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : return $r5 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : interfaceinvoke $r3.<java.util.Set: boolean removeAll(java.util.Collection)>($r8)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : interfaceinvoke $r3.<java.util.Set: boolean removeAll(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : return $r3
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : return $r3 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r7 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r7 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z1 == 0
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r8 = (java.lang.String) $r18
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r8 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r19 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r19 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r34 = (java.util.Map) $r19
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r34 = (java.util.Map) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if r34 != null
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if r34 != null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r32 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r32 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r32.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r32.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r34 = $r32
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r34 = $r32 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r32)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r32) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationProperties(java.lang.String,java.lang.String)>(r5, r8)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationProperties(java.lang.String,java.lang.String)>(r5, r8) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r10 = (java.util.Map) $r9
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r10 = (java.util.Map) $r9 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r4 = (java.util.Map) $r11
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r4 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if r4 == null
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r6 = (java.util.Map$Entry) $r13
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r6 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r16 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r15
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r16 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r17 = virtualinvoke $r16.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getValue()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r17 = virtualinvoke $r16.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String value>
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String value> >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : return $r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r17)
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r17) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : return $r7
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : return $r7 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke r34.<java.util.Map: void putAll(java.util.Map)>($r20)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke r34.<java.util.Map: void putAll(java.util.Map)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r9 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationAttributes(java.lang.String,java.lang.String)>(r5, r8)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r9 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationAttributes(java.lang.String,java.lang.String)>(r5, r8) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r13 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r13 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : specialinvoke $r13.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : specialinvoke $r13.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r14 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r14 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r16 = (java.util.Map) $r15
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r16 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r4 = (java.util.Map) $r17
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r4 = (java.util.Map) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r4 == null
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r18 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r18 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r5 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r5 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r6 = (java.util.Map$Entry) $r19
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r6 = (java.util.Map$Entry) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r20 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r20 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r7 = (java.lang.String) $r20
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r7 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r22 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r21
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r22 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r8 = virtualinvoke $r22.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map getAttributes()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r8 = virtualinvoke $r22.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map getAttributes()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map attributes>
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map attributes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : return $r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r8 == null
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r23 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r23 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r9 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r9 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z1 == 0
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : return $r13
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : return $r13 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z2 = interfaceinvoke r9.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z2 = interfaceinvoke r9.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z2 != 0
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r16 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r16 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r16.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r15, $r14)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r16.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r15, $r14) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : return $r16
org.apache.ambari.server.controller.internal.Stack.getConfiguration : return $r16 >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : return $r1
org.apache.ambari.server.topology.Configuration.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r6 = new java.util.HashSet
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r7 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r7 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r3 = (java.util.Map) $r8
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r3 = (java.util.Map) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if r3 == null
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r9 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r9 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r5 = (java.util.Map$Entry) $r10
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r5 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r12 = (java.util.Map) $r11
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r12 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : interfaceinvoke $r6.<java.util.Collection: boolean addAll(java.util.Collection)>($r13)
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : interfaceinvoke $r6.<java.util.Collection: boolean addAll(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : return $r6
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : return $r6 >>>>>>>> org.apache.ambari.server.controller.StackRequest.getStackName : $r1 = r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName>
org.apache.ambari.server.controller.StackRequest.getStackName : $r1 = r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.controller.StackRequest.getStackName : return $r1
org.apache.ambari.server.controller.StackRequest.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : $r1 = r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion>
org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : $r1 = r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : return $r1
org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceRequest.getServiceName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName>
org.apache.ambari.server.controller.StackServiceRequest.getServiceName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.controller.StackServiceRequest.getServiceName : return $r1
org.apache.ambari.server.controller.StackServiceRequest.getServiceName : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.getComponentName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName>
org.apache.ambari.server.controller.StackServiceComponentRequest.getComponentName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.getComponentName : return $r1
