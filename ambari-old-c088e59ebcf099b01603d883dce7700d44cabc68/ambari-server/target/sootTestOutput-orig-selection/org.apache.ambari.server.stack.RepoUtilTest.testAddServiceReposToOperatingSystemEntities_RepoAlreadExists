org.apache.ambari.server.stack.RepoUtilTest.repoEntity : $r4 = new org.apache.ambari.server.orm.entities.RepositoryEntity >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.repoEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void <init>()>()
org.apache.ambari.server.stack.RepoUtilTest.repoEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.repoEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.stack.RepoUtilTest.repoEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryEntity.setName : r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.RepositoryEntity.setName : r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.repoEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void setRepositoryId(java.lang.String)>(r1)
org.apache.ambari.server.stack.RepoUtilTest.repoEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void setRepositoryId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryEntity.setRepositoryId : r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String repositoryId> = r1
org.apache.ambari.server.orm.entities.RepositoryEntity.setRepositoryId : r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String repositoryId> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.repoEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void setBaseUrl(java.lang.String)>(r2)
org.apache.ambari.server.stack.RepoUtilTest.repoEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RepositoryEntity: void setBaseUrl(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryEntity.setBaseUrl : r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String baseUrl> = r1
org.apache.ambari.server.orm.entities.RepositoryEntity.setBaseUrl : r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String baseUrl> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.repoEntity : return $r4
org.apache.ambari.server.stack.RepoUtilTest.repoEntity : return $r4 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : $r5 = new org.apache.ambari.server.orm.entities.OperatingSystemEntity
org.apache.ambari.server.stack.RepoUtilTest.osEntity : $r5 = new org.apache.ambari.server.orm.entities.OperatingSystemEntity >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : specialinvoke $r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: void <init>()>()
org.apache.ambari.server.stack.RepoUtilTest.osEntity : specialinvoke $r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: void setOsType(java.lang.String)>(r0)
org.apache.ambari.server.stack.RepoUtilTest.osEntity : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: void setOsType(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.OperatingSystemEntity.setOsType : r0.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String osType> = r1
org.apache.ambari.server.orm.entities.OperatingSystemEntity.setOsType : r0.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String osType> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : i0 = lengthof r1
org.apache.ambari.server.stack.RepoUtilTest.osEntity : i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : i1 = 0
org.apache.ambari.server.stack.RepoUtilTest.osEntity : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : if i1 >= i0
org.apache.ambari.server.stack.RepoUtilTest.osEntity : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : r4 = r1[i1]
org.apache.ambari.server.stack.RepoUtilTest.osEntity : r4 = r1[i1] >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>()
org.apache.ambari.server.stack.RepoUtilTest.osEntity : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.orm.entities.OperatingSystemEntity.getRepositories : $r1 = r0.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List repositories>
org.apache.ambari.server.orm.entities.OperatingSystemEntity.getRepositories : $r1 = r0.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List repositories> >>>>>>>> org.apache.ambari.server.orm.entities.OperatingSystemEntity.getRepositories : return $r1
org.apache.ambari.server.orm.entities.OperatingSystemEntity.getRepositories : return $r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.stack.RepoUtilTest.osEntity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : i1 = i1 + 1
org.apache.ambari.server.stack.RepoUtilTest.osEntity : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : goto [?= (branch)]
org.apache.ambari.server.stack.RepoUtilTest.osEntity : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.osEntity : return $r5
org.apache.ambari.server.stack.RepoUtilTest.osEntity : return $r5 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : r4 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : r4 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : r5 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : r5 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : if $z0 == 0
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : r6 = (java.lang.String) $r8
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : r6 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : $r9 = new org.apache.ambari.server.state.RepositoryInfo
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : $r9 = new org.apache.ambari.server.state.RepositoryInfo >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : specialinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>()
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : specialinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>(r6)
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setOsType : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType> = r1
org.apache.ambari.server.state.RepositoryInfo.setOsType : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>(r2)
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setRepoId : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoId> = r1
org.apache.ambari.server.state.RepositoryInfo.setRepoId : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoId> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>(r1)
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setRepoName : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName> = r1
org.apache.ambari.server.state.RepositoryInfo.setRepoName : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>(r3)
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setBaseUrl : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String baseUrl> = r1
org.apache.ambari.server.state.RepositoryInfo.setBaseUrl : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String baseUrl> = r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : interfaceinvoke r4.<com.google.common.collect.ListMultimap: boolean put(java.lang.Object,java.lang.Object)>(r6, $r9)
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : interfaceinvoke r4.<com.google.common.collect.ListMultimap: boolean put(java.lang.Object,java.lang.Object)>(r6, $r9) >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : return r4
org.apache.ambari.server.stack.RepoUtilTest.serviceRepos : return r4 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r9 = new java.util.HashSet
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : if $z0 == 0
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r4 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r13
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r4 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r13 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.orm.entities.OperatingSystemEntity.getOsType : $r1 = r0.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String osType>
org.apache.ambari.server.orm.entities.OperatingSystemEntity.getOsType : $r1 = r0.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String osType> >>>>>>>> org.apache.ambari.server.orm.entities.OperatingSystemEntity.getOsType : return $r1
org.apache.ambari.server.orm.entities.OperatingSystemEntity.getOsType : return $r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r5 = interfaceinvoke r1.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>($r14)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r5 = interfaceinvoke r1.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r15 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r15 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r16 = <org.apache.ambari.server.stack.RepoUtil: com.google.common.base.Function REPO_ENTITY_TO_NAME>
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r16 = <org.apache.ambari.server.stack.RepoUtil: com.google.common.base.Function REPO_ENTITY_TO_NAME> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r17 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r15, $r16)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r17 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r15, $r16) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r6 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r17)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r6 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r17) >>>>>>>> org.apache.ambari.server.stack.RepoUtil$1.apply : $r2 = (org.apache.ambari.server.orm.entities.RepositoryEntity) r1
org.apache.ambari.server.stack.RepoUtil$1.apply : $r2 = (org.apache.ambari.server.orm.entities.RepositoryEntity) r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtil$1.apply : $r3 = virtualinvoke r0.<org.apache.ambari.server.stack.RepoUtil$1: java.lang.String apply(org.apache.ambari.server.orm.entities.RepositoryEntity)>($r2)
org.apache.ambari.server.stack.RepoUtil$1.apply : $r3 = virtualinvoke r0.<org.apache.ambari.server.stack.RepoUtil$1: java.lang.String apply(org.apache.ambari.server.orm.entities.RepositoryEntity)>($r2) >>>>>>>> org.apache.ambari.server.stack.RepoUtil$1.apply : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getName()>()
org.apache.ambari.server.stack.RepoUtil$1.apply : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryEntity.getName : $r1 = r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.RepositoryEntity.getName : $r1 = r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryEntity.getName : return $r1
org.apache.ambari.server.orm.entities.RepositoryEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtil$1.apply : return $r2
org.apache.ambari.server.stack.RepoUtil$1.apply : return $r2 >>>>>>>> org.apache.ambari.server.stack.RepoUtil$1.apply : return $r3
org.apache.ambari.server.stack.RepoUtil$1.apply : return $r3 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r7 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r7 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : if $z2 == 0
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r8 = (org.apache.ambari.server.state.RepositoryInfo) $r18
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : r8 = (org.apache.ambari.server.state.RepositoryInfo) $r18 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r19 = virtualinvoke r8.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getRepoName()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r19 = virtualinvoke r8.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getRepoName()>() >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.getRepoName : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName>
org.apache.ambari.server.state.RepositoryInfo.getRepoName : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName> >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.getRepoName : return $r1
org.apache.ambari.server.state.RepositoryInfo.getRepoName : return $r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z3 = virtualinvoke r6.<com.google.common.collect.ImmutableSet: boolean contains(java.lang.Object)>($r19)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z3 = virtualinvoke r6.<com.google.common.collect.ImmutableSet: boolean contains(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : if $z3 != 0
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : if $z3 != 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r10 = <org.apache.ambari.server.stack.RepoUtil: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r10 = <org.apache.ambari.server.stack.RepoUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $i0 = interfaceinvoke $r9.<java.util.Set: int size()>()
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $i0 = interfaceinvoke $r9.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r12 = staticinvoke <com.google.common.collect.Iterables: java.lang.String toString(java.lang.Iterable)>($r9)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $r12 = staticinvoke <com.google.common.collect.Iterables: java.lang.String toString(java.lang.Iterable)>($r9) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Added {} service repos: {}", $r11, $r12)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Added {} service repos: {}", $r11, $r12) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z1 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>($r9)
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : $z1 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>($r9) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : return $z1
org.apache.ambari.server.stack.RepoUtil.addServiceReposToOperatingSystemEntities : return $z1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : if $z0 == 0
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : r3 = (org.apache.ambari.server.orm.entities.RepositoryEntity) $r5
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : r3 = (org.apache.ambari.server.orm.entities.RepositoryEntity) $r5 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r6 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getRepositoryId()>()
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r6 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getRepositoryId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryEntity.getRepositoryId : $r1 = r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String repositoryId>
org.apache.ambari.server.orm.entities.RepositoryEntity.getRepositoryId : $r1 = r0.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String repositoryId> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryEntity.getRepositoryId : return $r1
org.apache.ambari.server.orm.entities.RepositoryEntity.getRepositoryId : return $r1 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, r1)
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, r1) >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : if $z1 == 0
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r7 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>(r3)
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r7 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : return $r7
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : return $r7 >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r4 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : $r4 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtilTest.findRepoEntityById : return $r4
