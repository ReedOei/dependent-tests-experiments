org.apache.ambari.server.state.scheduler.BatchRequestResponse.setStatus : r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.ExecutionId")
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.ExecutionId") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $r10 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $r10 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r39 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.ExecutionId")
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r39 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.ExecutionId") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r43 = (java.lang.Long) $r39
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r43 = (java.lang.Long) $r39 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : goto [?= r2 = $r43]
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : goto [?= r2 = $r43] >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r2 = $r43
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r2 = $r43 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.BatchId")
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.BatchId") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $r11 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $r11 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r38 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.BatchId")
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r38 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.BatchId") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r44 = (java.lang.Long) $r38
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r44 = (java.lang.Long) $r38 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : goto [?= r3 = $r44]
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : goto [?= r3 = $r44] >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r3 = $r44
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r3 = $r44 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.ClusterName")
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.ClusterName") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r4 = (java.lang.String) $r12
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r4 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if r2 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if r2 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $r44 != null
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $r44 != null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r5 = specialinvoke r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: java.util.Map getTaskCountProperties(java.util.Map)>(r1)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r5 = specialinvoke r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: java.util.Map getTaskCountProperties(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $r3 = new java.util.HashMap
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $r3 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : if r1 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : if r1 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.FailedTaskCount")
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.FailedTaskCount") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : if r14 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : if r14 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $i0 = 0
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $i0 = 0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.FailedTaskCount", $r5)
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.FailedTaskCount", $r5) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.TotalTaskCount")
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.TotalTaskCount") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : if r15 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : if r15 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $i1 = 0
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $i1 = 0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.TotalTaskCount", $r8)
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.TotalTaskCount", $r8) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : return $r3
org.apache.ambari.server.state.scheduler.BatchRequestJob.getTaskCountProperties : return $r3 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r20 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager>
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r20 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l0 = virtualinvoke r2.<java.lang.Long: long longValue()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l0 = virtualinvoke r2.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l1 = virtualinvoke $r44.<java.lang.Long: long longValue()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l1 = virtualinvoke $r44.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r6 = virtualinvoke $r20.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: java.lang.Long executeBatchRequest(long,long,java.lang.String)>($l0, $l1, r4)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r6 = virtualinvoke $r20.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: java.lang.Long executeBatchRequest(long,long,java.lang.String)>($l0, $l1, r4) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if r6 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if r6 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r21 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager>
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r21 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r8 = virtualinvoke $r21.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.scheduler.BatchRequestResponse getBatchRequestResponse(java.lang.Long,java.lang.String)>(r6, r4)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r8 = virtualinvoke $r21.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.scheduler.BatchRequestResponse getBatchRequestResponse(java.lang.Long,java.lang.String)>(r6, r4) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.String getStatus()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.String getStatus()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getStatus : $r1 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.String status>
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getStatus : $r1 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.String status> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getStatus : return $r1
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r7 = staticinvoke <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus valueOf(java.lang.String)>($r22)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r7 = staticinvoke <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus valueOf(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.actionmanager.HostRoleStatus.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleStatus;", r0)
org.apache.ambari.server.actionmanager.HostRoleStatus.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleStatus;", r0) >>>>>>>> org.apache.ambari.server.actionmanager.HostRoleStatus.valueOf : $r2 = (org.apache.ambari.server.actionmanager.HostRoleStatus) $r1
org.apache.ambari.server.actionmanager.HostRoleStatus.valueOf : $r2 = (org.apache.ambari.server.actionmanager.HostRoleStatus) $r1 >>>>>>>> org.apache.ambari.server.actionmanager.HostRoleStatus.valueOf : return $r2
org.apache.ambari.server.actionmanager.HostRoleStatus.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r23 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager>
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r23 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l2 = virtualinvoke r2.<java.lang.Long: long longValue()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l2 = virtualinvoke r2.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l3 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l3 = virtualinvoke r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : virtualinvoke $r23.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void updateBatchRequest(long,long,java.lang.String,org.apache.ambari.server.state.scheduler.BatchRequestResponse,boolean)>($l2, $l3, r4, r8, 1)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : virtualinvoke $r23.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void updateBatchRequest(long,long,java.lang.String,org.apache.ambari.server.state.scheduler.BatchRequestResponse,boolean)>($l2, $l3, r4, r8, 1) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l4 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: long statusCheckInterval>
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $l4 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: long statusCheckInterval> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : staticinvoke <java.lang.Thread: void sleep(long)>($l4)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : staticinvoke <java.lang.Thread: void sleep(long)>($l4) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : goto [?= $z0 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleStatus: boolean isCompletedState()>()]
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : goto [?= $z0 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleStatus: boolean isCompletedState()>()] >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $z0 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleStatus: boolean isCompletedState()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $z0 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleStatus: boolean isCompletedState()>() >>>>>>>> org.apache.ambari.server.actionmanager.HostRoleStatus.isCompletedState : $r1 = <org.apache.ambari.server.actionmanager.HostRoleStatus: java.util.List COMPLETED_STATES>
org.apache.ambari.server.actionmanager.HostRoleStatus.isCompletedState : $r1 = <org.apache.ambari.server.actionmanager.HostRoleStatus: java.util.List COMPLETED_STATES> >>>>>>>> org.apache.ambari.server.actionmanager.HostRoleStatus.isCompletedState : $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(r0)
org.apache.ambari.server.actionmanager.HostRoleStatus.isCompletedState : $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.actionmanager.HostRoleStatus.isCompletedState : return $z0
org.apache.ambari.server.actionmanager.HostRoleStatus.isCompletedState : return $z0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $z0 == 0
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r46 = specialinvoke r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: java.util.Map addTaskCountToProperties(java.util.Map,java.util.Map,org.apache.ambari.server.state.scheduler.BatchRequestResponse)>(r1, r5, r8)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : r46 = specialinvoke r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: java.util.Map addTaskCountToProperties(java.util.Map,java.util.Map,org.apache.ambari.server.state.scheduler.BatchRequestResponse)>(r1, r5, r8) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r8 = new java.util.HashMap
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : if r3 == null
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : if r3 == null >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i0 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getFailedTaskCount()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i0 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getFailedTaskCount()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getFailedTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int failedTaskCount>
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getFailedTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int failedTaskCount> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getFailedTaskCount : return $i0
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getFailedTaskCount : return $i0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i1 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getAbortedTaskCount()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i1 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getAbortedTaskCount()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getAbortedTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int abortedTaskCount>
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getAbortedTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int abortedTaskCount> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getAbortedTaskCount : return $i0
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getAbortedTaskCount : return $i0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i2 = $i0 + $i1
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i2 = $i0 + $i1 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i3 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getTimedOutTaskCount()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i3 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getTimedOutTaskCount()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTimedOutTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int timedOutTaskCount>
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTimedOutTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int timedOutTaskCount> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTimedOutTaskCount : return $i0
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTimedOutTaskCount : return $i0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i4 = $i2 + $i3
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.FailedTaskCount")
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.FailedTaskCount") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r10 = (java.lang.Integer) $r9
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r10 = (java.lang.Integer) $r9 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i5 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i5 = virtualinvoke $r10.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i6 = virtualinvoke r5.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i6 = virtualinvoke r5.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i7 = $i5 + $i6
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i7 = $i5 + $i6 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.TotalTaskCount")
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.TotalTaskCount") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r12 = (java.lang.Integer) $r11
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $r12 = (java.lang.Integer) $r11 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i8 = virtualinvoke $r12.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i8 = virtualinvoke $r12.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i9 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getTotalTaskCount()>()
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i9 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int getTotalTaskCount()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTotalTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int totalTaskCount>
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTotalTaskCount : $i0 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: int totalTaskCount> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTotalTaskCount : return $i0
org.apache.ambari.server.state.scheduler.BatchRequestResponse.getTotalTaskCount : return $i0 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i10 = $i8 + $i9
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : $i10 = $i8 + $i9 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10)
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.FailedTaskCount", r6)
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.FailedTaskCount", r6) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.TotalTaskCount", r7)
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.TotalTaskCount", r7) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.FailedTaskCount", r6)
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.FailedTaskCount", r6) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.TotalTaskCount", r7)
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BatchRequestJob.TotalTaskCount", r7) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : return $r8
org.apache.ambari.server.state.scheduler.BatchRequestJob.addTaskCountToProperties : return $r8 >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r24 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager>
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $r24 = r0.<org.apache.ambari.server.state.scheduler.BatchRequestJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $z1 = virtualinvoke $r24.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean hasToleranceThresholdExceeded(java.lang.Long,java.lang.String,java.util.Map)>(r2, r4, r46)
org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : $z1 = virtualinvoke $r24.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean hasToleranceThresholdExceeded(java.lang.Long,java.lang.String,java.util.Map)>(r2, r4, r46) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequestJob.doWork : if $z1 == 0
