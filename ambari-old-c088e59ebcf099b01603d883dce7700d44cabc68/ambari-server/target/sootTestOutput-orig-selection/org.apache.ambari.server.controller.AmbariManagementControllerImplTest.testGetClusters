org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r1 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r6 = new java.util.HashSet
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r4 = (org.apache.ambari.server.controller.ClusterRequest) $r7
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r4 = (org.apache.ambari.server.controller.ClusterRequest) $r7 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r8 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Set getClusters(org.apache.ambari.server.controller.ClusterRequest)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r8 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Set getClusters(org.apache.ambari.server.controller.ClusterRequest)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r5 = new java.util.HashSet
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r5 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r6 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r6 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r35 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r35 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String clusterName>
org.apache.ambari.server.controller.ClusterRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getClusterName : return $r1
org.apache.ambari.server.controller.ClusterRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : if $r7 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : if $r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r24 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r24 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r25 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r25 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r35 = interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r25)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r35 = interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : if r35 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : if r35 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r37 = interfaceinvoke r35.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ClusterResponse convertToResponse()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : r37 = interfaceinvoke r35.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ClusterResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r19 = interfaceinvoke r35.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r19 = interfaceinvoke r35.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : virtualinvoke r37.<org.apache.ambari.server.controller.ClusterResponse: void setDesiredConfigs(java.util.Map)>($r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : virtualinvoke r37.<org.apache.ambari.server.controller.ClusterResponse: void setDesiredConfigs(java.util.Map)>($r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r20 = interfaceinvoke r35.<org.apache.ambari.server.state.Cluster: java.util.Map getActiveServiceConfigVersions()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r20 = interfaceinvoke r35.<org.apache.ambari.server.state.Cluster: java.util.Map getActiveServiceConfigVersions()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : virtualinvoke r37.<org.apache.ambari.server.controller.ClusterResponse: void setDesiredServiceConfigVersions(java.util.Map)>($r20)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : virtualinvoke r37.<org.apache.ambari.server.controller.ClusterResponse: void setDesiredServiceConfigVersions(java.util.Map)>($r20) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map getCredentialStoreServiceProperties()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map getCredentialStoreServiceProperties()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r2 = new java.util.HashMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z0 = interfaceinvoke $r4.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z0 = interfaceinvoke $r4.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.persistent", $r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.persistent", $r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r7 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r7 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z1 = interfaceinvoke $r8.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z1 = interfaceinvoke $r8.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.temporary", $r9)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.temporary", $r9) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : return $r2
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : return $r2 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : virtualinvoke r37.<org.apache.ambari.server.controller.ClusterResponse: void setCredentialStoreServiceProperties(java.util.Map)>($r21)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : virtualinvoke r37.<org.apache.ambari.server.controller.ClusterResponse: void setCredentialStoreServiceProperties(java.util.Map)>($r21) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r37)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : return $r5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : return $r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : interfaceinvoke $r6.<java.util.Set: boolean addAll(java.util.Collection)>($r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : interfaceinvoke $r6.<java.util.Set: boolean addAll(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClusters : return $r6
