org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setPrerequisiteCheckConfig : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setPrerequisiteCheckConfig : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig> = r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r11 = r0.<org.apache.ambari.server.checks.ServicePresenceCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r11 = r0.<org.apache.ambari.server.checks.ServicePresenceCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r12 = interfaceinvoke $r11.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r12 = interfaceinvoke $r11.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.checks.ServicePresenceCheckTest this$0>
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.checks.ServicePresenceCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicePresenceCheckTest)>($r1)
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicePresenceCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters m_clusters> >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r2
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r1
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r13 = (org.apache.ambari.server.state.Clusters) $r12
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r13 = (org.apache.ambari.server.state.Clusters) $r12 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r14 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r14 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r15 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r15 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r4 = interfaceinvoke $r15.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r4 = interfaceinvoke $r15.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.List getNoUpgradeSupportServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.List getNoUpgradeSupportServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $r6 = new java.util.ArrayList
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "no-upgrade-support-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "no-upgrade-support-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r7 = null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r7 = null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig>
org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r8 = null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r8 = null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r3 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r3 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r8 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r6)
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r8 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r8 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r8 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $z0 = interfaceinvoke r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $z0 = interfaceinvoke r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if $z0 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r4 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r4 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r7 = (java.lang.String) $r4
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r7 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : return r7
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : return r7 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if null == r3
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if null == r3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i0 = lengthof r4
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = 0
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if i1 >= i0
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if i1 >= i0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r7 = r4[i1]
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r7 = r4[i1] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if $z0 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = i1 + 1
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : goto [?= (branch)]
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : return $r6
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : return $r6 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r6 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.Map getReplacedServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r6 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.Map getReplacedServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r9 = new java.util.LinkedHashMap
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r9 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "replaced-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "replaced-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r13 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r13 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r14 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r14 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i0 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i0 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $i0 == $i1
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = 0
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i2 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i2 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if i3 >= $i2
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if i3 >= $i2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r16 = (java.lang.String) $r15
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r16 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r7 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r7 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i3)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i3) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r18 = (java.lang.String) $r17
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r18 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r8 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r8 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z0 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z0 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z0 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z1 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z1 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z1 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = i3 + 1
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : goto [?= $i2 = interfaceinvoke r5.<java.util.List: int size()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : goto [?= $i2 = interfaceinvoke r5.<java.util.List: int size()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : return $r9
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : return $r9 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r7 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.List getRemovedServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r7 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.List getRemovedServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r6 = new java.util.ArrayList
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "removed-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "removed-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if null == r3
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if null == r3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = lengthof r4
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i1 = 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i1 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if i1 >= i0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if i1 >= i0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r7 = r4[i1]
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r7 = r4[i1] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z0 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i1 = i1 + 1
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : goto [?= (branch)]
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : return $r6
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : return $r6 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r16 = new java.util.ArrayList
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r16 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r34 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r34 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0
org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4
org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5]
org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : return $r5
org.apache.ambari.server.checks.CheckDescription.getFail : return $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion>
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return $r3
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return $r3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r35 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r35 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r30 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r30 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r36 = (java.lang.String) $r30
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r36 = (java.lang.String) $r30 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r31 = virtualinvoke r36.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r31 = virtualinvoke r36.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z10 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r31)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z10 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z10 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z10 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r38 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("service_replaced", r1, r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r38 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("service_replaced", r1, r2) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = ""
org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = "" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r17 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r17 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r39 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r39 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z1 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r24 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r24 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r40 = (java.util.Map$Entry) $r24
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r40 = (java.util.Map$Entry) $r24 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r25 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r25 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r41 = (java.lang.String) $r25
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r41 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r26 = virtualinvoke r41.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r26 = virtualinvoke r41.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z7 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r26)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z7 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z7 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z7 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r42 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("service_removed", r1, r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r42 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("service_removed", r1, r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r43 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r43 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z2 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r20 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r20 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r44 = (java.lang.String) $r20
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r44 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r21 = virtualinvoke r44.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r21 = virtualinvoke r44.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z4 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r21)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z4 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z4 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z3 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z3 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z3 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
