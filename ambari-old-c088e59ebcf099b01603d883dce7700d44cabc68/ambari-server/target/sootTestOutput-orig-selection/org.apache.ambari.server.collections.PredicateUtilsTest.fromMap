org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3 = newarray (java.util.Map)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[0] = "services"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[0] = "services" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[1] = "HDFS"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[1] = "HDFS" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("contains", $r5)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("contains", $r5) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[0] = $r6
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[0] = $r6 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[0] = "configurations/service-env/property1"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[0] = "configurations/service-env/property1" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[1] = "true"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[1] = "true" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r9 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r8)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r9 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r8) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[1] = $r9
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[1] = $r9 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r1 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("and", $r10)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r1 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("and", $r10) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11 = newarray (java.util.Map)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11 = newarray (java.util.Map)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[0] = "configurations/cluster-env/property1"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[0] = "configurations/cluster-env/property1" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[1] = "false"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[1] = "false" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r13)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r13) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[0] = $r14
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[0] = $r14 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[1] = r1
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[1] = r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("or", $r15)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("or", $r15) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("not", r2)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("not", r2) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : return $r16
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : return $r16 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = null
org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (java.util.Map$Entry) $r10
org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r11)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r2)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : if r0 != null
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r1 = <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.util.Map NAME_TO_CLASS>
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r1 = <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.util.Map NAME_TO_CLASS> >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r3 = (java.lang.Class) $r2
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : $r3 = (java.lang.Class) $r2 >>>>>>>> org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : return $r3
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : return $r3 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r3 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r3 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = newarray (java.lang.Class)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12[0] = class "Ljava/util/Map;"
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12[0] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r31 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r12)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r31 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r12) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r31 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r31 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r14)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r14) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = $r15
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = $r15 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13) >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : if r0 != null
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("not")
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("not") >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : if $r7 != null
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : if $r7 != null >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $z0 = $r7 instanceof java.util.Map
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $z0 = $r7 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r3 = new org.apache.ambari.server.collections.functors.NotPredicate
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r3 = new org.apache.ambari.server.collections.functors.NotPredicate >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r4 = (java.util.Map) $r7
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r4 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r5 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r4)
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : $r5 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r4) >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if r0 != null
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r28 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("or")
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r28 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("or") >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $r28 != null
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $r28 != null >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $z0 = $r28 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $z0 = $r28 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r2 = (java.util.Collection) $r28
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r2 = (java.util.Collection) $r28 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $i0 != 2
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $z1 = r4 instanceof java.util.Map
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $z1 = r4 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $z1 == 0
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $z2 = r5 instanceof java.util.Map
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $z2 = r5 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $z2 == 0
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.OrPredicate
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.OrPredicate >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r23 = (java.util.Map) r4
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r23 = (java.util.Map) r4 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r24 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r23)
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r24 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r23) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if r0 != null
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("equals")
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("equals") >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $r27 != null
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $r27 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r2 = (java.util.Collection) $r27
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r2 = (java.util.Collection) $r27 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $i0 != 2
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z1 = r4 instanceof java.lang.String
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z1 = r4 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z1 == 0
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z2 = r5 instanceof java.lang.String
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z2 = r5 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z2 == 0
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.EqualsPredicate
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.EqualsPredicate >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r24 = (java.lang.String) r4
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r24 = (java.lang.String) r4 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r25 = (java.lang.String) r5
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r25 = (java.lang.String) r5 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : return $r22
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : return $r22 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = (org.apache.ambari.server.collections.Predicate) $r16
org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = (org.apache.ambari.server.collections.Predicate) $r16 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)]
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r30]
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r30] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : return r30
org.apache.ambari.server.collections.PredicateUtils.fromMap : return r30 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r25 = (java.util.Map) r5
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r25 = (java.util.Map) r5 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r26 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r25)
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : $r26 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r25) >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if r0 != null
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r28 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("and")
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r28 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("and") >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $r28 != null
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $r28 != null >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $z0 = $r28 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $z0 = $r28 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r2 = (java.util.Collection) $r28
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r2 = (java.util.Collection) $r28 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $i0 != 2
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $z1 = r4 instanceof java.util.Map
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $z1 = r4 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $z1 == 0
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $z2 = r5 instanceof java.util.Map
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $z2 = r5 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $z2 == 0
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.AndPredicate
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.AndPredicate >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r23 = (java.util.Map) r4
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r23 = (java.util.Map) r4 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r24 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r23)
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r24 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r23) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if r0 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("contains")
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("contains") >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $r27 != null
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $r27 != null >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r2 = (java.util.Collection) $r27
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r2 = (java.util.Collection) $r27 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $i0 != 2
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z1 = r4 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z1 = r4 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z1 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z2 = r5 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z2 = r5 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z2 == 0
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.ContainsPredicate
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.ContainsPredicate >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r23 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r24 = (java.lang.String) r4
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r24 = (java.lang.String) r4 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r23.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r25 = (java.lang.String) r5
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r25 = (java.lang.String) r5 >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25)
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.ContainsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r23, $r25) >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : return $r22
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : return $r22 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r25 = (java.util.Map) r5
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r25 = (java.util.Map) r5 >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r26 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r25)
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : $r26 = staticinvoke <org.apache.ambari.server.collections.PredicateUtils: org.apache.ambari.server.collections.Predicate fromMap(java.util.Map)>($r25) >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.AndPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r24, $r26)
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.AndPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r24, $r26) >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.fromMap : return $r22
org.apache.ambari.server.collections.functors.AndPredicate.fromMap : return $r22 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.OrPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r24, $r26)
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : specialinvoke $r22.<org.apache.ambari.server.collections.functors.OrPredicate: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)>($r24, $r26) >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.fromMap : return $r22
org.apache.ambari.server.collections.functors.OrPredicate.fromMap : return $r22 >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : specialinvoke $r3.<org.apache.ambari.server.collections.functors.NotPredicate: void <init>(org.apache.commons.collections.Predicate)>($r5)
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : specialinvoke $r3.<org.apache.ambari.server.collections.functors.NotPredicate: void <init>(org.apache.commons.collections.Predicate)>($r5) >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.fromMap : return $r3
org.apache.ambari.server.collections.functors.NotPredicate.fromMap : return $r3 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r2 = virtualinvoke r1.<org.apache.ambari.server.collections.Predicate: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r2 = virtualinvoke r1.<org.apache.ambari.server.collections.Predicate: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.Predicate.getName : $r1 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name>
org.apache.ambari.server.collections.Predicate.getName : $r1 = r0.<org.apache.ambari.server.collections.Predicate: java.lang.String name> >>>>>>>> org.apache.ambari.server.collections.Predicate.getName : return $r1
org.apache.ambari.server.collections.Predicate.getName : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("not", $r2)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("not", $r2) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z0 = r1 instanceof org.apache.ambari.server.collections.functors.NotPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z0 = r1 instanceof org.apache.ambari.server.collections.functors.NotPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r3 = (org.apache.ambari.server.collections.functors.NotPredicate) r1
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r3 = (org.apache.ambari.server.collections.functors.NotPredicate) r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : r51 = virtualinvoke $r3.<org.apache.ambari.server.collections.functors.NotPredicate: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : r51 = virtualinvoke $r3.<org.apache.ambari.server.collections.functors.NotPredicate: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.getPredicates : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.functors.NotPredicate.getPredicates : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.getPredicates : $r1 = r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate>
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.getPredicates : $r1 = r0.<org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate> >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.getPredicates : $r2 = interfaceinvoke $r1.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.getPredicates : $r2 = interfaceinvoke $r1.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.getPredicates : return $r2
org.apache.ambari.server.collections.functors.DelegatedSinglePredicateContainer.getPredicates : return $r2 >>>>>>>> org.apache.ambari.server.collections.functors.NotPredicate.getPredicates : return $r1
org.apache.ambari.server.collections.functors.NotPredicate.getPredicates : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $i0 = lengthof r51
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $i0 = lengthof r51 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r4 = r51[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r4 = r51[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r4)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r5 = r51[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r5 = r51[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z1 = $r5 instanceof org.apache.ambari.server.collections.functors.OrPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z1 = $r5 instanceof org.apache.ambari.server.collections.functors.OrPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z1)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r6 = r51[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r6 = r51[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r7 = (org.apache.ambari.server.collections.functors.OrPredicate) $r6
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r7 = (org.apache.ambari.server.collections.functors.OrPredicate) $r6 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r8 = virtualinvoke $r7.<org.apache.ambari.server.collections.functors.OrPredicate: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r8 = virtualinvoke $r7.<org.apache.ambari.server.collections.functors.OrPredicate: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("or", $r8)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("or", $r8) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r9 = r51[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r9 = r51[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r10 = (org.apache.ambari.server.collections.functors.OrPredicate) $r9
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r10 = (org.apache.ambari.server.collections.functors.OrPredicate) $r9 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : r52 = virtualinvoke $r10.<org.apache.ambari.server.collections.functors.OrPredicate: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : r52 = virtualinvoke $r10.<org.apache.ambari.server.collections.functors.OrPredicate: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.getPredicates : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.functors.OrPredicate.getPredicates : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.getPredicates : $r1 = r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate>
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.getPredicates : $r1 = r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.functors.PredicateDecorator delegate> >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.getPredicates : $r2 = interfaceinvoke $r1.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.getPredicates : $r2 = interfaceinvoke $r1.<org.apache.commons.collections.functors.PredicateDecorator: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.getPredicates : return $r2
org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer.getPredicates : return $r2 >>>>>>>> org.apache.ambari.server.collections.functors.OrPredicate.getPredicates : return $r1
org.apache.ambari.server.collections.functors.OrPredicate.getPredicates : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $i1 = lengthof r52
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $i1 = lengthof r52 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r11 = r52[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r11 = r52[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r11)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r12 = r52[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r12 = r52[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z2 = $r12 instanceof org.apache.ambari.server.collections.functors.EqualsPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z2 = $r12 instanceof org.apache.ambari.server.collections.functors.EqualsPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z2)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r13 = r52[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r13 = r52[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r14 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r13
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r14 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r13 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r15 = virtualinvoke $r14.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r15 = virtualinvoke $r14.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("equals", $r15)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("equals", $r15) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r16 = r52[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r16 = r52[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r17 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r16
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r17 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r16 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r18 = virtualinvoke $r17.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r18 = virtualinvoke $r17.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r1 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r1 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : if $r1 != null
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : if $r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r2 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer>
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r2 = r0.<org.apache.ambari.server.collections.functors.OperationPredicate: org.apache.ambari.server.collections.functors.ContextTransformer transformer> >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r3 = virtualinvoke $r2.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String getKey()>()
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : $r3 = virtualinvoke $r2.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.getKey : $r1 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key>
org.apache.ambari.server.collections.functors.ContextTransformer.getKey : $r1 = r0.<org.apache.ambari.server.collections.functors.ContextTransformer: java.lang.String key> >>>>>>>> org.apache.ambari.server.collections.functors.ContextTransformer.getKey : return $r1
org.apache.ambari.server.collections.functors.ContextTransformer.getKey : return $r1 >>>>>>>> org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : return $r3
org.apache.ambari.server.collections.functors.OperationPredicate.getContextKey : return $r3 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : return $r1
org.apache.ambari.server.collections.functors.EqualsPredicate.getContextKey : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("configurations/cluster-env/property1", $r18)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("configurations/cluster-env/property1", $r18) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r19 = r52[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r19 = r52[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r20 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r19
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r20 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r19 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r21 = virtualinvoke $r20.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getValue()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r21 = virtualinvoke $r20.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r2 = r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: org.apache.commons.collections.functors.EqualPredicate delegate>
org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r2 = r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: org.apache.commons.collections.functors.EqualPredicate delegate> >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : if $r2 != null
org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : if $r2 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r3 = r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: org.apache.commons.collections.functors.EqualPredicate delegate>
org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r3 = r0.<org.apache.ambari.server.collections.functors.EqualsPredicate: org.apache.commons.collections.functors.EqualPredicate delegate> >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r4 = virtualinvoke $r3.<org.apache.commons.collections.functors.EqualPredicate: java.lang.Object getValue()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r4 = virtualinvoke $r3.<org.apache.commons.collections.functors.EqualPredicate: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : if $r4 != null
org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : if $r4 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : return $r5
org.apache.ambari.server.collections.functors.EqualsPredicate.getValue : return $r5 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("false", $r21)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("false", $r21) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r22 = r52[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r22 = r52[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r22)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r23 = r52[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r23 = r52[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z3 = $r23 instanceof org.apache.ambari.server.collections.functors.AndPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z3 = $r23 instanceof org.apache.ambari.server.collections.functors.AndPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z3)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z3) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r24 = r52[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r24 = r52[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r25 = (org.apache.ambari.server.collections.functors.AndPredicate) $r24
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r25 = (org.apache.ambari.server.collections.functors.AndPredicate) $r24 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r26 = virtualinvoke $r25.<org.apache.ambari.server.collections.functors.AndPredicate: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r26 = virtualinvoke $r25.<org.apache.ambari.server.collections.functors.AndPredicate: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("and", $r26)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("and", $r26) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r27 = r52[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r27 = r52[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r28 = (org.apache.ambari.server.collections.functors.AndPredicate) $r27
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r28 = (org.apache.ambari.server.collections.functors.AndPredicate) $r27 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : r53 = virtualinvoke $r28.<org.apache.ambari.server.collections.functors.AndPredicate: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : r53 = virtualinvoke $r28.<org.apache.ambari.server.collections.functors.AndPredicate: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.getPredicates : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.Predicate[] getPredicates()>()
org.apache.ambari.server.collections.functors.AndPredicate.getPredicates : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.DelegatedMultiplePredicateContainer: org.apache.commons.collections.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.collections.functors.AndPredicate.getPredicates : return $r1
org.apache.ambari.server.collections.functors.AndPredicate.getPredicates : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $i2 = lengthof r53
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $i2 = lengthof r53 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r29 = r53[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r29 = r53[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r29)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r30 = r53[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r30 = r53[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z4 = $r30 instanceof org.apache.ambari.server.collections.functors.ContainsPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z4 = $r30 instanceof org.apache.ambari.server.collections.functors.ContainsPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z4)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z4) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r31 = r53[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r31 = r53[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r32 = (org.apache.ambari.server.collections.functors.ContainsPredicate) $r31
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r32 = (org.apache.ambari.server.collections.functors.ContainsPredicate) $r31 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r33 = virtualinvoke $r32.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r33 = virtualinvoke $r32.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("contains", $r33)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("contains", $r33) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r34 = r53[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r34 = r53[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r35 = (org.apache.ambari.server.collections.functors.ContainsPredicate) $r34
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r35 = (org.apache.ambari.server.collections.functors.ContainsPredicate) $r34 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r36 = virtualinvoke $r35.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r36 = virtualinvoke $r35.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : $r1 = specialinvoke r0.<org.apache.ambari.server.collections.functors.OperationPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : return $r1
org.apache.ambari.server.collections.functors.ContainsPredicate.getContextKey : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("services", $r36)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("services", $r36) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r37 = r53[0]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r37 = r53[0] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r38 = (org.apache.ambari.server.collections.functors.ContainsPredicate) $r37
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r38 = (org.apache.ambari.server.collections.functors.ContainsPredicate) $r37 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r39 = virtualinvoke $r38.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getValue()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r39 = virtualinvoke $r38.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.getValue : $r1 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value>
org.apache.ambari.server.collections.functors.ContainsPredicate.getValue : $r1 = r0.<org.apache.ambari.server.collections.functors.ContainsPredicate: java.lang.String value> >>>>>>>> org.apache.ambari.server.collections.functors.ContainsPredicate.getValue : return $r1
org.apache.ambari.server.collections.functors.ContainsPredicate.getValue : return $r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("HDFS", $r39)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("HDFS", $r39) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r40 = r53[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r40 = r53[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r40)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r41 = r53[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r41 = r53[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z5 = $r41 instanceof org.apache.ambari.server.collections.functors.EqualsPredicate
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $z5 = $r41 instanceof org.apache.ambari.server.collections.functors.EqualsPredicate >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z5)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z5) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r42 = r53[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r42 = r53[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r43 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r42
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r43 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r42 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r44 = virtualinvoke $r43.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r44 = virtualinvoke $r43.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("equals", $r44)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("equals", $r44) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r45 = r53[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r45 = r53[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r46 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r45
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r46 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r45 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r47 = virtualinvoke $r46.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getContextKey()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r47 = virtualinvoke $r46.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getContextKey()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("configurations/service-env/property1", $r47)
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("configurations/service-env/property1", $r47) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r48 = r53[1]
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r48 = r53[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r49 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r48
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r49 = (org.apache.ambari.server.collections.functors.EqualsPredicate) $r48 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r50 = virtualinvoke $r49.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getValue()>()
org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : $r50 = virtualinvoke $r49.<org.apache.ambari.server.collections.functors.EqualsPredicate: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.verifyPredicate : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("true", $r50)
