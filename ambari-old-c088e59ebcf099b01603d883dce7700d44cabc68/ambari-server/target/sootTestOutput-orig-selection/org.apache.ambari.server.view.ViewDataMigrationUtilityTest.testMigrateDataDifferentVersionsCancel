org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : r0 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("MyEntityClass", class "Ljava/lang/Object;")
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : r0 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("MyEntityClass", class "Ljava/lang/Object;") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewDataMigrationContextImpl;")
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewDataMigrationContextImpl;") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : r1 = (org.apache.ambari.server.view.ViewDataMigrationContextImpl) $r2
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : r1 = (org.apache.ambari.server.view.ViewDataMigrationContextImpl) $r2 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i2 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i2 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i3 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i3 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r13 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getOriginEntityClasses()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r13 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getOriginEntityClasses()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r17 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentEntityClasses()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r17 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentEntityClasses()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r21 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentInstanceDataByUser()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r21 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentInstanceDataByUser()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r23 = new java.util.HashMap
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r23 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : specialinvoke $r23.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : specialinvoke $r23.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25[0] = r1
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25[0] = r1 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : return r1
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : return r1 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.setMigrationContext : r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl migrationContext> = r1
org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.setMigrationContext : r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl migrationContext> = r1 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewEntity;")
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewEntity;") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : r5 = (org.apache.ambari.server.orm.entities.ViewEntity) $r8
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : r5 = (org.apache.ambari.server.orm.entities.ViewEntity) $r8 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r9 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r9 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r15[0] = r5
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r15[0] = r5 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r15)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r15) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceEntity;")
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceEntity;") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : r6 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r16
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : r6 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r16 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r17 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r17 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r20 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getViewName()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r20 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getViewName()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r23 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getInstanceName()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r23 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getInstanceName()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/view/migration/ViewDataMigrationContext;")
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/view/migration/ViewDataMigrationContext;") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r27 = (org.apache.ambari.view.migration.ViewDataMigrationContext) $r26
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r27 = (org.apache.ambari.view.migration.ViewDataMigrationContext) $r26 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r28 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.view.migration.ViewDataMigrator getDataMigrator(org.apache.ambari.view.migration.ViewDataMigrationContext)>($r27)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r28 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.view.migration.ViewDataMigrator getDataMigrator(org.apache.ambari.view.migration.ViewDataMigrationContext)>($r27) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : goto [?= $r31 = newarray (java.lang.Object)[1]]
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : goto [?= $r31 = newarray (java.lang.Object)[1]] >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r31 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r31 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r31[0] = r6
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r31[0] = r6 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r31)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r31) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : return r6
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : return r6 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/view/migration/ViewDataMigrator;")
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/view/migration/ViewDataMigrator;") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : r4 = (org.apache.ambari.view.migration.ViewDataMigrator) $r5
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : r4 = (org.apache.ambari.view.migration.ViewDataMigrator) $r5 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r6 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r6 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r6[0] = r4
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r6[0] = r4 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r6)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r6) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r7 = specialinvoke r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest: org.apache.ambari.server.orm.entities.ViewInstanceEntity getInstanceDefinition(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.view.migration.ViewDataMigrator)>(r1, r2, r3, r4)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : $r7 = specialinvoke r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest: org.apache.ambari.server.orm.entities.ViewInstanceEntity getInstanceDefinition(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.view.migration.ViewDataMigrator)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : return $r7
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getInstanceDefinition : return $r7 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : r3 = virtualinvoke r0.<org.apache.ambari.server.view.ViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl getViewDataMigrationContext(org.apache.ambari.server.orm.entities.ViewInstanceEntity,org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1, r2)
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : r3 = virtualinvoke r0.<org.apache.ambari.server.view.ViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl getViewDataMigrationContext(org.apache.ambari.server.orm.entities.ViewInstanceEntity,org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1, r2) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : $r3 = r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl migrationContext>
org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : $r3 = r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl migrationContext> >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : if $r3 != null
org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : if $r3 != null >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : $r4 = r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl migrationContext>
org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : $r4 = r0.<org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility: org.apache.ambari.server.view.ViewDataMigrationContextImpl migrationContext> >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : return $r4
org.apache.ambari.server.view.ViewDataMigrationUtilityTest$TestViewDataMigrationUtility.getViewDataMigrationContext : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : if z0 == 0
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : r4 = virtualinvoke r0.<org.apache.ambari.server.view.ViewDataMigrationUtility: org.apache.ambari.view.migration.ViewDataMigrator getViewDataMigrator(org.apache.ambari.server.orm.entities.ViewInstanceEntity,org.apache.ambari.server.view.ViewDataMigrationContextImpl)>(r1, r3)
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : r4 = virtualinvoke r0.<org.apache.ambari.server.view.ViewDataMigrationUtility: org.apache.ambari.view.migration.ViewDataMigrator getViewDataMigrator(org.apache.ambari.server.orm.entities.ViewInstanceEntity,org.apache.ambari.server.view.ViewDataMigrationContextImpl)>(r1, r3) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r6 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r6 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrating ")
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrating ") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r8 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getInstanceName()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r8 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getInstanceName()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data from ")
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data from ") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i0 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i0 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ")
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i1 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i1 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data version")
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data version") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r15)
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i2 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i2 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i3 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $i3 = virtualinvoke r2.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : if $i2 != $i3
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : if $i2 != $i3 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : r33 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.view.migration.ViewDataMigrator getDataMigrator(org.apache.ambari.view.migration.ViewDataMigrationContext)>(r2)
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : r33 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.view.migration.ViewDataMigrator getDataMigrator(org.apache.ambari.view.migration.ViewDataMigrationContext)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : if r33 != null
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : if r33 != null >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r16 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : $r16 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("Data migrator loaded")
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("Data migrator loaded") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : goto [?= return r33]
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : goto [?= return r33] >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : return r33
org.apache.ambari.server.view.ViewDataMigrationUtility.getViewDataMigrator : return r33 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r9 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r9 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("Running before-migration hook")
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("Running before-migration hook") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $z1 = interfaceinvoke r4.<org.apache.ambari.view.migration.ViewDataMigrator: boolean beforeMigration()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $z1 = interfaceinvoke r4.<org.apache.ambari.view.migration.ViewDataMigrator: boolean beforeMigration()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : if $z1 != 0
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ")
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r31 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getInstanceName()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r31 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getInstanceName()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" canceled the migration process")
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" canceled the migration process") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r34 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r34 = <org.apache.ambari.server.view.ViewDataMigrationUtility: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String)>(r37)
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String)>(r37) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r35 = new org.apache.ambari.view.migration.ViewDataMigrationException
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : $r35 = new org.apache.ambari.view.migration.ViewDataMigrationException >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : specialinvoke $r35.<org.apache.ambari.view.migration.ViewDataMigrationException: void <init>(java.lang.String)>(r37)
org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : specialinvoke $r35.<org.apache.ambari.view.migration.ViewDataMigrationException: void <init>(java.lang.String)>(r37) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtility.migrateData : throw $r35
