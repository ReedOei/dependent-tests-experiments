org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : $r1 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : $r1 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : return $r1
org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r4 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r4 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r2 = interfaceinvoke $r4.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.query.Query getQuery()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r2 = interfaceinvoke $r4.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.query.Query getQuery()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r3 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.controller.spi.Predicate getQueryPredicate()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r3 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.controller.spi.Predicate getQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.query.render.Renderer getRenderer()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.query.render.Renderer getRenderer()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : interfaceinvoke r2.<org.apache.ambari.server.api.query.Query: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r5)
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : interfaceinvoke r2.<org.apache.ambari.server.api.query.Query: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r5) >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : if r3 == null
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : if r3 == null >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.BaseManagementHandler: org.apache.ambari.server.api.services.Result persist(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>($r6, $r7)
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.BaseManagementHandler: org.apache.ambari.server.api.services.Result persist(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>($r6, $r7) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.CreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager getPersistenceManager()>()
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.CreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager getPersistenceManager()>() >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : $r1 = r0.<org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager m_testPm>
org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : $r1 = r0.<org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager m_testPm> >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : return $r1
org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : r60 = interfaceinvoke $r3.<org.apache.ambari.server.api.services.persistence.PersistenceManager: org.apache.ambari.server.controller.spi.RequestStatus create(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>(r1, r2)
org.apache.ambari.server.api.handlers.CreateHandler.persist : r60 = interfaceinvoke $r3.<org.apache.ambari.server.api.services.persistence.PersistenceManager: org.apache.ambari.server.controller.spi.RequestStatus create(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r16 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r16 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r17 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r17 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r18 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS FORBIDDEN>
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r18 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS FORBIDDEN> >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r19 = virtualinvoke $r15.<org.apache.ambari.server.security.authorization.AuthorizationException: java.lang.String getMessage()>()
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r19 = virtualinvoke $r15.<org.apache.ambari.server.security.authorization.AuthorizationException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : specialinvoke $r17.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r18, $r19)
org.apache.ambari.server.api.handlers.CreateHandler.persist : specialinvoke $r17.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r18, $r19) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : specialinvoke $r16.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r17)
org.apache.ambari.server.api.handlers.CreateHandler.persist : specialinvoke $r16.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r17) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : r61 = $r16
org.apache.ambari.server.api.handlers.CreateHandler.persist : r61 = $r16 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : goto [?= return r61]
org.apache.ambari.server.api.handlers.CreateHandler.persist : goto [?= return r61] >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : return r61
org.apache.ambari.server.api.handlers.CreateHandler.persist : return r61 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : return $r8
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1
