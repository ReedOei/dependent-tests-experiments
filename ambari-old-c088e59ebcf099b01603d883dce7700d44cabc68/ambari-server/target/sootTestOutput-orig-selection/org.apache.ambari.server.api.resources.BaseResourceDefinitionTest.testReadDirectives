org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r1 = new org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r1 = new org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : specialinvoke $r1.<org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinitionTest,org.apache.ambari.server.controller.spi.Resource$Type)>(r0, $r2)
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : specialinvoke $r1.<org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinitionTest,org.apache.ambari.server.controller.spi.Resource$Type)>(r0, $r2) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : return $r1
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : return $r1 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType READ>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType READ> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : return $r4
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : return $r4 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r2 = new org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$6
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r2 = new org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$6 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : specialinvoke $r2.<org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$6: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinitionTest,org.apache.ambari.server.controller.spi.Resource$Type,java.util.Collection,java.util.Map)>(r0, $r3, $r4, r1)
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : specialinvoke $r2.<org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$6: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinitionTest,org.apache.ambari.server.controller.spi.Resource$Type,java.util.Collection,java.util.Map)>(r0, $r3, $r4, r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if $r6 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if $r6 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = (java.util.Collection) $r7
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = (java.util.Collection) $r7 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : virtualinvoke $r4.<java.util.HashSet: boolean addAll(java.util.Collection)>($r8)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : virtualinvoke $r4.<java.util.HashSet: boolean addAll(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : return $r2
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : return $r2 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType DELETE>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType DELETE> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : return $r4
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : return $r4 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType CREATE>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType CREATE> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : return $r4
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : return $r4 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType UPDATE>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType UPDATE> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : return $r4
