org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : if r3 != null >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r9 = null
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r9 = null >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : goto [?= $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>(r1, r2, $r9, r4)]
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : goto [?= $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>(r1, r2, $r9, r4)] >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>(r1, r2, $r9, r4)
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>(r1, r2, $r9, r4) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r6 = <org.apache.ambari.server.controller.internal.URLStreamProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r6 = <org.apache.ambari.server.controller.internal.URLStreamProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : if $z0 == 0
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("https")
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("https") >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : if $z1 == 0
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $z8 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: boolean setupTruststoreForHttps>
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $z8 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: boolean setupTruststoreForHttps> >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : if $z8 == 0
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r45 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: javax.net.ssl.HttpsURLConnection getSSLConnection(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.URLStreamProvider.processURL : $r45 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: javax.net.ssl.HttpsURLConnection getSSLConnection(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r6 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: javax.net.ssl.SSLSocketFactory sslSocketFactory>
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r6 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: javax.net.ssl.SSLSocketFactory sslSocketFactory> >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : if $r6 != null
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : if $r6 != null >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : entermonitor r0
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : entermonitor r0 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r12 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: javax.net.ssl.SSLSocketFactory sslSocketFactory>
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r12 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: javax.net.ssl.SSLSocketFactory sslSocketFactory> >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : if $r12 != null
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : if $r12 != null >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r13 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.lang.String trustStorePath>
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r13 = r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.lang.String trustStorePath> >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : if $r13 == null
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : if $r13 == null >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r14 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r14 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r14[0] = r1
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r14[0] = r1 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can\'t get secure connection to %s.  Truststore path or password is not set.", $r14)
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can\'t get secure connection to %s.  Truststore path or password is not set.", $r14) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r15 = <org.apache.ambari.server.controller.internal.URLStreamProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r15 = <org.apache.ambari.server.controller.internal.URLStreamProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>(r32)
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>(r32) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r16 = new java.lang.IllegalStateException
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : $r16 = new java.lang.IllegalStateException >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r32)
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r32) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : throw $r16
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : throw $r16 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : exitmonitor r0
org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : exitmonitor r0 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.getSSLConnection : throw $r27
