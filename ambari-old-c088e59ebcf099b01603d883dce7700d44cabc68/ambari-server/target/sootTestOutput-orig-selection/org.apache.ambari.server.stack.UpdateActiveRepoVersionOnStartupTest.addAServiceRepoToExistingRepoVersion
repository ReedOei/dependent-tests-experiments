org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r16 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r16
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r16 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RepositoryVersionDAO;")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RepositoryVersionDAO;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r18 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r17
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r18 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r17 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> = $r18
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> = $r18 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r19 = new org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r19 = new org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r20 = class "Lorg/apache/ambari/server/state/stack/upgrade/RepositoryVersionHelper;"
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r20 = class "Lorg/apache/ambari/server/state/stack/upgrade/RepositoryVersionHelper;" >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r3 = virtualinvoke $r20.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("gson")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r3 = virtualinvoke $r20.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("gson") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r21 = new com.google.gson.Gson
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r21 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r21.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r21.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r19, $r21)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r19, $r21) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r4 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r22
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r4 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r22 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManager;")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManager;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r5 = (org.apache.ambari.server.stack.StackManager) $r23
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r5 = (org.apache.ambari.server.stack.StackManager) $r23 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r24 = virtualinvoke r4.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.stack.StackManager getStackManager()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r24 = virtualinvoke r4.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.stack.StackManager getStackManager()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r25 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r24)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r25 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r25.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r25.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r27 = new org.apache.ambari.server.orm.entities.ClusterEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r27 = new org.apache.ambari.server.orm.entities.ClusterEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r28 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r28 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>($r28)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity.setClusterName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_set_clusterName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ClusterEntity.setClusterName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_set_clusterName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("clusterName")
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("clusterName") >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : $r2 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String clusterName>
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : $r2 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("clusterName", $r2, r1)
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("clusterName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : r0.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String clusterName> = r1
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_clusterName : r0.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r30 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r29)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r30 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r31 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r27)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r31 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r30.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r31)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r30.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r33 = new org.apache.ambari.server.orm.entities.StackEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r33 = new org.apache.ambari.server.orm.entities.StackEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity.setStackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity.setStackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackName")
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackName") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName>
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackName", $r2, r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> = r1
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("2.3")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("2.3") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity.setStackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackVersion(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity.setStackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackVersion(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackVersion")
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackVersion") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion>
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackVersion", $r2, r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackVersion", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> = r1
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setDesiredStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setDesiredStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33) >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity.setDesiredStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_set_desiredStack(org.apache.ambari.server.orm.entities.StackEntity)>(r1)
org.apache.ambari.server.orm.entities.ClusterEntity.setDesiredStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_set_desiredStack(org.apache.ambari.server.orm.entities.StackEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("desiredStack")
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("desiredStack") >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : $r2 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity desiredStack>
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : $r2 = r0.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity desiredStack> >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("desiredStack", $r2, r1)
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ClusterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("desiredStack", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : r0.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity desiredStack> = r1
org.apache.ambari.server.orm.entities.ClusterEntity._persistence_set_desiredStack : r0.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity desiredStack> = r1 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r34 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r34 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.setStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_set_stack(org.apache.ambari.server.orm.entities.StackEntity)>(r1)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.setStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_set_stack(org.apache.ambari.server.orm.entities.StackEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stack")
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stack") >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : $r2 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity stack>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : $r2 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity stack> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stack", $r2, r1)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stack", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity stack> = r1
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_set_stack : r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity stack> = r1 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r35 = staticinvoke <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String resourceAsString(java.lang.String)>("org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartupTest_initialRepos.json")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r35 = staticinvoke <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String resourceAsString(java.lang.String)>("org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartupTest_initialRepos.json") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.resourceAsString : $r1 = staticinvoke <com.google.common.io.Resources: java.net.URL getResource(java.lang.String)>(r0)
