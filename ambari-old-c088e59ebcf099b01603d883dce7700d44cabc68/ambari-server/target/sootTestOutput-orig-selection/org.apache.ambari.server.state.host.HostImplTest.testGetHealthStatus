org.apache.ambari.server.state.fsm.StateMachineFactory.make : $r2 = new org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.make : $r3 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum defaultInitialState>
org.apache.ambari.server.state.fsm.StateMachineFactory.make : $r3 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum defaultInitialState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.make : specialinvoke $r2.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: void <init>(org.apache.ambari.server.state.fsm.StateMachineFactory,java.lang.Object,java.lang.Enum)>(r0, r1, $r3)
org.apache.ambari.server.state.fsm.StateMachineFactory.make : specialinvoke $r2.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: void <init>(org.apache.ambari.server.state.fsm.StateMachineFactory,java.lang.Object,java.lang.Enum)>(r0, r1, $r3) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : $z0 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: boolean optimized>
org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : $z0 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: boolean optimized> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : return $z0
org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : return $z0 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.make : return $r2
org.apache.ambari.server.state.fsm.StateMachineFactory.make : return $r2 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.setCurrentState : r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState> = r1
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.setCurrentState : r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState> = r1 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : if null == r1
org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : if null == r1 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.HostStateEntity: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.HostStateEntity: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : if null != $r5
org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : if null != $r5 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : $r4 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : $r4 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : return $r4
org.apache.ambari.server.state.host.HostImpl.ensureMaintMap : return $r4 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHealthStatus : r1 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.orm.entities.HostStateEntity getHostStateEntity()>()
org.apache.ambari.server.state.host.HostImpl.getHealthStatus : r1 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.orm.entities.HostStateEntity getHostStateEntity()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $r1 = r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.orm.dao.HostStateDAO hostStateDAO>
org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $r1 = r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.orm.dao.HostStateDAO hostStateDAO> >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $l0 = r0.<org.apache.ambari.server.state.host.HostImpl: long hostId>
org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $l0 = r0.<org.apache.ambari.server.state.host.HostImpl: long hostId> >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $r3 = virtualinvoke $r1.<org.apache.ambari.server.orm.dao.HostStateDAO: org.apache.ambari.server.orm.entities.HostStateEntity findByHostId(java.lang.Long)>($r2)
org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : $r3 = virtualinvoke $r1.<org.apache.ambari.server.orm.dao.HostStateDAO: org.apache.ambari.server.orm.entities.HostStateEntity findByHostId(java.lang.Long)>($r2) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : return $r3
org.apache.ambari.server.state.host.HostImpl.getHostStateEntity : return $r3 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHealthStatus : if r1 == null
org.apache.ambari.server.state.host.HostImpl.getHealthStatus : if r1 == null >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r2 = r0.<org.apache.ambari.server.state.host.HostImpl: com.google.gson.Gson gson>
org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r2 = r0.<org.apache.ambari.server.state.host.HostImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.HostStateEntity: java.lang.String getHealthStatus()>()
org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.HostStateEntity: java.lang.String getHealthStatus()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>($r3, class "Lorg/apache/ambari/server/state/HostHealthStatus;")
org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r4 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>($r3, class "Lorg/apache/ambari/server/state/HostHealthStatus;") >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r5 = (org.apache.ambari.server.state.HostHealthStatus) $r4
org.apache.ambari.server.state.host.HostImpl.getHealthStatus : $r5 = (org.apache.ambari.server.state.HostHealthStatus) $r4 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getHealthStatus : return $r5
