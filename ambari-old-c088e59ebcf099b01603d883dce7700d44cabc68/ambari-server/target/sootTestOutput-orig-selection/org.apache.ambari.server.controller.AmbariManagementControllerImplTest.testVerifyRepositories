org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r1 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1
org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1
org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.OperatingSystemRequest.setOsType : r0.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String osType> = r1
org.apache.ambari.server.controller.OperatingSystemRequest.setOsType : r0.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String osType> = r1 >>>>>>>> org.apache.ambari.server.controller.RepositoryRequest.setRepoId : r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String repoId> = r1
org.apache.ambari.server.controller.RepositoryRequest.setRepoId : r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String repoId> = r1 >>>>>>>> org.apache.ambari.server.controller.RepositoryRequest.setRepoName : r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String repoName> = r1
org.apache.ambari.server.controller.RepositoryRequest.setRepoName : r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String repoName> = r1 >>>>>>>> org.apache.ambari.server.controller.RepositoryRequest.setBaseUrl : r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String baseUrl> = r1
org.apache.ambari.server.controller.RepositoryRequest.setBaseUrl : r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String baseUrl> = r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : r3 = (org.apache.ambari.server.controller.RepositoryRequest) $r4
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : r3 = (org.apache.ambari.server.controller.RepositoryRequest) $r4 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : $r5 = virtualinvoke r3.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getBaseUrl()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : $r5 = virtualinvoke r3.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getBaseUrl()>() >>>>>>>> org.apache.ambari.server.controller.RepositoryRequest.getBaseUrl : $r1 = r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String baseUrl>
org.apache.ambari.server.controller.RepositoryRequest.getBaseUrl : $r1 = r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String baseUrl> >>>>>>>> org.apache.ambari.server.controller.RepositoryRequest.getBaseUrl : return $r1
org.apache.ambari.server.controller.RepositoryRequest.getBaseUrl : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : if $r5 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : if $r5 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: void verifyRepository(org.apache.ambari.server.controller.RepositoryRequest)>(r3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepositories : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: void verifyRepository(org.apache.ambari.server.controller.RepositoryRequest)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r10 = new org.apache.ambari.server.controller.internal.URLStreamProvider
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r10 = new org.apache.ambari.server.controller.internal.URLStreamProvider >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r10.<org.apache.ambari.server.controller.internal.URLStreamProvider: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>(3000, 2000, null, null, null)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r10.<org.apache.ambari.server.controller.internal.URLStreamProvider: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>(3000, 2000, null, null, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : virtualinvoke $r10.<org.apache.ambari.server.controller.internal.URLStreamProvider: void setSetupTruststoreForHttps(boolean)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : virtualinvoke $r10.<org.apache.ambari.server.controller.internal.URLStreamProvider: void setSetupTruststoreForHttps(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.setSetupTruststoreForHttps : r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: boolean setupTruststoreForHttps> = z0
org.apache.ambari.server.controller.internal.URLStreamProvider.setSetupTruststoreForHttps : r0.<org.apache.ambari.server.controller.internal.URLStreamProvider: boolean setupTruststoreForHttps> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getRepoName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getRepoName()>() >>>>>>>> org.apache.ambari.server.controller.RepositoryRequest.getRepoName : $r1 = r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String repoName>
org.apache.ambari.server.controller.RepositoryRequest.getRepoName : $r1 = r0.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String repoName> >>>>>>>> org.apache.ambari.server.controller.RepositoryRequest.getRepoName : return $r1
org.apache.ambari.server.controller.RepositoryRequest.getRepoName : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r52 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r52 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r53 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r53 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r11 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r11 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getOsType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.OperatingSystemRequest.getOsType : $r1 = r0.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String osType>
org.apache.ambari.server.controller.OperatingSystemRequest.getOsType : $r1 = r0.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String osType> >>>>>>>> org.apache.ambari.server.controller.OperatingSystemRequest.getOsType : return $r1
org.apache.ambari.server.controller.OperatingSystemRequest.getOsType : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r4 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration: java.lang.String[] getRepoValidationSuffixes(java.lang.String)>($r12)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r4 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration: java.lang.String[] getRepoValidationSuffixes(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : i0 = lengthof r4
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : i10 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : i10 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if i10 >= i0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if i10 >= i0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r6 = r4[i10]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r6 = r4[i10] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r15[0] = r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r15[0] = r3 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r6, $r15)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r6, $r15) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getBaseUrl()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.RepositoryRequest: java.lang.String getBaseUrl()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r54 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r54 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i1 = virtualinvoke r54.<java.lang.String: int length()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i1 = virtualinvoke r54.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i2 = $i1 - 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i2 = $i1 - 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $c3 = virtualinvoke r54.<java.lang.String: char charAt(int)>($i2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $c3 = virtualinvoke r54.<java.lang.String: char charAt(int)>($i2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $c3 == 47
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $c3 == 47 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $c9 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $c9 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $c9 == 47
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $c9 == 47 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i4 = virtualinvoke r54.<java.lang.String: int length()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i4 = virtualinvoke r54.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i5 = $i4 - 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i5 = $i4 - 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $c6 = virtualinvoke r54.<java.lang.String: char charAt(int)>($i5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $c6 = virtualinvoke r54.<java.lang.String: char charAt(int)>($i5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $c6 != 47
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $c6 != 47 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r55 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r55 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r56 = virtualinvoke r55.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r56 = virtualinvoke r55.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $z3 = virtualinvoke $r56.<java.lang.String: boolean startsWith(java.lang.String)>("file://")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $z3 = virtualinvoke $r56.<java.lang.String: boolean startsWith(java.lang.String)>("file://") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $z3 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r22 = "file://"
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r22 = "file://" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i7 = virtualinvoke $r22.<java.lang.String: int length()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $i7 = virtualinvoke $r22.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r57 = virtualinvoke r55.<java.lang.String: java.lang.String substring(int)>($i7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r57 = virtualinvoke r55.<java.lang.String: java.lang.String substring(int)>($i7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r23 = new java.io.File
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r23 = new java.io.File >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>(r57)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>(r57) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $z1 = virtualinvoke $r23.<java.io.File: boolean exists()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $z1 = virtualinvoke $r23.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $z1 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r24 = new java.lang.StringBuilder
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not access base url . ")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not access base url . ") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r52 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r52 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r28 = new java.io.FileNotFoundException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r28 = new java.io.FileNotFoundException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r28.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r52)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r28.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r52) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r53 = $r28
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : r53 = $r28 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if r53 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : if r53 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r13 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r13 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>(r52)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>(r52) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r14 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : $r14 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(r52, r53)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(r52, r53) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.verifyRepository : throw $r14
