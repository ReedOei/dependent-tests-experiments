org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r1 = new org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r1 = new org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0[0] = $r1
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0[0] = $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r0)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7[0] = r1
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r7)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r2 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r2 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r6 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = $r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r8 = r2[i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r8 = r2[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i1 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i1 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r3 = newarray (java.lang.String)[$i1]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r3 = newarray (java.lang.String)[$i1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r4 = interfaceinvoke r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r4 = interfaceinvoke r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = (java.lang.String[]) $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = (java.lang.String[]) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if r2 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : r5 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : r5 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i0 = lengthof r5
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : c1 = r5[i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : c1 = r5[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r0 = newarray (java.lang.Class)[0]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r0 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isOpen", $r0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isOpen", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodIsOpen> = $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodIsOpen> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r5 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r5 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3 = newarray (java.lang.Class)[2]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3 = newarray (java.lang.Class)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r4 = <java.lang.Boolean: java.lang.Class TYPE>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r4 = <java.lang.Boolean: java.lang.Class TYPE> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[1] = $r4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[1] = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("principalExists", $r3)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("principalExists", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodPrincipalExists> = $r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodPrincipalExists> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r8 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r8 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("invokeKAdmin", $r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("invokeKAdmin", $r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodInvokeKAdmin> = $r9
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodInvokeKAdmin> = $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r18 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r18 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r2 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r2 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r6 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = $r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r8 = r2[i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r8 = r2[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i1 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i1 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r3 = newarray (java.lang.String)[$i1]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r3 = newarray (java.lang.String)[$i1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r4 = interfaceinvoke r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r4 = interfaceinvoke r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = (java.lang.String[]) $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = (java.lang.String[]) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if r2 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : r5 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : r5 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i0 = lengthof r5
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : c1 = r5[i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : c1 = r5[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[2]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[0] = class "Ljava/util/Properties;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[0] = class "Ljava/util/Properties;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[1] = class "[Ljavax/naming/ldap/Control;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[1] = class "[Ljavax/naming/ldap/Control;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createInitialLdapContext", $r0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createInitialLdapContext", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext> = $r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r2 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r2 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r6 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = $r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r8 = r2[i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r8 = r2[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i1 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i1 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r3 = newarray (java.lang.String)[$i1]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r3 = newarray (java.lang.String)[$i1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r4 = interfaceinvoke r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r4 = interfaceinvoke r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = (java.lang.String[]) $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = (java.lang.String[]) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if r2 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : r5 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : r5 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i0 = lengthof r5
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : c1 = r5[i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : c1 = r5[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.escapeCharacters : return r1
