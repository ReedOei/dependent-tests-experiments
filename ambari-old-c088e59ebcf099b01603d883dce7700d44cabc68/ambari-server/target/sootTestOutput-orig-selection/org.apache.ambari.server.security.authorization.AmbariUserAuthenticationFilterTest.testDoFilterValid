org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r72 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;")
org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;")
org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15)
org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23)
org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r23 = null
org.apache.ambari.server.state.stack.OsFamily.init : r23 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r14
org.apache.ambari.server.state.stack.OsFamily.init : throw $r14 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20
org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17)
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r22
org.apache.ambari.server.state.stack.OsFamily.init : throw $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r15
org.apache.ambari.server.state.stack.OsFamily.init : throw $r15 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.clearDatabaseAndStopPersistenceService : $r1 = interfaceinvoke r0.<com.google.inject.Injector: com.google.inject.Provider getProvider(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.H2DatabaseCleaner.clearDatabaseAndStopPersistenceService : $r1 = interfaceinvoke r0.<com.google.inject.Injector: com.google.inject.Provider getProvider(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r4 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r4 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r5 = new org.apache.ambari.server.orm.entities.UserEntity
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r5 = new org.apache.ambari.server.orm.entities.UserEntity >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : specialinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void <init>()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : specialinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setUserId(java.lang.Integer)>($r6)
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setUserId(java.lang.Integer)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setUserId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userId(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.UserEntity.setUserId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userId")
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userId") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId>
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userId", $r2, r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> = r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> = r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r7 = staticinvoke <org.apache.ambari.server.security.authorization.UserName: org.apache.ambari.server.security.authorization.UserName fromString(java.lang.String)>("userName")
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r7 = staticinvoke <org.apache.ambari.server.security.authorization.UserName: org.apache.ambari.server.security.authorization.UserName fromString(java.lang.String)>("userName") >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : $r1 = new org.apache.ambari.server.security.authorization.UserName
org.apache.ambari.server.security.authorization.UserName.fromString : $r1 = new org.apache.ambari.server.security.authorization.UserName >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : $r2 = staticinvoke <org.apache.ambari.server.security.authorization.UserName: java.lang.String validated(java.lang.String)>(r0)
org.apache.ambari.server.security.authorization.UserName.fromString : $r2 = staticinvoke <org.apache.ambari.server.security.authorization.UserName: java.lang.String validated(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0)
org.apache.ambari.server.security.authorization.UserName.validated : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : if $z0 == 0
org.apache.ambari.server.security.authorization.UserName.validated : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : $r1 = <org.apache.ambari.server.security.authorization.UserName: char[] FORBIDDEN_CHARS>
org.apache.ambari.server.security.authorization.UserName.validated : $r1 = <org.apache.ambari.server.security.authorization.UserName: char[] FORBIDDEN_CHARS> >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : staticinvoke <org.apache.ambari.server.security.authorization.UserName: void rejectIfContainsAnyOf(java.lang.String,char[])>(r0, $r1)
org.apache.ambari.server.security.authorization.UserName.validated : staticinvoke <org.apache.ambari.server.security.authorization.UserName: void rejectIfContainsAnyOf(java.lang.String,char[])>(r0, $r1) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i0 = lengthof r1
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = 0
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if i2 >= i0
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if i2 >= i0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : c1 = r1[i2]
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : c1 = r1[i2] >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $r3 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1)
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $r3 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3)
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if $z0 == 0
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = i2 + 1
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : goto [?= (branch)]
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : return r0
org.apache.ambari.server.security.authorization.UserName.validated : return r0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : specialinvoke $r1.<org.apache.ambari.server.security.authorization.UserName: void <init>(java.lang.String)>($r2)
org.apache.ambari.server.security.authorization.UserName.fromString : specialinvoke $r1.<org.apache.ambari.server.security.authorization.UserName: void <init>(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : return $r1
org.apache.ambari.server.security.authorization.UserName.fromString : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setUserName(org.apache.ambari.server.security.authorization.UserName)>($r7)
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setUserName(org.apache.ambari.server.security.authorization.UserName)>($r7) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setUserName : $r2 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.UserName: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.UserEntity.setUserName : $r2 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.UserName: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.authorization.UserName.toString : $r1 = r0.<org.apache.ambari.server.security.authorization.UserName: java.lang.String userName>
org.apache.ambari.server.security.authorization.UserName.toString : $r1 = r0.<org.apache.ambari.server.security.authorization.UserName: java.lang.String userName> >>>>>>>> org.apache.ambari.server.security.authorization.UserName.toString : return $r1
org.apache.ambari.server.security.authorization.UserName.toString : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setUserName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userName(java.lang.String)>($r2)
org.apache.ambari.server.orm.entities.UserEntity.setUserName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userName(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userName")
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userName") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName>
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userName", $r2, r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> = r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> = r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r8 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL>
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r8 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setUserType(org.apache.ambari.server.security.authorization.UserType)>($r8)
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setUserType(org.apache.ambari.server.security.authorization.UserType)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setUserType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userType(org.apache.ambari.server.security.authorization.UserType)>(r1)
org.apache.ambari.server.orm.entities.UserEntity.setUserType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userType(org.apache.ambari.server.security.authorization.UserType)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userType")
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userType") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType>
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userType", $r2, r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType> = r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userType : r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType> = r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r4)
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.UserEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r9 = new org.apache.ambari.server.security.authorization.User
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : $r9 = new org.apache.ambari.server.security.authorization.User >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : specialinvoke $r9.<org.apache.ambari.server.security.authorization.User: void <init>(org.apache.ambari.server.orm.entities.UserEntity)>($r5)
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : specialinvoke $r9.<org.apache.ambari.server.security.authorization.User: void <init>(org.apache.ambari.server.orm.entities.UserEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_userId()>()
org.apache.ambari.server.orm.entities.UserEntity.getUserId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_userId()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userId")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userId") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserId : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getUserId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String _persistence_get_userName()>()
org.apache.ambari.server.orm.entities.UserEntity.getUserName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String _persistence_get_userName()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userName")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userName") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserName : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getUserName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date _persistence_get_createTime()>()
org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date _persistence_get_createTime()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("createTime")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("createTime") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date createTime>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date createTime> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType _persistence_get_userType()>()
org.apache.ambari.server.orm.entities.UserEntity.getUserType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType _persistence_get_userType()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userType")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userType") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserType : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getUserType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_ldapUser()>()
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_ldapUser()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("ldapUser")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("ldapUser") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer ldapUser>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer ldapUser> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : if $i0 != 0
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r2 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : goto [?= return $r2]
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : return $r2
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_active()>()
org.apache.ambari.server.orm.entities.UserEntity.getActive : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_active()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("active")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("active") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer active>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer active> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.entities.UserEntity.getActive : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : if $i0 != 0
org.apache.ambari.server.orm.entities.UserEntity.getActive : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.orm.entities.UserEntity.getActive : $r2 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : return $r2
org.apache.ambari.server.orm.entities.UserEntity.getActive : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set _persistence_get_memberEntities()>()
org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set _persistence_get_memberEntities()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("memberEntities")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("memberEntities") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set memberEntities>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set memberEntities> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set _persistence_get_privileges()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set _persistence_get_privileges()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("privileges")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("privileges") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set privileges>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set privileges> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : return $r9
org.apache.ambari.server.security.authorization.AmbariUserAuthenticationFilterTest.combineUser : return $r9 >>>>>>>> org.apache.ambari.server.security.authorization.User.getUserName : $r1 = r0.<org.apache.ambari.server.security.authorization.User: java.lang.String userName>
org.apache.ambari.server.security.authorization.User.getUserName : $r1 = r0.<org.apache.ambari.server.security.authorization.User: java.lang.String userName> >>>>>>>> org.apache.ambari.server.security.authorization.User.getUserName : return $r1
org.apache.ambari.server.security.authorization.User.getUserName : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.User.getUserType : $r1 = r0.<org.apache.ambari.server.security.authorization.User: org.apache.ambari.server.security.authorization.UserType userType>
org.apache.ambari.server.security.authorization.User.getUserType : $r1 = r0.<org.apache.ambari.server.security.authorization.User: org.apache.ambari.server.security.authorization.UserType userType> >>>>>>>> org.apache.ambari.server.security.authorization.User.getUserType : return $r1
org.apache.ambari.server.security.authorization.User.getUserType : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r4 = (javax.servlet.http.HttpServletRequest) r1
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r4 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r5 = (javax.servlet.http.HttpServletResponse) r2
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r5 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("X-Internal-Token")
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("X-Internal-Token") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if r6 == null
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if r6 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r12 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter: org.apache.ambari.server.security.authorization.internal.InternalTokenStorage internalTokenStorage>
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r12 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter: org.apache.ambari.server.security.authorization.internal.InternalTokenStorage internalTokenStorage> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $z0 = virtualinvoke $r12.<org.apache.ambari.server.security.authorization.internal.InternalTokenStorage: boolean isValidInternalToken(java.lang.String)>(r6)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $z0 = virtualinvoke $r12.<org.apache.ambari.server.security.authorization.internal.InternalTokenStorage: boolean isValidInternalToken(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if $z0 == 0
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r7 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("X-Authenticated-User-ID")
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r7 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("X-Authenticated-User-ID") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if r7 == null
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if r7 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $z1 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>(r7)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $z1 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if $z1 != 0
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r13 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter: org.apache.ambari.server.security.authorization.Users users>
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r13 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter: org.apache.ambari.server.security.authorization.Users users> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r9 = virtualinvoke $r13.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.security.authorization.User getUser(java.lang.Integer)>(r8)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r9 = virtualinvoke $r13.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.security.authorization.User getUser(java.lang.Integer)>(r8) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if r9 != null
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if r9 != null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $z2 = virtualinvoke r9.<org.apache.ambari.server.security.authorization.User: boolean isActive()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $z2 = virtualinvoke r9.<org.apache.ambari.server.security.authorization.User: boolean isActive()>() >>>>>>>> org.apache.ambari.server.security.authorization.User.isActive : $z0 = r0.<org.apache.ambari.server.security.authorization.User: boolean active>
org.apache.ambari.server.security.authorization.User.isActive : $z0 = r0.<org.apache.ambari.server.security.authorization.User: boolean active> >>>>>>>> org.apache.ambari.server.security.authorization.User.isActive : return $z0
org.apache.ambari.server.security.authorization.User.isActive : return $z0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if $z2 != 0
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r14 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter: org.apache.ambari.server.security.authorization.Users users>
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r14 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter: org.apache.ambari.server.security.authorization.Users users> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r15 = virtualinvoke r9.<org.apache.ambari.server.security.authorization.User: java.lang.String getUserName()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r15 = virtualinvoke r9.<org.apache.ambari.server.security.authorization.User: java.lang.String getUserName()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r16 = virtualinvoke r9.<org.apache.ambari.server.security.authorization.User: org.apache.ambari.server.security.authorization.UserType getUserType()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r16 = virtualinvoke r9.<org.apache.ambari.server.security.authorization.User: org.apache.ambari.server.security.authorization.UserType getUserType()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r10 = virtualinvoke $r14.<org.apache.ambari.server.security.authorization.Users: java.util.Collection getUserAuthorities(java.lang.String,org.apache.ambari.server.security.authorization.UserType)>($r15, $r16)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : r10 = virtualinvoke $r14.<org.apache.ambari.server.security.authorization.Users: java.util.Collection getUserAuthorities(java.lang.String,org.apache.ambari.server.security.authorization.UserType)>($r15, $r16) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r17 = new org.apache.ambari.server.security.authorization.AmbariUserAuthentication
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r17 = new org.apache.ambari.server.security.authorization.AmbariUserAuthentication >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : specialinvoke $r17.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: void <init>(java.lang.String,org.apache.ambari.server.security.authorization.User,java.util.Collection)>(r6, r9, r10)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : specialinvoke $r17.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: void <init>(java.lang.String,org.apache.ambari.server.security.authorization.User,java.util.Collection)>(r6, r9, r10) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : virtualinvoke $r17.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : virtualinvoke $r17.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r18 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r18 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : interfaceinvoke $r18.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r17)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : interfaceinvoke $r18.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r17) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r19 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : $r19 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = interfaceinvoke r2.<org.springframework.security.core.Authentication: java.lang.String getName()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = interfaceinvoke r2.<org.springframework.security.core.Authentication: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getName : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: org.apache.ambari.server.security.authorization.User user>
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getName : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: org.apache.ambari.server.security.authorization.User user> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getName : $r2 = virtualinvoke $r1.<org.apache.ambari.server.security.authorization.User: java.lang.String getUserName()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getName : $r2 = virtualinvoke $r1.<org.apache.ambari.server.security.authorization.User: java.lang.String getUserName()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getName : return $r2
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getName : return $r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("User", $r19)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("User", $r19) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.authorization.AmbariUserAuthorizationFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.isAuthenticated : $z0 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: boolean authenticated>
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.isAuthenticated : $z0 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: boolean authenticated> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.isAuthenticated : return $z0
