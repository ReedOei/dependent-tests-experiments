org.apache.ambari.server.view.DefaultMasker.mask : $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") >>>>>>>> org.apache.ambari.server.view.DefaultMasker.mask : $r4 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r3)
org.apache.ambari.server.view.DefaultMasker.mask : $r4 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r3) >>>>>>>> org.apache.ambari.server.view.DefaultMasker.mask : return $r4
org.apache.ambari.server.view.DefaultMasker.mask : return $r4 >>>>>>>> org.apache.ambari.server.view.DefaultMasker.unmask : $r3 = new java.lang.String
org.apache.ambari.server.view.DefaultMasker.unmask : $r3 = new java.lang.String >>>>>>>> org.apache.ambari.server.view.DefaultMasker.unmask : $r4 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] decodeBase64(java.lang.String)>(r1)
org.apache.ambari.server.view.DefaultMasker.unmask : $r4 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] decodeBase64(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.DefaultMasker.unmask : specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8")
org.apache.ambari.server.view.DefaultMasker.unmask : specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8") >>>>>>>> org.apache.ambari.server.view.DefaultMasker.unmask : return $r3
