org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r3 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r4 = new org.apache.ambari.server.security.CertGenerationTest$SecurityModule
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r4 = new org.apache.ambari.server.security.CertGenerationTest$SecurityModule >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r4.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: void <init>(org.apache.ambari.server.security.CertGenerationTest$1)>(null)
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r4.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: void <init>(org.apache.ambari.server.security.CertGenerationTest$1)>(null) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r3[0] = $r4
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r3[0] = $r4 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r5 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r3)
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r5 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r3) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljava/util/Properties;")
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljava/util/Properties;") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r2 = staticinvoke <org.apache.ambari.server.security.CertGenerationTest: java.util.Properties buildTestProperties()>()
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r2 = staticinvoke <org.apache.ambari.server.security.CertGenerationTest: java.util.Properties buildTestProperties()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r0 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp>
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r0 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r0.<org.junit.rules.TemporaryFolder: void create()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r0.<org.junit.rules.TemporaryFolder: void create()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : goto [?= $r1 = new java.util.Properties]
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : goto [?= $r1 = new java.util.Properties] >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r1 = new java.util.Properties
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r1 = new java.util.Properties >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : specialinvoke $r1.<java.util.Properties: void <init>()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : specialinvoke $r1.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_KSTR_DIR>
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_KSTR_DIR> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r4 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp>
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r4 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r5 = virtualinvoke $r4.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r5 = virtualinvoke $r4.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r3, $r6)
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r3, $r6) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r8 = new java.util.Random
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r8 = new java.util.Random >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : specialinvoke $r8.<java.util.Random: void <init>()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : specialinvoke $r8.<java.util.Random: void <init>()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $f0 = virtualinvoke $r8.<java.util.Random: float nextFloat()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $f0 = virtualinvoke $r8.<java.util.Random: float nextFloat()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $f1 = $f0 * 100.0F
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $f1 = $f0 * 100.0F >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1)
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $i0 = (int) $f2
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $i0 = (int) $f2 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : <org.apache.ambari.server.security.CertGenerationTest: int passLen> = $i0
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : <org.apache.ambari.server.security.CertGenerationTest: int passLen> = $i0 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_CRT_PASS_LEN>
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_CRT_PASS_LEN> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $i1 = <org.apache.ambari.server.security.CertGenerationTest: int passLen>
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $i1 = <org.apache.ambari.server.security.CertGenerationTest: int passLen> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1)
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r10, $r11)
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r10, $r11) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r13 = staticinvoke <org.apache.commons.lang.RandomStringUtils: java.lang.String randomAlphabetic(int)>(20)
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r13 = staticinvoke <org.apache.commons.lang.RandomStringUtils: java.lang.String randomAlphabetic(int)>(20) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : <org.apache.ambari.server.security.CertGenerationTest: java.lang.String passFileName> = $r13
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : <org.apache.ambari.server.security.CertGenerationTest: java.lang.String passFileName> = $r13 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r14 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_CRT_PASS_FILE>
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r14 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_CRT_PASS_FILE> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r15 = virtualinvoke $r14.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r15 = virtualinvoke $r14.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r16 = <org.apache.ambari.server.security.CertGenerationTest: java.lang.String passFileName>
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : $r16 = <org.apache.ambari.server.security.CertGenerationTest: java.lang.String passFileName> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r15, $r16)
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r15, $r16) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : return $r1
org.apache.ambari.server.security.CertGenerationTest.buildTestProperties : return $r1 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r4 = staticinvoke <org.apache.ambari.server.security.CertGenerationTest: java.lang.reflect.Constructor getConfigurationConstructor()>()
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r4 = staticinvoke <org.apache.ambari.server.security.CertGenerationTest: java.lang.reflect.Constructor getConfigurationConstructor()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r2 = class "Lorg/apache/ambari/server/configuration/Configuration;"
org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r2 = class "Lorg/apache/ambari/server/configuration/Configuration;" >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r1 = newarray (java.lang.Class)[1]
org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r1 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r1[0] = class "Ljava/util/Properties;"
org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r1[0] = class "Ljava/util/Properties;" >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1)
org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : return $r3
org.apache.ambari.server.security.CertGenerationTest.getConfigurationConstructor : return $r3 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor)>($r4)
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor)>($r4) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r6 = virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r6 = virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : interfaceinvoke $r6.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : interfaceinvoke $r6.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r8 = newarray (java.lang.Class)[1]
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r8 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r8[0] = class "Lorg/apache/ambari/server/security/CertGenerationTest;"
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : $r8[0] = class "Lorg/apache/ambari/server/security/CertGenerationTest;" >>>>>>>> org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: void requestStaticInjection(java.lang.Class[])>($r8)
org.apache.ambari.server.security.CertGenerationTest$SecurityModule.configure : virtualinvoke r0.<org.apache.ambari.server.security.CertGenerationTest$SecurityModule: void requestStaticInjection(java.lang.Class[])>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $z0 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX>
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $z0 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : if $z0 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6 = newarray (java.lang.String)[3]
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[0] = "chmod"
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[0] = "chmod" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[1] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[1] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[2] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[2] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r6)
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r6) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r1 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map)>(r0, null)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r1 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map)>(r0, null) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r2 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>(r0, r1, null, 0)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r2 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>(r0, r1, null, 0) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if z0 == 0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r19 = r0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r19 = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r6 = new java.lang.ProcessBuilder
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r6 = new java.lang.ProcessBuilder >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : specialinvoke $r6.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>(r19)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : specialinvoke $r6.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>(r19) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r1 == null
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r1 == null >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if $z1 == 0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r22 = virtualinvoke $r6.<java.lang.ProcessBuilder: java.lang.Process start()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r22 = virtualinvoke $r6.<java.lang.ProcessBuilder: java.lang.Process start()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r24 = virtualinvoke r22.<java.lang.Process: java.io.InputStream getInputStream()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r24 = virtualinvoke r22.<java.lang.Process: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r2 == null
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r2 == null >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : virtualinvoke r22.<java.lang.Process: int waitFor()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : virtualinvoke r22.<java.lang.Process: int waitFor()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r29 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: java.lang.String streamToString(java.io.InputStream)>(r24)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r29 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: java.lang.String streamToString(java.io.InputStream)>(r24) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r4 = new java.io.InputStreamReader
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r4 = new java.io.InputStreamReader >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r0)
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r0) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r5 = new java.io.BufferedReader
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r5 = new java.io.BufferedReader >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4)
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r7 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>()
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r7 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : if $r7 == null
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : if $r7 == null >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.streamToString : return $r8
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : return $r8 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r30 = virtualinvoke r22.<java.lang.Process: java.io.InputStream getErrorStream()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r30 = virtualinvoke r22.<java.lang.Process: java.io.InputStream getErrorStream()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r31 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: java.lang.String streamToString(java.io.InputStream)>($r30)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r31 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: java.lang.String streamToString(java.io.InputStream)>($r30) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : i6 = virtualinvoke r22.<java.lang.Process: int exitValue()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : i6 = virtualinvoke r22.<java.lang.Process: int exitValue()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r32 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r32 = new org.apache.ambari.server.utils.ShellCommandUtil$Result >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : specialinvoke $r32.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(i6, r29, r31)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : specialinvoke $r32.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(i6, r29, r31) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : return $r32
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : return $r32 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : return $r2
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : return $r2 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : return $r1
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : return $r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : goto [?= return]
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : goto [?= return] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.init : <org.apache.ambari.server.security.CertGenerationTest: org.apache.ambari.server.security.CertificateManager certMan> = r0
org.apache.ambari.server.security.CertGenerationTest.init : <org.apache.ambari.server.security.CertGenerationTest: org.apache.ambari.server.security.CertificateManager certMan> = r0 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : <org.apache.ambari.server.security.CertGenerationTest: com.google.inject.Injector injector> = $r5
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : <org.apache.ambari.server.security.CertGenerationTest: com.google.inject.Injector injector> = $r5 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r6 = <org.apache.ambari.server.security.CertGenerationTest: com.google.inject.Injector injector>
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r6 = <org.apache.ambari.server.security.CertGenerationTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r7 = interfaceinvoke $r6.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/CertificateManager;")
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r7 = interfaceinvoke $r6.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/CertificateManager;") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r8 = (org.apache.ambari.server.security.CertificateManager) $r7
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r8 = (org.apache.ambari.server.security.CertificateManager) $r7 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : <org.apache.ambari.server.security.CertGenerationTest: org.apache.ambari.server.security.CertificateManager certMan> = $r8
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : <org.apache.ambari.server.security.CertGenerationTest: org.apache.ambari.server.security.CertificateManager certMan> = $r8 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r9 = new java.io.File
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r9 = new java.io.File >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>("conf/unix/ca.config")
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>("conf/unix/ca.config") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : r42 = $r9
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : r42 = $r9 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $z0 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $z0 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : if $z0 == 0
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r11 = new java.io.File
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r11 = new java.io.File >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r12 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp>
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r12 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r13 = virtualinvoke $r12.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r13 = virtualinvoke $r12.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r11.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r14, "ca.config")
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r11.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r14, "ca.config") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r15 = new java.io.File
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r15 = new java.io.File >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r16 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp>
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r16 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r17 = virtualinvoke $r16.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r17 = virtualinvoke $r16.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r18 = virtualinvoke $r17.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r18 = virtualinvoke $r17.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r15.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r18, "newcerts")
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r15.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r18, "newcerts") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : virtualinvoke $r15.<java.io.File: boolean mkdirs()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : virtualinvoke $r15.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r19 = new java.io.File
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r19 = new java.io.File >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r20 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp>
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r20 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r21 = virtualinvoke $r20.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r21 = virtualinvoke $r20.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r19.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r22, "index.txt")
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r19.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r22, "index.txt") >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : virtualinvoke $r19.<java.io.File: boolean createNewFile()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : virtualinvoke $r19.<java.io.File: boolean createNewFile()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r23 = new java.io.FileInputStream
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : $r23 = new java.io.FileInputStream >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r23.<java.io.FileInputStream: void <init>(java.io.File)>(r42)
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : specialinvoke $r23.<java.io.FileInputStream: void <init>(java.io.File)>(r42) >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : virtualinvoke $r41.<java.io.IOException: void printStackTrace()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : virtualinvoke $r41.<java.io.IOException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : staticinvoke <junit.framework.TestCase: void fail()>()
org.apache.ambari.server.security.CertGenerationTest.setUpBeforeClass : staticinvoke <junit.framework.TestCase: void fail()>() >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.tearDownAfterClass : $r0 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp>
org.apache.ambari.server.security.CertGenerationTest.tearDownAfterClass : $r0 = <org.apache.ambari.server.security.CertGenerationTest: org.junit.rules.TemporaryFolder temp> >>>>>>>> org.apache.ambari.server.security.CertGenerationTest.tearDownAfterClass : virtualinvoke $r0.<org.junit.rules.TemporaryFolder: void delete()>()
org.apache.ambari.server.security.CertGenerationTest.tearDownAfterClass : virtualinvoke $r0.<org.junit.rules.TemporaryFolder: void delete()>() >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : r0 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>()
org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : r0 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml>
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1]
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;"
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;" >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions>
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY")
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version>
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build>
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker>
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system>
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal>
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;"
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;" >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>()
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : $r2 = staticinvoke <org.apache.ambari.server.view.configuration.ResourceConfigTest: java.util.List getResourceConfigs()>()
org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : $r2 = staticinvoke <org.apache.ambari.server.view.configuration.ResourceConfigTest: java.util.List getResourceConfigs()>() >>>>>>>> org.apache.ambari.server.view.configuration.ResourceConfigTest.getResourceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.view.configuration.ResourceConfigTest.getResourceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ResourceConfigTest.getResourceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getResources()>()
org.apache.ambari.server.view.configuration.ResourceConfigTest.getResourceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getResources()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources>
org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getResources : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources>
org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getResources : return $r2 >>>>>>>> org.apache.ambari.server.view.configuration.ResourceConfigTest.getResourceConfigs : return $r1
org.apache.ambari.server.view.configuration.ResourceConfigTest.getResourceConfigs : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : r1 = (org.apache.ambari.server.view.configuration.ResourceConfig) $r3
org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : r1 = (org.apache.ambari.server.view.configuration.ResourceConfig) $r3 >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : $r4 = new org.apache.ambari.server.view.ViewSubResourceDefinition
org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : $r4 = new org.apache.ambari.server.view.ViewSubResourceDefinition >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : specialinvoke $r4.<org.apache.ambari.server.view.ViewSubResourceDefinition: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.ResourceConfig)>(r0, r1)
org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : specialinvoke $r4.<org.apache.ambari.server.view.ViewSubResourceDefinition: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.ResourceConfig)>(r0, r1) >>>>>>>> org.apache.ambari.server.view.configuration.ResourceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ResourceConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ResourceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ResourceConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ResourceConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ResourceConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : return $r4
org.apache.ambari.server.view.ViewSubResourceDefinitionTest.getViewSubResourceDefinition : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinition.getPluralName : $r1 = r0.<org.apache.ambari.server.view.ViewSubResourceDefinition: org.apache.ambari.server.view.configuration.ResourceConfig resourceConfiguration>
org.apache.ambari.server.view.ViewSubResourceDefinition.getPluralName : $r1 = r0.<org.apache.ambari.server.view.ViewSubResourceDefinition: org.apache.ambari.server.view.configuration.ResourceConfig resourceConfiguration> >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinition.getPluralName : $r2 = virtualinvoke $r1.<org.apache.ambari.server.view.configuration.ResourceConfig: java.lang.String getPluralName()>()
org.apache.ambari.server.view.ViewSubResourceDefinition.getPluralName : $r2 = virtualinvoke $r1.<org.apache.ambari.server.view.configuration.ResourceConfig: java.lang.String getPluralName()>() >>>>>>>> org.apache.ambari.server.view.configuration.ResourceConfig.getPluralName : $r1 = r0.<org.apache.ambari.server.view.configuration.ResourceConfig: java.lang.String pluralName>
org.apache.ambari.server.view.configuration.ResourceConfig.getPluralName : $r1 = r0.<org.apache.ambari.server.view.configuration.ResourceConfig: java.lang.String pluralName> >>>>>>>> org.apache.ambari.server.view.configuration.ResourceConfig.getPluralName : return $r1
org.apache.ambari.server.view.configuration.ResourceConfig.getPluralName : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewSubResourceDefinition.getPluralName : return $r2
