org.apache.ambari.server.orm.entities.UserEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.UserEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.UserEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : $r1 = new org.apache.ambari.server.security.authorization.UserName
org.apache.ambari.server.security.authorization.UserName.fromString : $r1 = new org.apache.ambari.server.security.authorization.UserName >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : $r2 = staticinvoke <org.apache.ambari.server.security.authorization.UserName: java.lang.String validated(java.lang.String)>(r0)
org.apache.ambari.server.security.authorization.UserName.fromString : $r2 = staticinvoke <org.apache.ambari.server.security.authorization.UserName: java.lang.String validated(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0)
org.apache.ambari.server.security.authorization.UserName.validated : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : if $z0 == 0
org.apache.ambari.server.security.authorization.UserName.validated : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : $r1 = <org.apache.ambari.server.security.authorization.UserName: char[] FORBIDDEN_CHARS>
org.apache.ambari.server.security.authorization.UserName.validated : $r1 = <org.apache.ambari.server.security.authorization.UserName: char[] FORBIDDEN_CHARS> >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : staticinvoke <org.apache.ambari.server.security.authorization.UserName: void rejectIfContainsAnyOf(java.lang.String,char[])>(r0, $r1)
org.apache.ambari.server.security.authorization.UserName.validated : staticinvoke <org.apache.ambari.server.security.authorization.UserName: void rejectIfContainsAnyOf(java.lang.String,char[])>(r0, $r1) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i0 = lengthof r1
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = 0
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if i2 >= i0
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if i2 >= i0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : c1 = r1[i2]
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : c1 = r1[i2] >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $r3 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1)
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $r3 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3)
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if $z0 == 0
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = i2 + 1
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : goto [?= (branch)]
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : return r0
org.apache.ambari.server.security.authorization.UserName.validated : return r0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : specialinvoke $r1.<org.apache.ambari.server.security.authorization.UserName: void <init>(java.lang.String)>($r2)
org.apache.ambari.server.security.authorization.UserName.fromString : specialinvoke $r1.<org.apache.ambari.server.security.authorization.UserName: void <init>(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.fromString : return $r1
org.apache.ambari.server.security.authorization.UserName.fromString : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setUserName : $r2 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.UserName: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.UserEntity.setUserName : $r2 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.UserName: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.authorization.UserName.toString : $r1 = r0.<org.apache.ambari.server.security.authorization.UserName: java.lang.String userName>
org.apache.ambari.server.security.authorization.UserName.toString : $r1 = r0.<org.apache.ambari.server.security.authorization.UserName: java.lang.String userName> >>>>>>>> org.apache.ambari.server.security.authorization.UserName.toString : return $r1
org.apache.ambari.server.security.authorization.UserName.toString : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setUserName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userName(java.lang.String)>($r2)
org.apache.ambari.server.orm.entities.UserEntity.setUserName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userName(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userName")
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userName") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName>
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userName", $r2, r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> = r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userName : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.setUserId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userId(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.UserEntity.setUserId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userId")
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetchedForSet(java.lang.String)>("userId") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId>
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : $r2 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userId", $r2, r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> = r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_set_userId : r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_userId()>()
org.apache.ambari.server.orm.entities.UserEntity.getUserId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_userId()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userId")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userId") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.UserEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer userId> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserId : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getUserId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String _persistence_get_userName()>()
org.apache.ambari.server.orm.entities.UserEntity.getUserName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String _persistence_get_userName()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userName")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userName") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String userName> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserName : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getUserName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date _persistence_get_createTime()>()
org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date _persistence_get_createTime()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("createTime")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("createTime") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date createTime>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Date createTime> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_createTime : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getCreateTime : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType _persistence_get_userType()>()
org.apache.ambari.server.orm.entities.UserEntity.getUserType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType _persistence_get_userType()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userType")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("userType") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType userType> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_userType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getUserType : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getUserType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_ldapUser()>()
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_ldapUser()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("ldapUser")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("ldapUser") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer ldapUser>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer ldapUser> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_ldapUser : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : if $i0 != 0
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : $r2 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : goto [?= return $r2]
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : return $r2
org.apache.ambari.server.orm.entities.UserEntity.getLdapUser : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_active()>()
org.apache.ambari.server.orm.entities.UserEntity.getActive : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_active()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("active")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("active") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer active>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer active> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_active : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.entities.UserEntity.getActive : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : if $i0 != 0
org.apache.ambari.server.orm.entities.UserEntity.getActive : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.orm.entities.UserEntity.getActive : $r2 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getActive : return $r2
org.apache.ambari.server.orm.entities.UserEntity.getActive : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set _persistence_get_memberEntities()>()
org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set _persistence_get_memberEntities()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("memberEntities")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("memberEntities") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set memberEntities>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: java.util.Set memberEntities> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_memberEntities : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getMemberEntities : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_checkFetched(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : return $r1
org.apache.ambari.server.orm.entities.UserEntity._persistence_get_principal : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : return $r1
org.apache.ambari.server.orm.entities.UserEntity.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set _persistence_get_privileges()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set _persistence_get_privileges()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("privileges")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("privileges") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set privileges>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.util.Set privileges> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_privileges : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity.getPrivileges : return $r1 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton>
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton> >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r1 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r1 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r6 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r6 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $r6 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $r6 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r7 = interfaceinvoke $r6.<org.springframework.security.core.Authentication: java.lang.Object getPrincipal()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r7 = interfaceinvoke $r6.<org.springframework.security.core.Authentication: java.lang.Object getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: org.apache.ambari.server.security.authorization.User getPrincipal()>()
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: org.apache.ambari.server.security.authorization.User getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: org.apache.ambari.server.security.authorization.User user>
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariUserAuthentication: org.apache.ambari.server.security.authorization.User user> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getPrincipal : return $r1
org.apache.ambari.server.security.authorization.AmbariUserAuthentication.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z0 = $r7 instanceof org.springframework.security.core.userdetails.UserDetails
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z0 = $r7 instanceof org.springframework.security.core.userdetails.UserDetails >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z0 == 0
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z1 = $r7 instanceof org.apache.ambari.server.security.authorization.User
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z1 = $r7 instanceof org.apache.ambari.server.security.authorization.User >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z1 == 0
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r4 = (org.apache.ambari.server.security.authorization.User) $r7
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r4 = (org.apache.ambari.server.security.authorization.User) $r7 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r8 = virtualinvoke $r4.<org.apache.ambari.server.security.authorization.User: java.lang.String getUserName()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r8 = virtualinvoke $r4.<org.apache.ambari.server.security.authorization.User: java.lang.String getUserName()>() >>>>>>>> org.apache.ambari.server.security.authorization.User.getUserName : $r1 = r0.<org.apache.ambari.server.security.authorization.User: java.lang.String userName>
org.apache.ambari.server.security.authorization.User.getUserName : $r1 = r0.<org.apache.ambari.server.security.authorization.User: java.lang.String userName> >>>>>>>> org.apache.ambari.server.security.authorization.User.getUserName : return $r1
org.apache.ambari.server.security.authorization.User.getUserName : return $r1 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= return r8]
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= return r8] >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : return r8
