org.apache.ambari.server.state.AutoDeployInfo.setEnabled : r0.<org.apache.ambari.server.state.AutoDeployInfo: boolean m_enabled> = z0 >>>>>>>> org.apache.ambari.server.state.AutoDeployInfo.setCoLocate : r0.<org.apache.ambari.server.state.AutoDeployInfo: java.lang.String m_coLocate> = r1
org.apache.ambari.server.state.AutoDeployInfo.setCoLocate : r0.<org.apache.ambari.server.state.AutoDeployInfo: java.lang.String m_coLocate> = r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r9 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r9 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r8 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r8 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r10 = interfaceinvoke $r8.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r10 = interfaceinvoke $r8.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating topology for blueprint: [{}]", $r10)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating topology for blueprint: [{}]", $r10) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r11 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r11 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.topology.Blueprint: java.util.Map getHostGroups()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.topology.Blueprint: java.util.Map getHostGroups()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r1 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r1 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r13 = new java.util.HashMap
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r13 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : specialinvoke $r13.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : specialinvoke $r13.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r27 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r27 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z0 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r24 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r24 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r28 = (org.apache.ambari.server.topology.HostGroup) $r24
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r28 = (org.apache.ambari.server.topology.HostGroup) $r24 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r29 = specialinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: java.util.Map validateHostGroup(org.apache.ambari.server.topology.HostGroup)>(r28)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r29 = specialinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: java.util.Map validateHostGroup(org.apache.ambari.server.topology.HostGroup)>(r28) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r13 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r13 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r14 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r14 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating hostgroup: {}", $r14)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating hostgroup: {}", $r14) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r15 = new java.util.HashMap
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r16 = new java.util.HashSet
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r17 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r17 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>($r17)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>($r17) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r3 = virtualinvoke $r16.<java.util.HashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r3 = virtualinvoke $r16.<java.util.HashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z1 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r4 = (java.lang.String) $r18
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r4 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r19 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r19 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing component: {}", r4)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing component: {}", r4) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r20 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r20 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getDependenciesForComponent(java.lang.String)>(r4)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getDependenciesForComponent(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r5 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r5 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z13 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z13 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z13 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z13 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r22 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r22 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r6 = (org.apache.ambari.server.state.DependencyInfo) $r22
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r6 = (org.apache.ambari.server.state.DependencyInfo) $r22 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r23 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r23 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r24 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r24 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing dependency [{}] for component [{}]", $r24, r4)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing dependency [{}] for component [{}]", $r24, r4) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r25 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r25 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r7 = virtualinvoke $r25.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getConditionalServiceForDependency(org.apache.ambari.server.state.DependencyInfo)>(r6)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r7 = virtualinvoke $r25.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getConditionalServiceForDependency(org.apache.ambari.server.state.DependencyInfo)>(r6) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r7 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r7 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r26 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r26 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r27 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r27 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r28 = virtualinvoke $r26.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>($r27)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r28 = virtualinvoke $r26.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z0 = virtualinvoke $r28.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z0 = virtualinvoke $r28.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z0 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r8 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getScope()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r8 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getScope()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r9 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r9 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r10 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r10 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z14 = 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z14 = 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z2 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: boolean hasDependencyConditions()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z2 = virtualinvoke r6.<org.apache.ambari.server.state.DependencyInfo: boolean hasDependencyConditions()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z2 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("cluster")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("cluster") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z3 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("host")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("host") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z4 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r32 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r32 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z6 = interfaceinvoke $r32.<java.util.Collection: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z6 = interfaceinvoke $r32.<java.util.Collection: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z6 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z6 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r10 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r10 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z14 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z14 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r29 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r29 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r53 = (java.util.Collection) $r29
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r53 = (java.util.Collection) $r29 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r53 != null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r53 != null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r30 = new java.util.HashSet
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r30 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r30.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r30.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r53 = $r30
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r53 = $r30 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r30)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r30) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r53.<java.util.Collection: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r53.<java.util.Collection: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z13 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z13 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : return $r15
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : return $r15 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z8 = interfaceinvoke r29.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z8 = interfaceinvoke r29.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z8 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z8 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r25 = interfaceinvoke r28.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r25 = interfaceinvoke r28.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, r29)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, r29) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : goto [?= $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : goto [?= $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r14 = new java.util.HashSet
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r14 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : specialinvoke $r14.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : specialinvoke $r14.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r15 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r15 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r31 = interfaceinvoke $r15.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r31 = interfaceinvoke $r15.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r32 = interfaceinvoke r31.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r32 = interfaceinvoke r31.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z1 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r16 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r16 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r3 = (java.lang.String) $r16
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r3 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r17 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r17 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r18 = virtualinvoke $r17.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getComponents(java.lang.String)>(r3)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r18 = virtualinvoke $r17.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getComponents(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r4 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r4 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z4 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r5 = (java.lang.String) $r19
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r5 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r20 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r20 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r6 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.topology.Cardinality getCardinality(java.lang.String)>(r5)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r6 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.topology.Cardinality getCardinality(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r21 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r21 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r7 = virtualinvoke $r21.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.AutoDeployInfo getAutoDeployInfo(java.lang.String)>(r5)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : r7 = virtualinvoke $r21.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.AutoDeployInfo getAutoDeployInfo(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z5 = virtualinvoke r6.<org.apache.ambari.server.topology.Cardinality: boolean isAll()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z5 = virtualinvoke r6.<org.apache.ambari.server.topology.Cardinality: boolean isAll()>() >>>>>>>> org.apache.ambari.server.topology.Cardinality.isAll : $z0 = r0.<org.apache.ambari.server.topology.Cardinality: boolean isAll>
org.apache.ambari.server.topology.Cardinality.isAll : $z0 = r0.<org.apache.ambari.server.topology.Cardinality: boolean isAll> >>>>>>>> org.apache.ambari.server.topology.Cardinality.isAll : return $z0
org.apache.ambari.server.topology.Cardinality.isAll : return $z0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z5 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r22 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: java.util.Collection verifyComponentCardinalityCount(java.lang.String,org.apache.ambari.server.topology.Cardinality,org.apache.ambari.server.state.AutoDeployInfo)>(r5, r6, r7)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $r22 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: java.util.Collection verifyComponentCardinalityCount(java.lang.String,org.apache.ambari.server.topology.Cardinality,org.apache.ambari.server.state.AutoDeployInfo)>(r5, r6, r7) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r8 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r8 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r9 = interfaceinvoke $r8.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r9 = interfaceinvoke $r8.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : r3 = virtualinvoke $r9.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : r3 = virtualinvoke $r9.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : return $r1
org.apache.ambari.server.topology.Configuration.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r10 = new java.util.HashSet
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r10 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : specialinvoke $r10.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : specialinvoke $r10.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $z0 = staticinvoke <org.apache.ambari.server.topology.ClusterTopologyImpl: boolean isNameNodeHAEnabled(java.util.Map)>(r3)
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $z0 = staticinvoke <org.apache.ambari.server.topology.ClusterTopologyImpl: boolean isNameNodeHAEnabled(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>("hdfs-site")
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>("hdfs-site") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z0 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 0
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : return $z3
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : return $z3 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : if $z0 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r28 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r28 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r29 = interfaceinvoke $r28.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getHostGroupsForComponent(java.lang.String)>(r1)
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $r29 = interfaceinvoke $r28.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getHostGroupsForComponent(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : i0 = interfaceinvoke $r29.<java.util.Collection: int size()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : i0 = interfaceinvoke $r29.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $z9 = virtualinvoke r27.<org.apache.ambari.server.topology.Cardinality: boolean isValidCount(int)>(i0)
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : $z9 = virtualinvoke r27.<org.apache.ambari.server.topology.Cardinality: boolean isValidCount(int)>(i0) >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : $z0 = r0.<org.apache.ambari.server.topology.Cardinality: boolean isAll>
org.apache.ambari.server.topology.Cardinality.isValidCount : $z0 = r0.<org.apache.ambari.server.topology.Cardinality: boolean isAll> >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : if $z0 == 0
org.apache.ambari.server.topology.Cardinality.isValidCount : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : $i1 = r0.<org.apache.ambari.server.topology.Cardinality: int exact>
org.apache.ambari.server.topology.Cardinality.isValidCount : $i1 = r0.<org.apache.ambari.server.topology.Cardinality: int exact> >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : if $i1 == -1
org.apache.ambari.server.topology.Cardinality.isValidCount : if $i1 == -1 >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : $i4 = r0.<org.apache.ambari.server.topology.Cardinality: int exact>
org.apache.ambari.server.topology.Cardinality.isValidCount : $i4 = r0.<org.apache.ambari.server.topology.Cardinality: int exact> >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : if i0 != $i4
org.apache.ambari.server.topology.Cardinality.isValidCount : if i0 != $i4 >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : $z1 = 1
org.apache.ambari.server.topology.Cardinality.isValidCount : $z1 = 1 >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : goto [?= return $z1]
org.apache.ambari.server.topology.Cardinality.isValidCount : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.topology.Cardinality.isValidCount : return $z1
org.apache.ambari.server.topology.Cardinality.isValidCount : return $z1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : if $z9 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : return $r10
org.apache.ambari.server.topology.BlueprintValidatorImpl.verifyComponentCardinalityCount : return $r10 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : interfaceinvoke $r14.<java.util.Collection: boolean addAll(java.util.Collection)>($r22)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : interfaceinvoke $r14.<java.util.Collection: boolean addAll(java.util.Collection)>($r22) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : goto [?= $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : goto [?= $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z2 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : $z2 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z2 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : specialinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: void generateInvalidTopologyException(java.util.Map,java.util.Collection)>($r13, $r14)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateTopology : specialinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: void generateInvalidTopologyException(java.util.Map,java.util.Collection)>($r13, $r14) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : r15 = "Cluster Topology validation failed."
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : r15 = "Cluster Topology validation failed." >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : if $z0 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : if $z1 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15)
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Unresolved component dependencies: ")
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Unresolved component dependencies: ") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15)
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  To disable topology validation and create the blueprint, add the following to the end of the url: \'?validate_topology=false\'")
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  To disable topology validation and create the blueprint, add the following to the end of the url: \'?validate_topology=false\'") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r6 = new org.apache.ambari.server.topology.InvalidTopologyException
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : $r6 = new org.apache.ambari.server.topology.InvalidTopologyException >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : specialinvoke $r6.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>(r16)
org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : specialinvoke $r6.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.generateInvalidTopologyException : throw $r6
