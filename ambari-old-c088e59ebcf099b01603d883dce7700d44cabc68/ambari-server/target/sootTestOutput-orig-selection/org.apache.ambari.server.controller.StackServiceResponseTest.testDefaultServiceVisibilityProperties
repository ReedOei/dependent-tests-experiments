org.apache.ambari.server.state.ServiceInfo.ensureMandatoryServiceProperties : $r2 = specialinvoke r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map ensureVisibilityServiceProperties(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r2 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r2 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r3 = virtualinvoke $r2.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r3 = virtualinvoke $r2.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r3)
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : if $z0 != 0
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r18 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r18 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r19 = virtualinvoke $r18.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r19 = virtualinvoke $r18.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r20 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r20 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r21 = virtualinvoke $r20.<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r21 = virtualinvoke $r20.<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r21)
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r21) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r4 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r4 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r5 = virtualinvoke $r4.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r5 = virtualinvoke $r4.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r5)
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : if $z1 != 0
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r13 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r13 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r14 = virtualinvoke $r13.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r14 = virtualinvoke $r13.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r15 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r15 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r16 = virtualinvoke $r15.<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r16 = virtualinvoke $r15.<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r16)
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r16) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r6 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r6 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r7 = virtualinvoke $r6.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r7 = virtualinvoke $r6.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r7)
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : if $z2 != 0
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r8 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r8 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r9 = virtualinvoke $r8.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r9 = virtualinvoke $r8.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r10 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r10 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r11 = virtualinvoke $r10.<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>()
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r11 = virtualinvoke $r10.<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11)
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : return r1
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : return r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.ensureMandatoryServiceProperties : return $r2
org.apache.ambari.server.state.ServiceInfo.ensureMandatoryServiceProperties : return $r2 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getName : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String name>
org.apache.ambari.server.state.ServiceInfo.getName : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getName : return $r1
org.apache.ambari.server.state.ServiceInfo.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getServiceType : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String serviceType>
org.apache.ambari.server.state.ServiceInfo.getServiceType : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String serviceType> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getServiceType : return $r1
org.apache.ambari.server.state.ServiceInfo.getServiceType : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getDisplayName : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String displayName>
org.apache.ambari.server.state.ServiceInfo.getDisplayName : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String displayName> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getDisplayName : return $r1
org.apache.ambari.server.state.ServiceInfo.getDisplayName : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getComment : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String comment>
org.apache.ambari.server.state.ServiceInfo.getComment : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String comment> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getComment : return $r1
org.apache.ambari.server.state.ServiceInfo.getComment : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getVersion : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String version>
org.apache.ambari.server.state.ServiceInfo.getVersion : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getVersion : return $r1
org.apache.ambari.server.state.ServiceInfo.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r4 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map configTypes>
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r4 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map configTypes> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : if $r4 != null
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : if $r4 != null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : r10 = new java.util.HashMap
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : r10 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r9 = r10
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r9 = r10 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : specialinvoke r10.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : specialinvoke r10.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : goto [?= r1 = $r9]
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : goto [?= r1 = $r9] >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : r1 = $r9
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : r1 = $r9 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r5 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Set excludedConfigTypes>
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r5 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Set excludedConfigTypes> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : if $z0 == 0
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1)
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : return $r6
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : return $r6 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getExcludedConfigTypes : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Set excludedConfigTypes>
org.apache.ambari.server.state.ServiceInfo.getExcludedConfigTypes : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Set excludedConfigTypes> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getExcludedConfigTypes : return $r1
org.apache.ambari.server.state.ServiceInfo.getExcludedConfigTypes : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getRequiredServices : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List requiredServices>
org.apache.ambari.server.state.ServiceInfo.getRequiredServices : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List requiredServices> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getRequiredServices : return $r1
org.apache.ambari.server.state.ServiceInfo.getRequiredServices : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCommandScript : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CommandScriptDefinition commandScript>
org.apache.ambari.server.state.ServiceInfo.getCommandScript : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CommandScriptDefinition commandScript> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCommandScript : return $r1
org.apache.ambari.server.state.ServiceInfo.getCommandScript : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getSelection : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.ServiceInfo$Selection selection>
org.apache.ambari.server.state.ServiceInfo.getSelection : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.ServiceInfo$Selection selection> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getSelection : if $r1 != null
org.apache.ambari.server.state.ServiceInfo.getSelection : if $r1 != null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getSelection : $r3 = <org.apache.ambari.server.state.ServiceInfo$Selection: org.apache.ambari.server.state.ServiceInfo$Selection DEFAULT>
org.apache.ambari.server.state.ServiceInfo.getSelection : $r3 = <org.apache.ambari.server.state.ServiceInfo$Selection: org.apache.ambari.server.state.ServiceInfo$Selection DEFAULT> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getSelection : return $r3
org.apache.ambari.server.state.ServiceInfo.getSelection : return $r3 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCustomCommands : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List customCommands>
org.apache.ambari.server.state.ServiceInfo.getCustomCommands : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List customCommands> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCustomCommands : if $r1 != null
org.apache.ambari.server.state.ServiceInfo.getCustomCommands : if $r1 != null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCustomCommands : $r3 = new java.util.ArrayList
org.apache.ambari.server.state.ServiceInfo.getCustomCommands : $r3 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCustomCommands : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.ServiceInfo.getCustomCommands : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCustomCommands : r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List customCommands> = $r3
org.apache.ambari.server.state.ServiceInfo.getCustomCommands : r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List customCommands> = $r3 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCustomCommands : $r2 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List customCommands>
org.apache.ambari.server.state.ServiceInfo.getCustomCommands : $r2 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List customCommands> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getCustomCommands : return $r2
org.apache.ambari.server.state.ServiceInfo.getCustomCommands : return $r2 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getKerberosDescriptorFile : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File kerberosDescriptorFile>
org.apache.ambari.server.state.ServiceInfo.getKerberosDescriptorFile : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File kerberosDescriptorFile> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getKerberosDescriptorFile : return $r1
org.apache.ambari.server.state.ServiceInfo.getKerberosDescriptorFile : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getServiceProperties : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map servicePropertyMap>
org.apache.ambari.server.state.ServiceInfo.getServiceProperties : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map servicePropertyMap> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.getServiceProperties : return $r1
org.apache.ambari.server.state.ServiceInfo.getServiceProperties : return $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isCredentialStoreSupported : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CredentialStoreInfo credentialStoreInfo>
org.apache.ambari.server.state.ServiceInfo.isCredentialStoreSupported : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CredentialStoreInfo credentialStoreInfo> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isCredentialStoreSupported : if $r1 == null
org.apache.ambari.server.state.ServiceInfo.isCredentialStoreSupported : if $r1 == null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isCredentialStoreSupported : return 0
org.apache.ambari.server.state.ServiceInfo.isCredentialStoreSupported : return 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isCredentialStoreEnabled : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CredentialStoreInfo credentialStoreInfo>
org.apache.ambari.server.state.ServiceInfo.isCredentialStoreEnabled : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CredentialStoreInfo credentialStoreInfo> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isCredentialStoreEnabled : if $r1 == null
org.apache.ambari.server.state.ServiceInfo.isCredentialStoreEnabled : if $r1 == null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isCredentialStoreEnabled : return 0
org.apache.ambari.server.state.ServiceInfo.isCredentialStoreEnabled : return 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean supportDeleteViaUIField>
org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean supportDeleteViaUIField> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : if null == $r1
org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : if null == $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : $z0 = r0.<org.apache.ambari.server.state.ServiceInfo: boolean supportDeleteViaUIInternal>
org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : $z0 = r0.<org.apache.ambari.server.state.ServiceInfo: boolean supportDeleteViaUIInternal> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : return $z0
org.apache.ambari.server.state.ServiceInfo.isSupportDeleteViaUI : return $z0 >>>>>>>> org.apache.ambari.server.controller.StackServiceResponse.getServiceProperties : $r1 = r0.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Map serviceProperties>
org.apache.ambari.server.controller.StackServiceResponse.getServiceProperties : $r1 = r0.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Map serviceProperties> >>>>>>>> org.apache.ambari.server.controller.StackServiceResponse.getServiceProperties : return $r1
