org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r1 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>($r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r9 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterProtocol")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r9 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterProtocol") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r6 = class "Ljava/lang/reflect/Field;"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r6 = class "Ljava/lang/reflect/Field;" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r10 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r10 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i0 = virtualinvoke r9.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i0 = virtualinvoke r9.<java.lang.reflect.Field: int getModifiers()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i1 = $i0 & -17
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i1 = $i0 & -17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r10.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r9, $i1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r10.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r9, $i1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r11 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterHostname")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r11 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterHostname") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r7 = class "Ljava/lang/reflect/Field;"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r7 = class "Ljava/lang/reflect/Field;" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r12 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r12 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i2 = virtualinvoke r11.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i2 = virtualinvoke r11.<java.lang.reflect.Field: int getModifiers()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i3 = $i2 & -17
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i3 = $i2 & -17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r11, $i3)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r11, $i3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r13 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterPort")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r13 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterPort") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r13.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r13.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r8 = class "Ljava/lang/reflect/Field;"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r8 = class "Ljava/lang/reflect/Field;" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r14 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r14 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i4 = virtualinvoke r13.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i4 = virtualinvoke r13.<java.lang.reflect.Field: int getModifiers()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i5 = $i4 & -17
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i5 = $i4 & -17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r13, $i5)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r13, $i5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r13.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r13.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterProtocol>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterProtocol> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $r4 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $r4 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r5 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterHostname>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r5 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterHostname> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $r5 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $r5 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r6 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.Integer masterPort>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r6 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.Integer masterPort> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $r6 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $r6 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r7 = new org.apache.http.client.utils.URIBuilder
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r7 = new org.apache.http.client.utils.URIBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : specialinvoke $r7.<org.apache.http.client.utils.URIBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : specialinvoke $r7.<org.apache.http.client.utils.URIBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterProtocol>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterProtocol> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r10 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterHostname>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r10 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterHostname> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>($r10)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r12 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.Integer masterPort>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r12 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.Integer masterPort> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPort(int)>($i0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPort(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\?")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\?") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $i1 = lengthof r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $i1 = lengthof r3 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $i1 <= 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r15 = virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r15 = virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : return $r15
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : return $r15 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r16 = r3[0]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r16 = r3[0] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>($r16)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r18 = r3[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r18 = r3[1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setQuery(java.lang.String)>($r18)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setQuery(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : goto [?= $r15 = virtualinvoke $r7.<org.apache.http.client.utils.URIBuilder: java.lang.String toString()>()]
