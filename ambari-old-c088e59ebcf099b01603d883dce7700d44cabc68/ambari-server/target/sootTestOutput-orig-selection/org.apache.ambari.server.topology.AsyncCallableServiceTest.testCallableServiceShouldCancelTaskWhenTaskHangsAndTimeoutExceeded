org.apache.ambari.server.topology.AsyncCallableService.call : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : l6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long timeout>
org.apache.ambari.server.topology.AsyncCallableService.call : l6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long timeout> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r3 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService>
org.apache.ambari.server.topology.AsyncCallableService.call : $r3 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task>
org.apache.ambari.server.topology.AsyncCallableService.call : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : r30 = interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2)
org.apache.ambari.server.topology.AsyncCallableService.call : r30 = interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r4 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r4 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r5 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r5 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.topology.AsyncCallableService.call : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} execution started at {}", $r5, $r6)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} execution started at {}", $r5, $r6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6)
org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} waiting for result at most {} ms", $r8, $r9)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} waiting for result at most {} ms", $r8, $r9) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : r31 = interfaceinvoke r30.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r10)
org.apache.ambari.server.topology.AsyncCallableService.call : r31 = interfaceinvoke r30.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r10) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableServiceTest.lambda$testCallableServiceShouldCancelTaskWhenTaskHangsAndTimeoutExceeded$0 : staticinvoke <java.lang.Thread: void sleep(long)>(10000000L)
org.apache.ambari.server.topology.AsyncCallableServiceTest.lambda$testCallableServiceShouldCancelTaskWhenTaskHangsAndTimeoutExceeded$0 : staticinvoke <java.lang.Thread: void sleep(long)>(10000000L) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r15 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r15 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r14 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r14 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout", $r14)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout", $r14) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : l6 = 0L
org.apache.ambari.server.topology.AsyncCallableService.call : l6 = 0L >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>]
org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>
org.apache.ambari.server.topology.AsyncCallableService.call : $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $b8 = l6 cmp $l7
org.apache.ambari.server.topology.AsyncCallableService.call : $b8 = l6 cmp $l7 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : if $b8 >= 0
org.apache.ambari.server.topology.AsyncCallableService.call : if $b8 >= 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: void attemptToCancel(java.util.concurrent.Future)>(r30)
org.apache.ambari.server.topology.AsyncCallableService.call : specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: void attemptToCancel(java.util.concurrent.Future)>(r30) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r3 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r3 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, cancelling", $r2)
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, cancelling", $r2) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z0 = interfaceinvoke r1.<java.util.concurrent.Future: boolean isDone()>()
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z0 = interfaceinvoke r1.<java.util.concurrent.Future: boolean isDone()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z0 != 0
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z1 = interfaceinvoke r1.<java.util.concurrent.Future: boolean cancel(boolean)>(1)
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z1 = interfaceinvoke r1.<java.util.concurrent.Future: boolean cancel(boolean)>(1) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z1 == 0
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} cancelled", $r6)
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} cancelled", $r6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : goto [?= return]
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r24 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r24 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r23 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r23 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, no more retries", $r23)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, no more retries", $r23) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : return null
