org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : $r3 = new org.apache.ambari.server.state.PropertyInfo >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : specialinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : specialinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : virtualinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void setFilename(java.lang.String)>(r0)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : virtualinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void setFilename(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.state.PropertyInfo.setFilename : r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename> = r1
org.apache.ambari.server.state.PropertyInfo.setFilename : r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename> = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : virtualinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void setName(java.lang.String)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : virtualinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.PropertyInfo.setName : r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name> = r1
org.apache.ambari.server.state.PropertyInfo.setName : r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : $r4 = new org.apache.ambari.server.state.PropertyUpgradeBehavior
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : $r4 = new org.apache.ambari.server.state.PropertyUpgradeBehavior >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : specialinvoke $r4.<org.apache.ambari.server.state.PropertyUpgradeBehavior: void <init>(boolean,boolean,boolean)>(z0, z2, z1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : specialinvoke $r4.<org.apache.ambari.server.state.PropertyUpgradeBehavior: void <init>(boolean,boolean,boolean)>(z0, z2, z1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : virtualinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void setPropertyAmbariUpgradeBehavior(org.apache.ambari.server.state.PropertyUpgradeBehavior)>($r4)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : virtualinvoke $r3.<org.apache.ambari.server.state.PropertyInfo: void setPropertyAmbariUpgradeBehavior(org.apache.ambari.server.state.PropertyUpgradeBehavior)>($r4) >>>>>>>> org.apache.ambari.server.state.PropertyInfo.setPropertyAmbariUpgradeBehavior : r0.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.PropertyUpgradeBehavior propertyAmbariUpgradeBehavior> = r1
org.apache.ambari.server.state.PropertyInfo.setPropertyAmbariUpgradeBehavior : r0.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.PropertyUpgradeBehavior propertyAmbariUpgradeBehavior> = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : return $r3
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest.createProperty : return $r3 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i1 = 31 * 1
org.apache.ambari.server.state.PropertyInfo.hashCode : $i1 = 31 * 1 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String description>
org.apache.ambari.server.state.PropertyInfo.hashCode : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String description> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : if $r1 != null
org.apache.ambari.server.state.PropertyInfo.hashCode : if $r1 != null >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i6 = 0
org.apache.ambari.server.state.PropertyInfo.hashCode : $i6 = 0 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : goto [?= i7 = $i1 + $i6]
org.apache.ambari.server.state.PropertyInfo.hashCode : goto [?= i7 = $i1 + $i6] >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : i7 = $i1 + $i6
org.apache.ambari.server.state.PropertyInfo.hashCode : i7 = $i1 + $i6 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i2 = 31 * i7
org.apache.ambari.server.state.PropertyInfo.hashCode : $i2 = 31 * i7 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $r3 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename>
org.apache.ambari.server.state.PropertyInfo.hashCode : $r3 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : if $r3 != null
org.apache.ambari.server.state.PropertyInfo.hashCode : if $r3 != null >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $r4 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename>
org.apache.ambari.server.state.PropertyInfo.hashCode : $r4 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i8 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.state.PropertyInfo.hashCode : $i8 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : i9 = $i2 + $i8
org.apache.ambari.server.state.PropertyInfo.hashCode : i9 = $i2 + $i8 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i3 = 31 * i9
org.apache.ambari.server.state.PropertyInfo.hashCode : $i3 = 31 * i9 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $r5 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name>
org.apache.ambari.server.state.PropertyInfo.hashCode : $r5 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : if $r5 != null
org.apache.ambari.server.state.PropertyInfo.hashCode : if $r5 != null >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $r6 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name>
org.apache.ambari.server.state.PropertyInfo.hashCode : $r6 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i10 = virtualinvoke $r6.<java.lang.String: int hashCode()>()
org.apache.ambari.server.state.PropertyInfo.hashCode : $i10 = virtualinvoke $r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : i11 = $i3 + $i10
org.apache.ambari.server.state.PropertyInfo.hashCode : i11 = $i3 + $i10 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i4 = 31 * i11
org.apache.ambari.server.state.PropertyInfo.hashCode : $i4 = 31 * i11 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $r7 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String value>
org.apache.ambari.server.state.PropertyInfo.hashCode : $r7 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String value> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : if $r7 != null
org.apache.ambari.server.state.PropertyInfo.hashCode : if $r7 != null >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : $i12 = 0
org.apache.ambari.server.state.PropertyInfo.hashCode : $i12 = 0 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : goto [?= i13 = $i4 + $i12]
org.apache.ambari.server.state.PropertyInfo.hashCode : goto [?= i13 = $i4 + $i12] >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : i13 = $i4 + $i12
org.apache.ambari.server.state.PropertyInfo.hashCode : i13 = $i4 + $i12 >>>>>>>> org.apache.ambari.server.state.PropertyInfo.hashCode : return i13
org.apache.ambari.server.state.PropertyInfo.hashCode : return i13 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest$1.getTargetVersion : return null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalogTest$1.getTargetVersion : return null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r14 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r14 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r1 = (org.apache.ambari.server.state.Clusters) $r15
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r1 = (org.apache.ambari.server.state.Clusters) $r15 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if r1 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if r1 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r16 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r16 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r2 = (org.apache.ambari.server.state.ConfigHelper) $r17
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r2 = (org.apache.ambari.server.state.ConfigHelper) $r17 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z0 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r18 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r18 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r4 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r4 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r5 = (org.apache.ambari.server.state.Cluster) $r19
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r5 = (org.apache.ambari.server.state.Cluster) $r19 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r20 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r21 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r21 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r22 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r22 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r22.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r22.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r9 = virtualinvoke r2.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getStackProperties(org.apache.ambari.server.state.Cluster)>(r5)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r9 = virtualinvoke r2.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getStackProperties(org.apache.ambari.server.state.Cluster)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r23 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r23 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r59 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r59 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z17 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z17 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z17 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z17 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r41 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r41 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r60 = (java.lang.String) $r41
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r60 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r61 = virtualinvoke r2.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getServiceProperties(org.apache.ambari.server.state.Cluster,java.lang.String)>(r5, r60)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r61 = virtualinvoke r2.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getServiceProperties(org.apache.ambari.server.state.Cluster,java.lang.String)>(r5, r60) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if r61 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if r61 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke r61.<java.util.Set: boolean addAll(java.util.Collection)>(r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke r61.<java.util.Set: boolean addAll(java.util.Collection)>(r9) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r10 = interfaceinvoke r61.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r10 = interfaceinvoke r61.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z6 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z6 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z6 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r42 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r42 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r11 = (org.apache.ambari.server.state.PropertyInfo) $r42
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r11 = (org.apache.ambari.server.state.PropertyInfo) $r42 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r43 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getFilename()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r43 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getFilename()>() >>>>>>>> org.apache.ambari.server.state.PropertyInfo.getFilename : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename>
org.apache.ambari.server.state.PropertyInfo.getFilename : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String filename> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.getFilename : return $r1
org.apache.ambari.server.state.PropertyInfo.getFilename : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r12 = staticinvoke <org.apache.ambari.server.state.ConfigHelper: java.lang.String fileNameToConfigType(java.lang.String)>($r43)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r12 = staticinvoke <org.apache.ambari.server.state.ConfigHelper: java.lang.String fileNameToConfigType(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.fileNameToConfigType : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(".xml")
org.apache.ambari.server.state.ConfigHelper.fileNameToConfigType : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(".xml") >>>>>>>> org.apache.ambari.server.state.ConfigHelper.fileNameToConfigType : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.ConfigHelper.fileNameToConfigType : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.fileNameToConfigType : return $r1
org.apache.ambari.server.state.ConfigHelper.fileNameToConfigType : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r13 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.PropertyUpgradeBehavior getPropertyAmbariUpgradeBehavior()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r13 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.PropertyUpgradeBehavior getPropertyAmbariUpgradeBehavior()>() >>>>>>>> org.apache.ambari.server.state.PropertyInfo.getPropertyAmbariUpgradeBehavior : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.PropertyUpgradeBehavior propertyAmbariUpgradeBehavior>
org.apache.ambari.server.state.PropertyInfo.getPropertyAmbariUpgradeBehavior : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.PropertyUpgradeBehavior propertyAmbariUpgradeBehavior> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.getPropertyAmbariUpgradeBehavior : return $r1
org.apache.ambari.server.state.PropertyInfo.getPropertyAmbariUpgradeBehavior : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z7 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: boolean isDeleted()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z7 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: boolean isDeleted()>() >>>>>>>> org.apache.ambari.server.state.PropertyInfo.isDeleted : $z0 = r0.<org.apache.ambari.server.state.PropertyInfo: boolean deleted>
org.apache.ambari.server.state.PropertyInfo.isDeleted : $z0 = r0.<org.apache.ambari.server.state.PropertyInfo: boolean deleted> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.isDeleted : return $z0
org.apache.ambari.server.state.PropertyInfo.isDeleted : return $z0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z7 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z8 = virtualinvoke r13.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean isDelete()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z8 = virtualinvoke r13.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean isDelete()>() >>>>>>>> org.apache.ambari.server.state.PropertyUpgradeBehavior.isDelete : $z0 = r0.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean delete>
org.apache.ambari.server.state.PropertyUpgradeBehavior.isDelete : $z0 = r0.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean delete> >>>>>>>> org.apache.ambari.server.state.PropertyUpgradeBehavior.isDelete : return $z0
org.apache.ambari.server.state.PropertyUpgradeBehavior.isDelete : return $z0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z8 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z8 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z9 = virtualinvoke r13.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean isUpdate()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z9 = virtualinvoke r13.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean isUpdate()>() >>>>>>>> org.apache.ambari.server.state.PropertyUpgradeBehavior.isUpdate : $z0 = r0.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean update>
org.apache.ambari.server.state.PropertyUpgradeBehavior.isUpdate : $z0 = r0.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean update> >>>>>>>> org.apache.ambari.server.state.PropertyUpgradeBehavior.isUpdate : return $z0
org.apache.ambari.server.state.PropertyUpgradeBehavior.isUpdate : return $z0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z9 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z9 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z10 = virtualinvoke r13.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean isAdd()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z10 = virtualinvoke r13.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean isAdd()>() >>>>>>>> org.apache.ambari.server.state.PropertyUpgradeBehavior.isAdd : $z0 = r0.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean add>
org.apache.ambari.server.state.PropertyUpgradeBehavior.isAdd : $z0 = r0.<org.apache.ambari.server.state.PropertyUpgradeBehavior: boolean add> >>>>>>>> org.apache.ambari.server.state.PropertyUpgradeBehavior.isAdd : return $z0
org.apache.ambari.server.state.PropertyUpgradeBehavior.isAdd : return $z0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z10 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z10 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z11 = interfaceinvoke $r20.<java.util.Map: boolean containsKey(java.lang.Object)>(r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z11 = interfaceinvoke $r20.<java.util.Map: boolean containsKey(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z11 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z11 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r47 = new java.util.HashSet
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r47 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r47.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r47.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r47)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r47) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r44 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r44 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r45 = (java.util.Set) $r44
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r45 = (java.util.Set) $r44 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r46 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r46 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.PropertyInfo.getName : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name>
org.apache.ambari.server.state.PropertyInfo.getName : $r1 = r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.PropertyInfo.getName : return $r1
org.apache.ambari.server.state.PropertyInfo.getName : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r45.<java.util.Set: boolean add(java.lang.Object)>($r46)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r45.<java.util.Set: boolean add(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z6 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z6 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z15 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>(r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z15 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z15 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z15 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r57 = new java.util.HashSet
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r57 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r57.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r57.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r57)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r57) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r54 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r54 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r55 = (java.util.Set) $r54
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r55 = (java.util.Set) $r54 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r56 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r56 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r55.<java.util.Set: boolean add(java.lang.Object)>($r56)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r55.<java.util.Set: boolean add(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= (branch)]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z13 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>(r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z13 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z13 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z13 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r52 = new java.util.HashSet
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r52 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r52.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : specialinvoke $r52.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r52)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r52) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r49 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r49 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r50 = (java.util.Set) $r49
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r50 = (java.util.Set) $r49 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r51 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r51 = virtualinvoke r11.<org.apache.ambari.server.state.PropertyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r50.<java.util.Set: boolean add(java.lang.Object)>($r51)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : interfaceinvoke $r50.<java.util.Set: boolean add(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z17 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z17 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r25 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r25 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r62 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r62 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z2 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z2 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z2 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r37 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r37 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r63 = (java.util.Map$Entry) $r37
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r63 = (java.util.Map$Entry) $r37 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r38 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r38 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r64 = (java.lang.String) $r38
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r64 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r39 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r39 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r40 = (java.util.Set) $r39
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r40 = (java.util.Set) $r39 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,boolean,boolean)>(r64, $r40, 0, 1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,boolean,boolean)>(r64, $r40, 0, 1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,java.util.Set,boolean,boolean)>(r1, r2, null, z0, z1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,java.util.Set,boolean,boolean)>(r1, r2, null, z0, z1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r14 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r14 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r4 = (org.apache.ambari.server.state.Clusters) $r15
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r4 = (org.apache.ambari.server.state.Clusters) $r15 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r16 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r16 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r5 = (org.apache.ambari.server.state.ConfigHelper) $r17
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r5 = (org.apache.ambari.server.state.ConfigHelper) $r17 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r4 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r4 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r6 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z2 = interfaceinvoke r6.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z2 = interfaceinvoke r6.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z2 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z2 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r18 = interfaceinvoke r6.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r18 = interfaceinvoke r6.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r7 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r7 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z3 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r8 = (org.apache.ambari.server.state.Cluster) $r19
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r8 = (org.apache.ambari.server.state.Cluster) $r19 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r20 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r10 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r10 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z5 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r21 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r21 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r11 = (java.lang.String) $r21
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r11 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r12 = virtualinvoke r5.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getPropertyValueFromStackDefinitions(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r8, r1, r11)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r12 = virtualinvoke r5.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getPropertyValueFromStackDefinitions(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r8, r1, r11) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r12 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r12 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r13 = virtualinvoke r5.<org.apache.ambari.server.state.ConfigHelper: org.apache.ambari.server.state.ServiceInfo getPropertyOwnerService(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r8, r1, r11)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : r13 = virtualinvoke r5.<org.apache.ambari.server.state.ConfigHelper: org.apache.ambari.server.state.ServiceInfo getPropertyOwnerService(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r8, r1, r11) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r13 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if r13 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r23 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r23 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r24 = virtualinvoke r13.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $r24 = virtualinvoke r13.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z4 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>($r24)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : $z4 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z4 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : if $z4 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : goto [?= $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : goto [?= $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r8, r1, $r20, r3, z0, z1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r8, r1, $r20, r3, z0, z1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r15 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r15 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r5 = (org.apache.ambari.server.controller.AmbariManagementController) $r16
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r5 = (org.apache.ambari.server.controller.AmbariManagementController) $r16 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r68, r3, z0, r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r68, r3, z0, r9) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r6 = (java.util.Map$Entry) $r9
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r6 = (java.util.Map$Entry) $r9 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z2 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z2 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z2 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z2 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if z0 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r16 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r16 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r18 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType ADDED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r18 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType ADDED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r18, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r18, r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : return $r7
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : return $r7 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i1 = interfaceinvoke r9.<com.google.common.collect.Multimap: int size()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i1 = interfaceinvoke r9.<com.google.common.collect.Multimap: int size()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $i1 <= 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r58 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r58 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r57 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariUpgradeConfigUpdatesFileName>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r57 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariUpgradeConfigUpdatesFileName> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke $r58.<org.apache.ambari.server.configuration.Configuration: void writeToAmbariUpgradeConfigUpdatesFile(com.google.common.collect.Multimap,java.lang.String,java.lang.String,java.lang.String)>(r9, r2, r10, $r57)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke $r58.<org.apache.ambari.server.configuration.Configuration: void writeToAmbariUpgradeConfigUpdatesFile(com.google.common.collect.Multimap,java.lang.String,java.lang.String,java.lang.String)>(r9, r2, r10, $r57) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r67 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r67 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r67.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Write to config updates file failed:", $r66)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r67.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Write to config updates file failed:", $r66) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r71 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r68, r69)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r71 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r68, r69) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $z3 = interfaceinvoke $r71.<com.google.common.collect.MapDifference: boolean areEqual()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $z3 = interfaceinvoke $r71.<com.google.common.collect.MapDifference: boolean areEqual()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $z3 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $z3 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r27 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r27 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[0] = r6
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[0] = r6 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[1] = r2
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[1] = r2 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r28 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r28 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[2] = $r28
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26[2] = $r28 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'{}\' and configType \'{}\' to cluster \'{}\'", $r26)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'{}\' and configType \'{}\' to cluster \'{}\'", $r26) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r72
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r72 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, $r29, r2, r69, r6, r72)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, $r29, r2, r69, r6, r72) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r11 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r11 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= return]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= return] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesWithValuesFromXml : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z2 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z2 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r26 = interfaceinvoke $r21.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r26 = interfaceinvoke $r21.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r65 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r65 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z3 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z3 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z3 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r33 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r33 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r66 = (java.util.Map$Entry) $r33
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r66 = (java.util.Map$Entry) $r33 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r34 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r34 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r67 = (java.lang.String) $r34
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r67 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r35 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r35 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r36 = (java.util.Set) $r35
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r36 = (java.util.Set) $r35 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,boolean,boolean)>(r67, $r36, 1, 0)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,boolean,boolean)>(r67, $r36, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r14 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType UPDATED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r14 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType UPDATED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r14, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r14, r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z3 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z3 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r27 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r27 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r68 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r68 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z4 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $z4 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z4 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r28 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r28 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r69 = (java.util.Map$Entry) $r28
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r69 = (java.util.Map$Entry) $r28 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r29 = interfaceinvoke r69.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r29 = interfaceinvoke r69.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r70 = (java.lang.String) $r29
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : r70 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r30 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r30 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r31 = interfaceinvoke r69.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r31 = interfaceinvoke r69.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r32 = (java.util.Set) $r31
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : $r32 = (java.util.Set) $r31 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,java.util.Set,boolean,boolean)>(r70, $r30, $r32, 0, 1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesWithValuesFromXml(java.lang.String,java.util.Set,java.util.Set,boolean,boolean)>(r70, $r30, $r32, 0, 1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map removeProperties(java.util.Map,java.util.Set,com.google.common.collect.Multimap)>(r69, r4, r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map removeProperties(java.util.Map,java.util.Set,com.google.common.collect.Multimap)>(r69, r4, r9) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = (java.lang.String) $r8
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r10 = new java.util.AbstractMap$SimpleEntry
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r10 = new java.util.AbstractMap$SimpleEntry >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r10.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r6, "")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r10.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r6, "") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : return $r7
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : return $r7 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z4 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z4 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addNewConfigurationsFromXml : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
