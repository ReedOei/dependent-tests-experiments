org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.events.publishers.VersionEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.VersionEventPublisher: com.google.common.eventbus.EventBus m_eventBus>
org.apache.ambari.server.events.publishers.VersionEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.VersionEventPublisher: com.google.common.eventbus.EventBus m_eventBus> >>>>>>>> org.apache.ambari.server.events.publishers.VersionEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1)
org.apache.ambari.server.events.publishers.VersionEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r3 = new org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r3 = new org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r5 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r5 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r4 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.ServiceComponentHost sch>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r4 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.ServiceComponentHost sch> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : specialinvoke $r3.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: void <init>(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>($r5, $r4, r1)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : specialinvoke $r3.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: void <init>(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>($r5, $r4, r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r6 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.events.listeners.upgrade.StackVersionListener listener>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r6 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.events.listeners.upgrade.StackVersionListener listener> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke $r6.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void onAmbariEvent(org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent)>($r3)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke $r6.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void onAmbariEvent(org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent)>($r3) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r7 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: org.slf4j.Logger LOG>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r7 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r2 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r2 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r3 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r3 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost sch>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost sch> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r4 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String getVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r4 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String version>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String version> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z0 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r8 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long getRepositoryVersionId()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r8 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long getRepositoryVersionId()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long repoVersionId>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long repoVersionId> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if null == $r8
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if null == $r8 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r35 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r35 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r36 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: com.google.inject.Provider ambariMetaInfoProvider>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r36 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: com.google.inject.Provider ambariMetaInfoProvider> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r37 = interfaceinvoke $r36.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r37 = interfaceinvoke $r36.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r38 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r37
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r38 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r37 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r39 = virtualinvoke r35.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r39 = virtualinvoke r35.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : return $r1
org.apache.ambari.server.state.StackId.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r40 = virtualinvoke r35.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r40 = virtualinvoke r35.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : return $r1
org.apache.ambari.server.state.StackId.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r41 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r41 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r42 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r42 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r5 = virtualinvoke r38.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r39, $r40, $r41, $r42)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r5 = virtualinvoke r38.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r39, $r40, $r41, $r42) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z5 = virtualinvoke r5.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z5 = virtualinvoke r5.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z5 != 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z5 != 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r9 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r9 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r10 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r9)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r10 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r11 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r11 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r6 = interfaceinvoke $r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r11)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r6 = interfaceinvoke $r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r12 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r12 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>($r12, r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>($r12, r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z1 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void processComponentAdvertisedVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>(r2, r6, r3, r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void processComponentAdvertisedVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>(r2, r6, r3, r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z2 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z2 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r6, r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r6, r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r5, r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r5, r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z3 != 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z3 != 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>(r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if r5 == null
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if r5 == null >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r10 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r10 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>($r10, r5)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>($r10, r5) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z4 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z4 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if z0 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if z0 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r12 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r12 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if null == $r12
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if null == $r12 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z5 = 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z5 = 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z5 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z5 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r13 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState NONE>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r13 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState NONE> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void setUpgradeStateAndRecalculateHostVersions(org.apache.ambari.server.state.ServiceComponentHost,org.apache.ambari.server.state.UpgradeState)>(r3, $r13)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void setUpgradeStateAndRecalculateHostVersions(org.apache.ambari.server.state.ServiceComponentHost,org.apache.ambari.server.state.UpgradeState)>(r3, $r13) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : if $r3 != r2
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : if $r3 != r2 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: void setUpgradeState(org.apache.ambari.server.state.UpgradeState)>(r2)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: void setUpgradeState(org.apache.ambari.server.state.UpgradeState)>(r2) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.orm.entities.HostVersionEntity recalculateHostVersionState()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.orm.entities.HostVersionEntity recalculateHostVersionState()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : goto [?= interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: void updateRepositoryState(java.lang.String)>(r4)]
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : goto [?= interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: void updateRepositoryState(java.lang.String)>(r4)] >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: void updateRepositoryState(java.lang.String)>(r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: void updateRepositoryState(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : goto [?= return]
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : goto [?= return] >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: void verifyAll()>()
