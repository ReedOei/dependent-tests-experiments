org.apache.ambari.server.controller.MaintenanceStateHelperTest.injectField : r2 = class "Lorg/apache/ambari/server/controller/MaintenanceStateHelper;" >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelperTest.injectField : r3 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("clusters")
org.apache.ambari.server.controller.MaintenanceStateHelperTest.injectField : r3 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("clusters") >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelperTest.injectField : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.MaintenanceStateHelperTest.injectField : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelperTest.injectField : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.MaintenanceStateHelperTest.injectField : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r2 = virtualinvoke r1.<org.apache.ambari.server.state.Alert: java.lang.String getService()>()
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r2 = virtualinvoke r1.<org.apache.ambari.server.state.Alert: java.lang.String getService()>() >>>>>>>> org.apache.ambari.server.state.Alert.getService : $r1 = r0.<org.apache.ambari.server.state.Alert: java.lang.String service>
org.apache.ambari.server.state.Alert.getService : $r1 = r0.<org.apache.ambari.server.state.Alert: java.lang.String service> >>>>>>>> org.apache.ambari.server.state.Alert.getService : return $r1
org.apache.ambari.server.state.Alert.getService : return $r1 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r3 = virtualinvoke r1.<org.apache.ambari.server.state.Alert: java.lang.String getComponent()>()
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r3 = virtualinvoke r1.<org.apache.ambari.server.state.Alert: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.Alert.getComponent : $r1 = r0.<org.apache.ambari.server.state.Alert: java.lang.String component>
org.apache.ambari.server.state.Alert.getComponent : $r1 = r0.<org.apache.ambari.server.state.Alert: java.lang.String component> >>>>>>>> org.apache.ambari.server.state.Alert.getComponent : return $r1
org.apache.ambari.server.state.Alert.getComponent : return $r1 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r4 = virtualinvoke r1.<org.apache.ambari.server.state.Alert: java.lang.String getHostName()>()
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r4 = virtualinvoke r1.<org.apache.ambari.server.state.Alert: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.Alert.getHostName : $r1 = r0.<org.apache.ambari.server.state.Alert: java.lang.String hostName>
org.apache.ambari.server.state.Alert.getHostName : $r1 = r0.<org.apache.ambari.server.state.Alert: java.lang.String hostName> >>>>>>>> org.apache.ambari.server.state.Alert.getHostName : return $r1
org.apache.ambari.server.state.Alert.getHostName : return $r1 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if null != r2
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if null != r2 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r4)
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $z0 == 0
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r19 = r0.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r19 = r0.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r25 = interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r4)
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r25 = interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r20 = interfaceinvoke r25.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(l0)
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r20 = interfaceinvoke r25.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(l0) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r21 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r21 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $r20 == $r21
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $r20 == $r21 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r8 = <org.apache.ambari.server.controller.RootService: org.apache.ambari.server.controller.RootService AMBARI>
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r8 = <org.apache.ambari.server.controller.RootService: org.apache.ambari.server.controller.RootService AMBARI> >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.RootService: java.lang.String name()>()
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.RootService: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r9, r2)
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r9, r2) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $z1 == 0
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r10 = r0.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r10 = r0.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r26 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>(l0)
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r26 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>(l0) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r5 = interfaceinvoke r26.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2)
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : r5 = interfaceinvoke r26.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>()
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r12 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r12 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $r11 == $r12
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : if $r11 == $r12 >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r17 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : $r17 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.controller.MaintenanceStateHelper.getEffectiveState : return $r17
