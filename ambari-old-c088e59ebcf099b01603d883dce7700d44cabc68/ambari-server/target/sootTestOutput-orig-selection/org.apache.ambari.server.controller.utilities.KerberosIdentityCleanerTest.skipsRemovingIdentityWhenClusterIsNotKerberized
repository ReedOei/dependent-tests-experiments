org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r3 = new org.apache.ambari.server.state.kerberos.KerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: java.util.Map parseJSON(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: java.util.Map parseJSON(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r3
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r3 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : $r5 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner kerberosIdentityCleaner>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : $r5 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner kerberosIdentityCleaner> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : $r4 = new org.apache.ambari.server.events.ServiceComponentUninstalledEvent
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : $r4 = new org.apache.ambari.server.events.ServiceComponentUninstalledEvent >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : specialinvoke $r4.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Long)>(1L, "any", "any", r1, r2, r3, 0, $r6)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : specialinvoke $r4.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Long)>(1L, "any", "any", r1, r2, r3, 0, $r6) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : virtualinvoke $r5.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: void componentRemoved(org.apache.ambari.server.events.ServiceComponentUninstalledEvent)>($r4)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallComponent : virtualinvoke $r5.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: void componentRemoved(org.apache.ambari.server.events.ServiceComponentUninstalledEvent)>($r4) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r3 = <org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r3 = <org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removing identities after {}", r1)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removing identities after {}", r1) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServiceComponentUninstalledEvent{")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServiceComponentUninstalledEvent{") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cluserId=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cluserId=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $l0 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: long m_clusterId>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $l0 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: long m_clusterId> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackName=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackName=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r6 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_stackName>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r6 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_stackName> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackVersion=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackVersion=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r9 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_stackVersion>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r9 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_stackVersion> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r12 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_serviceName>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r12 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_serviceName> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r15 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_componentName>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r15 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_componentName> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostName=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostName=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r18 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_hostName>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r18 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", recoveryEnabled=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", recoveryEnabled=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $z0 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: boolean m_recoveryEnabled>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $z0 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: boolean m_recoveryEnabled> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r22 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostId=")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r22 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostId=") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r23 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.Long m_hostId>
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r23 = r0.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: java.lang.Long m_hostId> >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23)
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r26 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : $r26 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : return $r26
org.apache.ambari.server.events.ServiceComponentUninstalledEvent.toString : return $r26 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r4 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r4 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $l0 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: long getClusterId()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $l0 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceComponentUninstalledEvent: long getClusterId()>() >>>>>>>> org.apache.ambari.server.events.ClusterEvent.getClusterId : $l0 = r0.<org.apache.ambari.server.events.ClusterEvent: long m_clusterId>
org.apache.ambari.server.events.ClusterEvent.getClusterId : $l0 = r0.<org.apache.ambari.server.events.ClusterEvent: long m_clusterId> >>>>>>>> org.apache.ambari.server.events.ClusterEvent.getClusterId : return $l0
org.apache.ambari.server.events.ClusterEvent.getClusterId : return $l0 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r6 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>($r5)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r6 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r7 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r7 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r8 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.RemovableIdentities ofComponent(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.events.ServiceComponentUninstalledEvent,org.apache.ambari.server.controller.KerberosHelper)>($r6, r1, $r7)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r8 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.RemovableIdentities ofComponent(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.events.ServiceComponentUninstalledEvent,org.apache.ambari.server.controller.KerberosHelper)>($r6, r1, $r7) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : $r5 = interfaceinvoke r0.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : $r5 = interfaceinvoke r0.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : $r6 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : $r6 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : if $r5 == $r6
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : if $r5 == $r6 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : $r21 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.RemovableIdentities none()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : $r21 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.RemovableIdentities none()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.none : $r0 = new org.apache.ambari.server.controller.utilities.RemovableIdentities
org.apache.ambari.server.controller.utilities.RemovableIdentities.none : $r0 = new org.apache.ambari.server.controller.utilities.RemovableIdentities >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.none : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.none : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.none : $r2 = staticinvoke <org.apache.ambari.server.controller.utilities.UsedIdentities: org.apache.ambari.server.controller.utilities.UsedIdentities none()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.none : $r2 = staticinvoke <org.apache.ambari.server.controller.utilities.UsedIdentities: org.apache.ambari.server.controller.utilities.UsedIdentities none()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.none : $r0 = new org.apache.ambari.server.controller.utilities.UsedIdentities
org.apache.ambari.server.controller.utilities.UsedIdentities.none : $r0 = new org.apache.ambari.server.controller.utilities.UsedIdentities >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.none : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.none : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.none : specialinvoke $r0.<org.apache.ambari.server.controller.utilities.UsedIdentities: void <init>(java.util.List)>($r1)
org.apache.ambari.server.controller.utilities.UsedIdentities.none : specialinvoke $r0.<org.apache.ambari.server.controller.utilities.UsedIdentities: void <init>(java.util.List)>($r1) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.none : return $r0
org.apache.ambari.server.controller.utilities.UsedIdentities.none : return $r0 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.none : specialinvoke $r0.<org.apache.ambari.server.controller.utilities.RemovableIdentities: void <init>(java.util.List,org.apache.ambari.server.controller.utilities.UsedIdentities,org.apache.ambari.server.state.Cluster,java.util.List)>($r1, $r2, null, null)
org.apache.ambari.server.controller.utilities.RemovableIdentities.none : specialinvoke $r0.<org.apache.ambari.server.controller.utilities.RemovableIdentities: void <init>(java.util.List,org.apache.ambari.server.controller.utilities.UsedIdentities,org.apache.ambari.server.state.Cluster,java.util.List)>($r1, $r2, null, null) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.none : return $r0
org.apache.ambari.server.controller.utilities.RemovableIdentities.none : return $r0 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : return $r21
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofComponent : return $r21 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r9 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : $r9 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : virtualinvoke $r8.<org.apache.ambari.server.controller.utilities.RemovableIdentities: void remove(org.apache.ambari.server.controller.KerberosHelper)>($r9)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : virtualinvoke $r8.<org.apache.ambari.server.controller.utilities.RemovableIdentities: void remove(org.apache.ambari.server.controller.KerberosHelper)>($r9) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r3 = specialinvoke r0.<org.apache.ambari.server.controller.utilities.RemovableIdentities: java.util.List skipUsed()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r3 = specialinvoke r0.<org.apache.ambari.server.controller.utilities.RemovableIdentities: java.util.List skipUsed()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r1 = r0.<org.apache.ambari.server.controller.utilities.RemovableIdentities: java.util.List candidateIdentities>
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r1 = r0.<org.apache.ambari.server.controller.utilities.RemovableIdentities: java.util.List candidateIdentities> >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r2 = interfaceinvoke $r1.<java.util.List: java.util.stream.Stream stream()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r2 = interfaceinvoke $r1.<java.util.List: java.util.stream.Stream stream()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r3 = dynamicinvoke "test" <java.util.function.Predicate (org.apache.ambari.server.controller.utilities.RemovableIdentities)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Z", handle: <org.apache.ambari.server.controller.utilities.RemovableIdentities: boolean lambda$skipUsed$4(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>, class "(Lorg/apache/ambari/server/state/kerberos/KerberosIdentityDescriptor;)Z")
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r3 = dynamicinvoke "test" <java.util.function.Predicate (org.apache.ambari.server.controller.utilities.RemovableIdentities)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Z", handle: <org.apache.ambari.server.controller.utilities.RemovableIdentities: boolean lambda$skipUsed$4(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>, class "(Lorg/apache/ambari/server/state/kerberos/KerberosIdentityDescriptor;)Z") >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r3)
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r3) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r5)
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r5) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r7 = (java.util.List) $r6
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : $r7 = (java.util.List) $r6 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : return $r7
org.apache.ambari.server.controller.utilities.RemovableIdentities.skipUsed : return $r7 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r4 = interfaceinvoke $r3.<java.util.List: java.util.stream.Stream stream()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r4 = interfaceinvoke $r3.<java.util.List: java.util.stream.Stream stream()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r5 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Ljava/lang/Object;", handle: <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>, class "(Lorg/apache/ambari/server/state/kerberos/KerberosIdentityDescriptor;)Ljava/lang/String;")
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r5 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Ljava/lang/Object;", handle: <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getPath()>, class "(Lorg/apache/ambari/server/state/kerberos/KerberosIdentityDescriptor;)Ljava/lang/String;") >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r5)
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r5) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7)
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : r2 = (java.util.Set) $r8
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : r2 = (java.util.Set) $r8 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : if $z0 != 0
org.apache.ambari.server.controller.utilities.RemovableIdentities.remove : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.componentRemoved : goto [?= return]
