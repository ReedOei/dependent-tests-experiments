org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.PutRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PutRequestTest$1: void <init>(org.apache.ambari.server.api.services.PutRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PutRequestTest$1: void <init>(org.apache.ambari.server.api.services.PutRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.api.services.PutRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type PUT>
org.apache.ambari.server.api.services.PutRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type PUT> >>>>>>>> org.apache.ambari.server.api.services.PutRequest.getRequestType : return $r1
org.apache.ambari.server.api.services.PutRequest.getRequestType : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1:
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r4 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r4 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getUpdateDirectives()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getUpdateDirectives()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>() >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.PutRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler>
org.apache.ambari.server.api.services.PutRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.PutRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler> >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest$1.getPredicateCompiler : return $r1
org.apache.ambari.server.api.services.PutRequestTest$1.getPredicateCompiler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9)
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ")
org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21
org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>()
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState>
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>()
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : return $r1
org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.QueryPostRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: void <init>(org.apache.ambari.server.api.services.QueryPostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: void <init>(org.apache.ambari.server.api.services.QueryPostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type QUERY_POST>
org.apache.ambari.server.api.services.QueryPostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type QUERY_POST> >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequest.getRequestType : return $r1
org.apache.ambari.server.api.services.QueryPostRequest.getRequestType : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1:
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>() >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler>
org.apache.ambari.server.api.services.QueryPostRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler> >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest$1.getPredicateCompiler : return $r1
org.apache.ambari.server.api.services.QueryPostRequestTest$1.getPredicateCompiler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9)
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ")
org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21
org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>()
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState>
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>()
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : return $r1
org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.PostRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PostRequestTest$1: void <init>(org.apache.ambari.server.api.services.PostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PostRequestTest$1: void <init>(org.apache.ambari.server.api.services.PostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.api.services.PostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST>
org.apache.ambari.server.api.services.PostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST> >>>>>>>> org.apache.ambari.server.api.services.PostRequest.getRequestType : return $r1
org.apache.ambari.server.api.services.PostRequest.getRequestType : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1:
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r15 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r15 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r16 = interfaceinvoke $r15.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r16 = interfaceinvoke $r15.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r16.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getCreateDirectives()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r16.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getCreateDirectives()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>() >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.PostRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler>
org.apache.ambari.server.api.services.PostRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.PostRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler> >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest$1.getPredicateCompiler : return $r1
org.apache.ambari.server.api.services.PostRequestTest$1.getPredicateCompiler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9)
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ")
org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21
org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>()
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState>
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>()
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : return $r1
org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.GetRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.GetRequestTest$1: void <init>(org.apache.ambari.server.api.services.GetRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.GetRequestTest$1: void <init>(org.apache.ambari.server.api.services.GetRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.api.services.GetRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET>
org.apache.ambari.server.api.services.GetRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET> >>>>>>>> org.apache.ambari.server.api.services.GetRequest.getRequestType : return $r1
org.apache.ambari.server.api.services.GetRequest.getRequestType : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1:
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r13 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r13 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r14.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getReadDirectives()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r14.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getReadDirectives()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>() >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.GetRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler>
org.apache.ambari.server.api.services.GetRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.GetRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler> >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest$1.getPredicateCompiler : return $r1
org.apache.ambari.server.api.services.GetRequestTest$1.getPredicateCompiler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9)
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ")
org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21
org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>()
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState>
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>()
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : return $r1
org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.DeleteRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.DeleteRequestTest$1: void <init>(org.apache.ambari.server.api.services.DeleteRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.DeleteRequestTest$1: void <init>(org.apache.ambari.server.api.services.DeleteRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r2 = <org.apache.ambari.server.api.services.BaseRequest$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.api.services.DeleteRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type DELETE>
org.apache.ambari.server.api.services.DeleteRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type DELETE> >>>>>>>> org.apache.ambari.server.api.services.DeleteRequest.getRequestType : return $r1
org.apache.ambari.server.api.services.DeleteRequest.getRequestType : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i1 = virtualinvoke $r3.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $i2 = $r2[$i1] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1:
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r11 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r11 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r12.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getDeleteDirectives()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r26 = interfaceinvoke $r12.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Collection getDeleteDirectives()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r26 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.predicate.PredicateCompiler getPredicateCompiler()>() >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.DeleteRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler>
org.apache.ambari.server.api.services.DeleteRequestTest$1.getPredicateCompiler : $r1 = r0.<org.apache.ambari.server.api.services.DeleteRequestTest$1: org.apache.ambari.server.api.predicate.PredicateCompiler val$compiler> >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest$1.getPredicateCompiler : return $r1
org.apache.ambari.server.api.services.DeleteRequestTest$1.getPredicateCompiler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r23, "UTF-8") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9)
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r27 = virtualinvoke $r8.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.controller.spi.Predicate compile(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.BaseRequest.process : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ")
org.apache.ambari.server.api.services.BaseRequest.process : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to compile query predicate: ") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r18 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.InvalidQueryException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.api.services.BaseRequest.process : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.BaseRequest.process : r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r20 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r26, $r15) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.services.BaseRequest.process : $r21 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.services.BaseRequest.process : $r22 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.services.BaseRequest.process : $r23 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r22.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r23, r26) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22)
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke $r21.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r22) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21
org.apache.ambari.server.api.services.BaseRequest.process : r24 = $r21 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>()
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState>
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>()
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : return $r1
