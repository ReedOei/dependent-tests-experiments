org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : $r1 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : $r1 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : return $r1
org.apache.ambari.server.api.handlers.BaseManagementHandler.getClusterController : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r4 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r4 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r2 = interfaceinvoke $r4.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.query.Query getQuery()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r2 = interfaceinvoke $r4.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.query.Query getQuery()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r3 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.controller.spi.Predicate getQueryPredicate()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : r3 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.controller.spi.Predicate getQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.query.render.Renderer getRenderer()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.query.render.Renderer getRenderer()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : interfaceinvoke r2.<org.apache.ambari.server.api.query.Query: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r5)
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : interfaceinvoke r2.<org.apache.ambari.server.api.query.Query: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r5) >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : if r3 == null
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : if r3 == null >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.BaseManagementHandler: org.apache.ambari.server.api.services.Result persist(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>($r6, $r7)
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.BaseManagementHandler: org.apache.ambari.server.api.services.Result persist(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>($r6, $r7) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.CreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager getPersistenceManager()>()
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.CreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager getPersistenceManager()>() >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : $r1 = r0.<org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager m_testPm>
org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : $r1 = r0.<org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler: org.apache.ambari.server.api.services.persistence.PersistenceManager m_testPm> >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : return $r1
org.apache.ambari.server.api.handlers.CreateHandlerTest$TestCreateHandler.getPersistenceManager : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : r60 = interfaceinvoke $r3.<org.apache.ambari.server.api.services.persistence.PersistenceManager: org.apache.ambari.server.controller.spi.RequestStatus create(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>(r1, r2)
org.apache.ambari.server.api.handlers.CreateHandler.persist : r60 = interfaceinvoke $r3.<org.apache.ambari.server.api.services.persistence.PersistenceManager: org.apache.ambari.server.controller.spi.RequestStatus create(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : r61 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.CreateHandler: org.apache.ambari.server.api.services.Result createResult(org.apache.ambari.server.controller.spi.RequestStatus)>(r60)
org.apache.ambari.server.api.handlers.CreateHandler.persist : r61 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.CreateHandler: org.apache.ambari.server.api.services.Result createResult(org.apache.ambari.server.controller.spi.RequestStatus)>(r60) >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r8 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.RequestStatus: org.apache.ambari.server.controller.spi.RequestStatus$Status getStatus()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r8 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.RequestStatus: org.apache.ambari.server.controller.spi.RequestStatus$Status getStatus()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r9 = <org.apache.ambari.server.controller.spi.RequestStatus$Status: org.apache.ambari.server.controller.spi.RequestStatus$Status Complete>
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r9 = <org.apache.ambari.server.controller.spi.RequestStatus$Status: org.apache.ambari.server.controller.spi.RequestStatus$Status Complete> >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $r8 != $r9
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $r8 != $r9 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $z3 = 1
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $z3 = 1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : goto [?= $r10 = new org.apache.ambari.server.api.services.ResultImpl]
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : goto [?= $r10 = new org.apache.ambari.server.api.services.ResultImpl] >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r10 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r10 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : specialinvoke $r10.<org.apache.ambari.server.api.services.ResultImpl: void <init>(boolean)>($z3)
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : specialinvoke $r10.<org.apache.ambari.server.api.services.ResultImpl: void <init>(boolean)>($z3) >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r3 = interfaceinvoke $r10.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r3 = interfaceinvoke $r10.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>() >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getResultTree : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.util.TreeNode m_tree>
org.apache.ambari.server.api.services.ResultImpl.getResultTree : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.util.TreeNode m_tree> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getResultTree : return $r1
org.apache.ambari.server.api.services.ResultImpl.getResultTree : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $z3 != 0
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $z3 != 0 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r4 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r4 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $z1 != 0
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r5 = interfaceinvoke r3.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "resources")
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r5 = interfaceinvoke r3.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "resources") >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r4 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r4 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r4.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r4.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return $r4
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return $r4 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : interfaceinvoke r5.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true")
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : interfaceinvoke r5.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true") >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : $r3 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapNodeProps>
org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : $r3 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapNodeProps> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : if $r3 != null
org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : if $r3 != null >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : $r6 = new java.util.LinkedHashMap
org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : $r6 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapNodeProps> = $r6
org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapNodeProps> = $r6 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : $r4 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapNodeProps>
org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : $r4 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapNodeProps> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.api.util.TreeNodeImpl.setProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : i1 = 1
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : i1 = 1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r6 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r6 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $z2 == 0
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r7 = (org.apache.ambari.server.controller.spi.Resource) $r13
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : r7 = (org.apache.ambari.server.controller.spi.Resource) $r13 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r14 = new java.lang.StringBuilder
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r15 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r15 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.toString : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.toString : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.toString : return $r1
org.apache.ambari.server.controller.spi.Resource$Type.toString : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $i0 = i1
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $i0 = i1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : i1 = i1 + 1
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : interfaceinvoke r5.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r7, $r19)
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : interfaceinvoke r5.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r7, $r19) >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r11 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.RequestStatus: org.apache.ambari.server.controller.spi.RequestStatusMetaData getStatusMetadata()>()
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r11 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.RequestStatus: org.apache.ambari.server.controller.spi.RequestStatusMetaData getStatusMetadata()>() >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r12 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.BaseManagementHandler: org.apache.ambari.server.api.services.ResultMetadata convert(org.apache.ambari.server.controller.spi.RequestStatusMetaData)>($r11)
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : $r12 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.BaseManagementHandler: org.apache.ambari.server.api.services.ResultMetadata convert(org.apache.ambari.server.controller.spi.RequestStatusMetaData)>($r11) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.convert : if r1 != null
org.apache.ambari.server.api.handlers.CreateHandler.convert : if r1 != null >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.convert : return null
org.apache.ambari.server.api.handlers.CreateHandler.convert : return null >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : interfaceinvoke $r10.<org.apache.ambari.server.api.services.Result: void setResultMetadata(org.apache.ambari.server.api.services.ResultMetadata)>($r12)
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : interfaceinvoke $r10.<org.apache.ambari.server.api.services.Result: void setResultMetadata(org.apache.ambari.server.api.services.ResultMetadata)>($r12) >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.setResultMetadata : r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultMetadata m_resultMetadata> = r1
org.apache.ambari.server.api.services.ResultImpl.setResultMetadata : r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultMetadata m_resultMetadata> = r1 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : return $r10
org.apache.ambari.server.api.handlers.BaseManagementHandler.createResult : return $r10 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $z0 = interfaceinvoke r61.<org.apache.ambari.server.api.services.Result: boolean isSynchronous()>()
org.apache.ambari.server.api.handlers.CreateHandler.persist : $z0 = interfaceinvoke r61.<org.apache.ambari.server.api.services.Result: boolean isSynchronous()>() >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.isSynchronous : $z0 = r0.<org.apache.ambari.server.api.services.ResultImpl: boolean m_synchronous>
org.apache.ambari.server.api.services.ResultImpl.isSynchronous : $z0 = r0.<org.apache.ambari.server.api.services.ResultImpl: boolean m_synchronous> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.isSynchronous : return $z0
org.apache.ambari.server.api.services.ResultImpl.isSynchronous : return $z0 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : if $z0 == 0
org.apache.ambari.server.api.handlers.CreateHandler.persist : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $z1 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: boolean isCreatable()>()
org.apache.ambari.server.api.handlers.CreateHandler.persist : $z1 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: boolean isCreatable()>() >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : if $z1 == 0
org.apache.ambari.server.api.handlers.CreateHandler.persist : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r9 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r9 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : $r10 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS CREATED>
org.apache.ambari.server.api.handlers.CreateHandler.persist : $r10 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS CREATED> >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : specialinvoke $r9.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS)>($r10)
org.apache.ambari.server.api.handlers.CreateHandler.persist : specialinvoke $r9.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS)>($r10) >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : interfaceinvoke r61.<org.apache.ambari.server.api.services.Result: void setResultStatus(org.apache.ambari.server.api.services.ResultStatus)>($r9)
org.apache.ambari.server.api.handlers.CreateHandler.persist : interfaceinvoke r61.<org.apache.ambari.server.api.services.Result: void setResultStatus(org.apache.ambari.server.api.services.ResultStatus)>($r9) >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.setResultStatus : r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> = r1
org.apache.ambari.server.api.services.ResultImpl.setResultStatus : r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : goto [?= (branch)]
org.apache.ambari.server.api.handlers.CreateHandler.persist : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : goto [?= return r61]
org.apache.ambari.server.api.handlers.CreateHandler.persist : goto [?= return r61] >>>>>>>> org.apache.ambari.server.api.handlers.CreateHandler.persist : return r61
org.apache.ambari.server.api.handlers.CreateHandler.persist : return r61 >>>>>>>> org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : return $r8
org.apache.ambari.server.api.handlers.BaseManagementHandler.handleRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if r1 == null
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if r1 == null >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/")
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/") >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if $z0 == 0
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r4 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r4 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r6 = (org.apache.ambari.server.api.util.TreeNode) $r5
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r6 = (org.apache.ambari.server.api.util.TreeNode) $r5 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : return $r6
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : return $r6 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1
