org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setSourceStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setSourceStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId> = r1 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r9 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r9 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r10 = interfaceinvoke $r9.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r10 = interfaceinvoke $r9.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1: org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest this$0>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1: org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest)>($r1)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : return $r2
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : return $r1
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r11 = (org.apache.ambari.server.state.Clusters) $r10
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r11 = (org.apache.ambari.server.state.Clusters) $r10 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r4 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r4 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r5 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId getSourceStackId()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r5 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId getSourceStackId()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getSourceStackId : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId>
org.apache.ambari.server.controller.PrereqCheckRequest.getSourceStackId : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getSourceStackId : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getSourceStackId : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r12 = new java.util.HashSet
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : specialinvoke $r12.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : specialinvoke $r12.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r7 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r7 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion>
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r13 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider repositoryVersionHelper>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r13 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider repositoryVersionHelper> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper get()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper get()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3: org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest this$0>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3: org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper access$200(org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest)>($r1)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper access$200(org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$200 : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper repositoryVersionHelper>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$200 : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper repositoryVersionHelper> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$200 : return $r1
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : return $r2
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : return $r1
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$3.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r15 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r14
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r15 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r14 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r16 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r16 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : return $r1
org.apache.ambari.server.state.StackId.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r17 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r17 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : return $r1
org.apache.ambari.server.state.StackId.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r18 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r18 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r8 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.lang.String getUpgradePackageName(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.upgrade.UpgradeType)>($r16, $r17, $r18, null)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r8 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.lang.String getUpgradePackageName(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.upgrade.UpgradeType)>($r16, $r17, $r18, null) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if r8 != null
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if r8 != null >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r57 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r57 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r57)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r57) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r62 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("no_upgrade_name", r1, r2)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r62 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("no_upgrade_name", r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0
org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4
org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5]
org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : return $r5
org.apache.ambari.server.checks.CheckDescription.getFail : return $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if null == r4
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if null == r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r31 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r31 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{version}}", $r31)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{version}}", $r31) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r58 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r58 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r59 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r59 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r58[0] = $r59
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r58[0] = $r59 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r60 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r60 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r58[1] = $r60
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r58[1] = $r60 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r61 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r62, $r58)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r61 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r62, $r58) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r61)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r61) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r19 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider ambariMetaInfo>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r19 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider ambariMetaInfo> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r20 = interfaceinvoke $r19.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r20 = interfaceinvoke $r19.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4: org.apache.ambari.server.api.services.AmbariMetaInfo get()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4: org.apache.ambari.server.api.services.AmbariMetaInfo get()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4: org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest this$0>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4: org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.api.services.AmbariMetaInfo access$300(org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest)>($r1)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : $r2 = staticinvoke <org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.api.services.AmbariMetaInfo access$300(org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$300 : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$300 : $r1 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$300 : return $r1
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest.access$300 : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : return $r2
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : return $r1
org.apache.ambari.server.checks.HostsMasterMaintenanceCheckTest$4.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r21 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r20
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r21 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r20 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r22 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r22 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r23 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r23 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r24 = virtualinvoke $r21.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>($r22, $r23)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r24 = virtualinvoke $r21.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>($r22, $r23) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r63 = (org.apache.ambari.server.state.stack.UpgradePack) $r25
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r63 = (org.apache.ambari.server.state.stack.UpgradePack) $r25 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if r63 != null
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if r63 != null >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r54 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r54 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r54)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r54) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r64 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("no_upgrade_pack", r1, r2)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r64 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("no_upgrade_pack", r1, r2) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r55 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r55 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r55[0] = r8
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r55[0] = r8 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r64, $r55)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r64, $r55) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r56)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r56) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r26 = new java.util.HashSet
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r26 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : specialinvoke $r26.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : specialinvoke $r26.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r27 = virtualinvoke r63.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map getTasks()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r27 = virtualinvoke r63.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map getTasks()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r28 = interfaceinvoke $r27.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r28 = interfaceinvoke $r27.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r66 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r66 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z0 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z0 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r68 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r68 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if $z1 == 0
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r31 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r31 = r0.<org.apache.ambari.server.checks.HostsMasterMaintenanceCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r32 = interfaceinvoke $r31.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r32 = interfaceinvoke $r31.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r33 = (org.apache.ambari.server.state.Clusters) $r32
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r33 = (org.apache.ambari.server.state.Clusters) $r32 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r72 = interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r72 = interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r34 = interfaceinvoke r72.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r34 = interfaceinvoke r72.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r73 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : r73 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z2 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z2 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if $z2 == 0
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r35 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $r35 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z3 = virtualinvoke $r35.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : $z3 = virtualinvoke $r35.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.HostsMasterMaintenanceCheck.perform : if $z3 != 0
