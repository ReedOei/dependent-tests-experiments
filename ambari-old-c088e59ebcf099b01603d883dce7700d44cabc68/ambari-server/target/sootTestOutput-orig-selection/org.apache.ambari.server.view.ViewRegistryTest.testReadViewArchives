org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/events/publishers/AmbariEventPublisher;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0
org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r29
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r29 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r30
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r30 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r31
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r31 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r32
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r32 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r33
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r33 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r34
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r34 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r35
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r35 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r36
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r36 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r37
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r37 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarInputStream;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarInputStream;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r38
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r38 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarEntry;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarEntry;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r39
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r39 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Ljava/io/FileOutputStream;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Ljava/io/FileOutputStream;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r40
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r40 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r41 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r41 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r42)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r42) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml>
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1]
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;"
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;" >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions>
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY")
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version>
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build>
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker>
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system>
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal>
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;"
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;" >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>()
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r2 = new java.util.HashSet
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r3 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r3 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>() >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getInstances()>()
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getInstances()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances>
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances>
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : return $r2 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : return $r1
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r9 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r4
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r9 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r5 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r5 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r5.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r9)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r5.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r9) >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton>
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton> >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.InstanceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getName : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : $z0 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: boolean visible>
org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : $z0 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: boolean visible> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : return $z0
org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : return $z0 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i0 = 31 * i2
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i0 = 31 * i2 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i3 = $i0 + $i1
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i3 = $i0 + $i1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : return i3
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : return i3 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r6 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r6 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r10 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r7
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r10 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r7 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r8 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r8 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r8.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r10)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r8.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon()>()
org.apache.ambari.server.orm.entities.ViewEntity.getIcon : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon64()>()
org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon64()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon64")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon64") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon64>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r8)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : return $r2
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r328 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r328 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r323 = interfaceinvoke r328.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r323 = interfaceinvoke r328.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r329 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r323
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r329 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r323 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void removeInstanceData(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void removeInstanceData(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getUsername()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getUsername()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.security.SecurityHelper securityHelper>
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.security.SecurityHelper securityHelper> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r2 = interfaceinvoke $r1.<org.apache.ambari.server.security.SecurityHelper: java.lang.String getCurrentUserName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r2 = interfaceinvoke $r1.<org.apache.ambari.server.security.SecurityHelper: java.lang.String getCurrentUserName()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r1 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r1 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r6 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r6 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $r6 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $r6 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r7 = null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r7 = null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= $z0 = $r7 instanceof org.springframework.security.core.userdetails.UserDetails]
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= $z0 = $r7 instanceof org.springframework.security.core.userdetails.UserDetails] >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z0 = $r7 instanceof org.springframework.security.core.userdetails.UserDetails
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z0 = $r7 instanceof org.springframework.security.core.userdetails.UserDetails >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z0 == 0
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z1 = $r7 instanceof org.apache.ambari.server.security.authorization.User
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z1 = $r7 instanceof org.apache.ambari.server.security.authorization.User >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z1 == 0
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $r7 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $r7 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r9 = ""
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r9 = "" >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= r8 = $r9]
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= r8 = $r9] >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r8 = $r9
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r8 = $r9 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : return r8
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : return r8 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : return $r2
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if r1 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if $i0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $r2 = " "
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $r2 = " " >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : goto [?= return $r2]
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : return $r2
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("data")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("data") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection data>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection data> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : return null
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : return null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : if r2 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : if r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r4 = new org.apache.ambari.server.orm.entities.ViewInstanceDataEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r4 = new org.apache.ambari.server.orm.entities.ViewInstanceDataEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : specialinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : specialinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewName(java.lang.String)>($r5)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewName(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceName(java.lang.String)>($r6)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceName(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setUser(java.lang.String)>($r7)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setUser(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_user(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_user(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("user")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("user") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("user", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("user", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setValue(java.lang.String)>(r2)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setValue(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_value(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_value(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("value")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("value") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("value", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("value", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceEntity(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r0)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceEntity(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r324 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r324 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r324.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r324.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r325 = new org.apache.ambari.server.orm.entities.ViewEntityEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r325 = new org.apache.ambari.server.orm.entities.ViewEntityEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r326 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r326 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r326)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r326) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setIdProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_idProperty(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setIdProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_idProperty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("idProperty")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("idProperty") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("idProperty", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("idProperty", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setClassName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_className(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setClassName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_className(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("className")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("className") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("className", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("className", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r327 = virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r327 = virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r327)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r327) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r329)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r329) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r324.<java.util.Collection: boolean add(java.lang.Object)>($r325)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r324.<java.util.Collection: boolean add(java.lang.Object)>($r325) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i7 = virtualinvoke $r7.<java.lang.Long: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i7 = virtualinvoke $r7.<java.lang.Long: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= $i0 = 31 * $i7]
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= $i0 = 31 * $i7] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i0 = 31 * $i7
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i0 = 31 * $i7 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewName()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i9 = $i0 + $i1
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i9 = $i0 + $i1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i2 = 31 * i9
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i2 = 31 * i9 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewInstanceName()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewInstanceName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewInstanceName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewInstanceName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i10 = $i2 + $i3
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i10 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i4 = 31 * i10
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i4 = 31 * i10 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_className()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_className()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("className")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("className") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i5 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i5 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i11 = $i4 + $i5
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i11 = $i4 + $i5 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i6 = 31 * i11
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i6 = 31 * i11 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("idProperty")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("idProperty") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r5 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i12 = virtualinvoke $r6.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i12 = virtualinvoke $r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= i13 = $i6 + $i12]
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= i13 = $i6 + $i12] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i13 = $i6 + $i12
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i13 = $i6 + $i12 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : return i13
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : return i13 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>($r324)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>($r324) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.setEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_entities(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.setEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_entities(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("entities")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("entities") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("entities", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("entities", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities> = r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setInstances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_instances(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setInstances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_instances(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("instances")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("instances") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("instances", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("instances", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration>
org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r331 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r43)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r331 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r43) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r332 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r332 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z4 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = interfaceinvoke r332.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = interfaceinvoke r332.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r333 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r320
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r333 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r320 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r322)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r322) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r333.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r321)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r333.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r321) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r44.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r44.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = virtualinvoke $r45.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = virtualinvoke $r45.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r52.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r52.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r61.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r61.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r62 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r62 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i2 = virtualinvoke $r66.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i2 = virtualinvoke $r66.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r68 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r67)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r68 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r67) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r70 = interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r69)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r70 = interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r72 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r72 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r72.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r72.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r78 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r78 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l4 = virtualinvoke $r78.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l4 = virtualinvoke $r78.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r79 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r79 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r81 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r81 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r81)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r81) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r84 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r84 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = virtualinvoke $r84.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = virtualinvoke $r84.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r86 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r85)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r86 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r85) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r87 = <java.lang.Boolean: java.lang.Boolean FALSE>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r87 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r87)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92[0] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92[0] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke r3.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke r3.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r94 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r94 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r96 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r96 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r96)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r96) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke $r98.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke $r98.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z8 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z8 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke r4.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke r4.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke $r108.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke $r108.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z10 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z10 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke r4.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke r4.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r113 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r113 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r113)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r113) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r115)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r115) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r119 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r118)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r119 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r118) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r120.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r120.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = interfaceinvoke $r119.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r120)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = interfaceinvoke $r119.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r120) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r8.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r8.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r125 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r125 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r125)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r125) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r271 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r271 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r272 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r271)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r272 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r271) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r272.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r272.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r274 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r274 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r275 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r274)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r275 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r274) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r275.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r275.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r277 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r277 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r278 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r277)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r278 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r277) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r278.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r278.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z23 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z23 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r280 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z23)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r280 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z23) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r281 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r280)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r281 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r280) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r282 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r282 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r281.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r282)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r281.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r282) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r284 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r284 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r285 = (byte[]) $r284
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r285 = (byte[]) $r284 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i14 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r285)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i14 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r285) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r286 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r286 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r287 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r286)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r287 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r286) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r288 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r288 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r287.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r288)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r287.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r288) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r290 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r290 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r291 = (byte[]) $r290
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r291 = (byte[]) $r290 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i15 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r291)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i15 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r291) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r292 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r292 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r293 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r292)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r293 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r292) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r293.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r294)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r293.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r294) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = (byte[]) $r296
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = (byte[]) $r296 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i16 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i16 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i17 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i17 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r297, $i16, $i17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r297, $i16, $i17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r298 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r298 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r299 = virtualinvoke $r298.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r299 = virtualinvoke $r298.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r300 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r299)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r300 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r299) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r300.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r300.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r129 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r128)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r129 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r128) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r130)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r130) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r2.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r2.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r133 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r133 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r133)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r133) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r135 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r135 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r136 = interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r135)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r136 = interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r135) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r138 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r138 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r140)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r140) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r145.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r145.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r7.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r7.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r149 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r148)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r149 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r148) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r150 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r150 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r151 = interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r150)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r151 = interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r150) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155[0] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155[0] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r156 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r155)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r156 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r155) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r156.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r156.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r158)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r158) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r160.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r160.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r161 = interfaceinvoke $r159.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r160)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r161 = interfaceinvoke $r159.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r160) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke $r163.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke $r163.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r164)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r164) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r166 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r166 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r166)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r166) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.state.Cluster) $r169
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.state.Cluster) $r169 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = (org.apache.ambari.server.state.Service) $r170
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = (org.apache.ambari.server.state.Service) $r170 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r171 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceEntity;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r171 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceEntity;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r171
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r171 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceDataEntity;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceDataEntity;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r172
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r172 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r174 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r173)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r174 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r173) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = interfaceinvoke $r174.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = interfaceinvoke $r174.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r175.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r175.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r177 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r177 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r177)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r177) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = interfaceinvoke $r178.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = interfaceinvoke $r178.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r181.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r181.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r184 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r184 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r184.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r184.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0") >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = interfaceinvoke $r185.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = interfaceinvoke $r185.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r186)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r186) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r188.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r188.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r188)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r188) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190 = newarray (java.lang.Object)[19]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190 = newarray (java.lang.Object)[19] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[0] = $r191
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[0] = $r191 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[1] = r1
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[1] = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[2] = r2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[2] = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[3] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[3] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[4] = r4
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[4] = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[5] = r5
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[5] = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[6] = r6
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[6] = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[7] = r7
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[7] = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[8] = r8
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[8] = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[9] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[9] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[10] = r10
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[10] = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[11] = r11
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[11] = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[12] = r12
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[12] = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[13] = $r192
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[13] = $r192 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[14] = $r193
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[14] = $r193 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[15] = $r194
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[15] = $r194 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[16] = $r195
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[16] = $r195 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[17] = r17
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[17] = r17 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[18] = r19
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[18] = r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r190)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r190) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r196 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r196 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r331, $r44, $r52, $r54, z0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r331, $r44, $r52, $r54, z0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r207 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r207 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r202 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r202 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.view.ViewInstanceOperationHandler,org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r209, $r208, $r207, $r206, $r205, $r204, $r203, $r202, $r201, $r200, $r199, null, $r196, $r198, $r197)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.view.ViewInstanceOperationHandler,org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r209, $r208, $r207, $r206, $r205, $r204, $r203, $r202, $r201, $r200, $r199, null, $r196, $r198, $r197) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = r12
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r1 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r1 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r2 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r2 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : z0 = $z3
org.apache.ambari.server.view.ViewRegistry.readViewArchives : z0 = $z3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r3 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r3 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z3 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r9 = "ALL"
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r9 = "ALL" >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Triggering loading of [{}] views", $r9)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Triggering loading of [{}] views", $r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives(boolean,boolean,java.lang.String)>(z0, 0, ".*")
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives(boolean,boolean,java.lang.String)>(z0, 0, ".*") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r12 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r12 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r55 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r55 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r14 = virtualinvoke r55.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r14 = virtualinvoke r55.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r16 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r16 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("work")
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("work") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r19 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r19 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = virtualinvoke $r19.<org.apache.ambari.server.view.ViewExtractor: boolean ensureExtractedArchiveDirectory(java.lang.String)>(r2)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = virtualinvoke $r19.<org.apache.ambari.server.view.ViewExtractor: boolean ensureExtractedArchiveDirectory(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $r3 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $r3 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : r2 = virtualinvoke $r3.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : r2 = virtualinvoke $r3.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map files>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map files> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r4 = (java.io.File) $r3
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r4 = (java.io.File) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : return $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z0 != 0
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z1 = virtualinvoke r2.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z1 = virtualinvoke r2.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z1 == 0
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z2 = 1
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z2 = 1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : goto [?= return $z2]
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : return $z2
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : return $z2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r3 = virtualinvoke r55.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r3 = virtualinvoke r55.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if r3 == null
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if r3 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r26 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r26 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r26.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r26.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r27 = r0.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r27 = r0.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r28 = interfaceinvoke $r27.<javax.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r28 = interfaceinvoke $r27.<javax.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$2.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistryTest$2: org.apache.ambari.server.api.services.AmbariMetaInfo get()>()
org.apache.ambari.server.view.ViewRegistryTest$2.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistryTest$2: org.apache.ambari.server.api.services.AmbariMetaInfo get()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$2.get : $r1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$2: org.apache.ambari.server.api.services.AmbariMetaInfo val$finalMetaInfo>
org.apache.ambari.server.view.ViewRegistryTest$2.get : $r1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$2: org.apache.ambari.server.api.services.AmbariMetaInfo val$finalMetaInfo> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$2.get : return $r1
org.apache.ambari.server.view.ViewRegistryTest$2.get : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r29 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r28
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r29 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r28 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r5 = virtualinvoke $r29.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getServerVersion()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r5 = virtualinvoke $r29.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getServerVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : i1 = lengthof r3
org.apache.ambari.server.view.ViewRegistry.readViewArchives : i1 = lengthof r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : i2 = 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : i2 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if i2 >= i1
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if i2 >= i1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r6 = r3[i2]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r6 = r3[i2] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z6 = virtualinvoke r6.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z6 = virtualinvoke r6.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z6 != 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z6 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r37 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r37 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r57 = virtualinvoke $r37.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromArchive(java.io.File)>(r6)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r57 = virtualinvoke $r37.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromArchive(java.io.File)>(r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : if $z0 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r4 = (org.apache.ambari.server.view.configuration.ViewConfig) $r3
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r4 = (org.apache.ambari.server.view.configuration.ViewConfig) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : return $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r58 = virtualinvoke r57.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r58 = virtualinvoke r57.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r7 = virtualinvoke r57.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getVersion()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r7 = virtualinvoke r57.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r8 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r58, r7)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r8 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r58, r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z7 = virtualinvoke r8.<java.lang.String: boolean matches(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z7 = virtualinvoke r8.<java.lang.String: boolean matches(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z7 != 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z7 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r38 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r38 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r40 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r40 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r9 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r9 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r43 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r43 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r10 = virtualinvoke $r43.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r9)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r10 = virtualinvoke $r43.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r44 = new org.apache.ambari.server.orm.entities.ViewEntity
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r44 = new org.apache.ambari.server.orm.entities.ViewEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r45 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r45 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r44.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r57, $r45, r9)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r44.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r57, $r45, r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : z2 = virtualinvoke $r44.<org.apache.ambari.server.orm.entities.ViewEntity: boolean isSystem()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : z2 = virtualinvoke $r44.<org.apache.ambari.server.orm.entities.ViewEntity: boolean isSystem()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer _persistence_get_system()>()
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer _persistence_get_system()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("system")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("system") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer system>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer system> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : if $i0 != 1
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : if $i0 != 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $z0 = 1
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $z0 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : goto [?= return $z0]
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : return $z0
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z0 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void addDefinition(org.apache.ambari.server.orm.entities.ViewEntity)>($r44)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void addDefinition(org.apache.ambari.server.orm.entities.ViewEntity)>($r44) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.addDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions>
org.apache.ambari.server.view.ViewRegistry.addDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.addDefinition : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.addDefinition : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.addDefinition : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.view.ViewRegistry.addDefinition : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z2 != 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File,java.lang.String)>($r44, r6, r10, r5)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File,java.lang.String)>($r44, r6, r10, r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r11 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYING>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r11 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYING> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deploying ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deploying ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r11, $r15)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r11, $r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setStatus : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setStatus : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setStatusDetail : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String statusDetail> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setStatusDetail : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String statusDetail> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r5 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r5 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r17 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r17 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading view archive ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading view archive ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r21)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r22 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r22 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r58 = virtualinvoke $r22.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader extractViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File)>(r1, r2, r3)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r58 = virtualinvoke $r22.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader extractViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z0 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z5 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z5 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z5 != 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z5 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating archive folder ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating archive folder ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r74 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r74 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r74)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r74) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r20 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r20 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>(r74)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>(r74) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z1 = virtualinvoke r3.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z1 = virtualinvoke r3.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z1 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r27 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r27 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r75 = virtualinvoke $r27.<org.apache.ambari.server.view.ViewArchiveUtility: java.util.jar.JarInputStream getJarFileStream(java.io.File)>(r2)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r75 = virtualinvoke $r27.<org.apache.ambari.server.view.ViewArchiveUtility: java.util.jar.JarInputStream getJarFileStream(java.io.File)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map jarFiles>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map jarFiles> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r4 = (java.util.jar.JarInputStream) $r3
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r4 = (java.util.jar.JarInputStream) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : return $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting files from ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting files from ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r30 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r30 = virtualinvoke r2.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r76 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r76 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r76)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r76) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r33 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r33 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>(r76)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>(r76) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r35 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r35 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r34 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r34 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r37 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r37 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r5 = virtualinvoke $r35.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>($r40)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r5 = virtualinvoke $r35.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z2 = virtualinvoke r5.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z2 = virtualinvoke r5.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z2 != 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $r41 == null
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $r41 == null >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r42 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r42 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r44 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r44 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r46 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r46 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r7 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r7 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r48 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r48 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Extracting {}", r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Extracting {}", r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r49 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r49 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r8 = virtualinvoke $r49.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r8 = virtualinvoke $r49.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z3 = virtualinvoke $r41.<java.util.jar.JarEntry: boolean isDirectory()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z3 = virtualinvoke $r41.<java.util.jar.JarEntry: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z3 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r50 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r50 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r9 = virtualinvoke $r50.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.FileOutputStream getFileOutputStream(java.io.File)>(r8)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r9 = virtualinvoke $r50.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.FileOutputStream getFileOutputStream(java.io.File)>(r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map outputStreams>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map outputStreams> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r4 = (java.io.FileOutputStream) $r3
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r4 = (java.io.FileOutputStream) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : return $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r51 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r51 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r52 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r52 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Begin copying from {} to {}", $r52, r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Begin copying from {} to {}", $r52, r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r10 = newarray (byte)[1024]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r10 = newarray (byte)[1024] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $i1 <= -1
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $i1 <= -1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void write(byte[],int,int)>(r10, 0, $i1)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void write(byte[],int,int)>(r10, 0, $i1) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10)]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r53 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r53 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r54 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r54 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r53.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Finish copying from {} to {}", $r54, r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r53.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Finish copying from {} to {}", $r54, r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void flush()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void close()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>()]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>()] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= (branch)]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void close()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r80 = virtualinvoke $r14.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r4, 0)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r80 = virtualinvoke $r14.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r4, 0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z1 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r4 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r4 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z2 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r3 = (java.io.File) $r6
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r3 = (java.io.File) $r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r7 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r7 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z3 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r8 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r8 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r10 = (org.apache.ambari.server.view.configuration.ViewConfig) $r9
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r10 = (org.apache.ambari.server.view.configuration.ViewConfig) $r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : return $r10
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : return $r10 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r15 = specialinvoke r0.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader getArchiveClassLoader(org.apache.ambari.server.view.configuration.ViewConfig,java.io.File)>(r80, r3)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r15 = specialinvoke r0.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader getArchiveClassLoader(org.apache.ambari.server.view.configuration.ViewConfig,java.io.File)>(r80, r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r12 = new java.util.LinkedList
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r12 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r12.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r12.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r15 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r15 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/classes")
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/classes") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r18 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r18 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r6 = virtualinvoke $r18.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r6 = virtualinvoke $r18.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z0 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z0 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z0 == 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r27 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r27 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r28 = virtualinvoke $r27.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r28 = virtualinvoke $r27.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r28)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r21 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r21 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/lib")
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/lib") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r7 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r7 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r24 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r24 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r8 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r8 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z1 = virtualinvoke r8.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z1 = virtualinvoke r8.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z1 == 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r9 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r9 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if r9 == null
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if r9 == null >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i0 = lengthof r9
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i0 = lengthof r9 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if i1 >= i0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if i1 >= i0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r11 = r9[i1]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r11 = r9[i1] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z3 = virtualinvoke r11.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z3 = virtualinvoke r11.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z3 != 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r25 = virtualinvoke r11.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r25 = virtualinvoke r11.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r26 = virtualinvoke $r25.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r26 = virtualinvoke $r25.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r26)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = i1 + 1
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : goto [?= (branch)]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r29 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r29 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r30 = virtualinvoke $r29.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r30 = virtualinvoke $r29.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r30)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r31 = new org.apache.ambari.server.view.ViewClassLoader
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r31 = new org.apache.ambari.server.view.ViewClassLoader >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $i2 = interfaceinvoke $r12.<java.util.List: int size()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $i2 = interfaceinvoke $r12.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r32 = newarray (java.net.URL)[$i2]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r32 = newarray (java.net.URL)[$i2] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r33 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r33 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r34 = (java.net.URL[]) $r33
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r34 = (java.net.URL[]) $r33 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r31.<org.apache.ambari.server.view.ViewClassLoader: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,java.net.URL[])>(r1, $r34)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r31.<org.apache.ambari.server.view.ViewClassLoader: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,java.net.URL[])>(r1, $r34) >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : $r3 = new org.eclipse.jetty.webapp.WebAppContext
org.apache.ambari.server.view.ViewClassLoader.getInitContext : $r3 = new org.eclipse.jetty.webapp.WebAppContext >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : specialinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void <init>()>()
org.apache.ambari.server.view.ViewClassLoader.getInitContext : specialinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.server.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.server.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.view.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.view.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.google.inject.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.google.inject.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.slf4j.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.slf4j.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.sun.jersey.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.sun.jersey.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.velocity.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.velocity.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r0 == null
org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r0 == null >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : r2 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getExtraClasspath()>()
org.apache.ambari.server.view.ViewClassLoader.getInitContext : r2 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getExtraClasspath()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List classpath>
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List classpath> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r3 = null
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r3 = null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : goto [?= return $r3]
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : return $r3
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : return $r3 >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r2 == null
org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : return $r3
org.apache.ambari.server.view.ViewClassLoader.getInitContext : return $r3 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : return $r31
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : return $r31 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : return $r15
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : return $r15 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void configureViewLogging(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r58)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void configureViewLogging(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r58) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r3 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("view.log4j.properties")
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r3 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("view.log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = null
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r24 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r24 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r23 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r23 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z0 = virtualinvoke $r23.<org.apache.ambari.server.configuration.Configuration: boolean isViewValidationEnabled()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z0 = virtualinvoke $r23.<org.apache.ambari.server.configuration.Configuration: boolean isViewValidationEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r59 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r5, $z0)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r59 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r5, $z0) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setConfiguration(org.apache.ambari.server.view.configuration.ViewConfig)>(r59)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setConfiguration(org.apache.ambari.server.view.configuration.ViewConfig)>(r59) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersions(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String)>(r1, r4)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersions(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String)>(r1, r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String minAmbariVersion>
org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String minAmbariVersion> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String maxAmbariVersion>
org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String maxAmbariVersion> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2]
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchive : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity setupViewDefinition(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r58)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity setupViewDefinition(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r58) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>(r2)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getParameters()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getParameters()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters>
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters>
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r8 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r6 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r6 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r54 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r54 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z0 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z0 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r46 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r46 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r55 = (org.apache.ambari.server.view.configuration.ParameterConfig) $r46
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r55 = (org.apache.ambari.server.view.configuration.ParameterConfig) $r46 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r47 = new org.apache.ambari.server.orm.entities.ViewParameterEntity
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r47 = new org.apache.ambari.server.orm.entities.ViewParameterEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewName(java.lang.String)>(r6)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_viewName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_viewName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r48 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r48 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ParameterConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setName(java.lang.String)>($r48)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setName(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r49 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDescription()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r49 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDescription(java.lang.String)>($r49)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDescription(java.lang.String)>($r49) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setDescription : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_description(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setDescription : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_description(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("description")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("description") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("description", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("description", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r50 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getLabel()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r50 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getLabel()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setLabel(java.lang.String)>($r50)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setLabel(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_label(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_label(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("label")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("label") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("label", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("label", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r51 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getPlaceholder()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r51 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getPlaceholder()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String placeholder>
org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String placeholder> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setPlaceholder(java.lang.String)>($r51)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setPlaceholder(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setPlaceholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_placeholder(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setPlaceholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_placeholder(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("placeholder")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("placeholder") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("placeholder", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("placeholder", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r52 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDefaultValue()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r52 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDefaultValue()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String defaultValue>
org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String defaultValue> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDefaultValue(java.lang.String)>($r52)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDefaultValue(java.lang.String)>($r52) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setDefaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_defaultValue(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setDefaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_defaultValue(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("defaultValue")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("defaultValue") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("defaultValue", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("defaultValue", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r53 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getClusterConfig()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r53 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String clusterConfig>
org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String clusterConfig> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setClusterConfig(java.lang.String)>($r53)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setClusterConfig(java.lang.String)>($r53) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setClusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_clusterConfig(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setClusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_clusterConfig(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("clusterConfig")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("clusterConfig") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("clusterConfig", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("clusterConfig", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z7 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isRequired()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z7 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isRequired()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean required>
org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean required> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : return $z0
org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setRequired(boolean)>($z7)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setRequired(boolean)>($z7) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : if z0 == 0
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 89
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 89 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0)]
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0)] >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("required")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("required") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r1 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r1 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r2 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r2 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("required", $r1, $r2)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("required", $r1, $r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required> = c0
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required> = c0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z8 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isMasked()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z8 = virtualinvoke r55.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isMasked()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean masked>
org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean masked> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : return $z0
org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setMasked(boolean)>($z8)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setMasked(boolean)>($z8) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : if z0 == 0
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 78
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 78 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("masked")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("masked") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r1 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r1 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r2 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r2 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("masked", $r1, $r2)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("masked", $r1, $r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked> = c0
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked> = c0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewEntity(org.apache.ambari.server.orm.entities.ViewEntity)>(r1)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke $r47.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewEntity(org.apache.ambari.server.orm.entities.ViewEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_view(org.apache.ambari.server.orm.entities.ViewEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_view(org.apache.ambari.server.orm.entities.ViewEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("view")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("view") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("view", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("view", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r47)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : goto [?= $z0 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : goto [?= $z0 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 78
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 78 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 89
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 89 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0)]
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setParameters(java.util.Collection)>($r8)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setParameters(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setParameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_parameters(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setParameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_parameters(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("parameters")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("parameters") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("parameters", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("parameters", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r57 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getResources()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r57 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getResources()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources>
org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getResources : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources>
org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getResources : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r58 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type getExternalResourceType()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r58 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type getExternalResourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type externalResourceType>
org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type externalResourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r9 = new org.apache.ambari.server.view.ViewExternalSubResourceProvider
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r9 = new org.apache.ambari.server.view.ViewExternalSubResourceProvider >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r9.<org.apache.ambari.server.view.ViewExternalSubResourceProvider: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.orm.entities.ViewEntity)>(r58, r1)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r9.<org.apache.ambari.server.view.ViewExternalSubResourceProvider: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.orm.entities.ViewEntity)>(r58, r1) >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : $r1 = new java.util.HashSet
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("instance_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("instance_name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("view_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("view_name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("version")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("version") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : return $r1
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r2 = new java.util.HashMap
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type View>
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type View> >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "view_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "view_name") >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r5 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewVersion>
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r5 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewVersion> >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "version")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "version") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r7 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewInstance>
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r7 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewInstance> >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "instance_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "instance_name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, "name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, "name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : return $r2
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r46 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r46 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception loading view ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception loading view ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r48 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r48 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r61 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r61 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r51 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r51 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r50 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r50 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r54 = virtualinvoke $r45.<java.lang.Throwable: java.lang.String getMessage()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r54 = virtualinvoke $r45.<java.lang.Throwable: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r51, $r56)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r51, $r56) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r57 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r57 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r61, $r45)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r61, $r45) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= (branch)]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= i2 = i2 + 1]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= i2 = i2 + 1] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : i2 = i2 + 1
org.apache.ambari.server.view.ViewRegistry.readViewArchives : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r30 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getDefinitions()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r30 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getDefinitions()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r1 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions>
org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r1 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinitions : return $r2
org.apache.ambari.server.view.ViewRegistry.getDefinitions : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r61 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r61 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z4 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z4 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z4 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r34 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r34 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r62 = (org.apache.ambari.server.orm.entities.ViewEntity) $r34
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r62 = (org.apache.ambari.server.orm.entities.ViewEntity) $r34 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r35 = virtualinvoke r62.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r35 = virtualinvoke r62.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getStatus : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status>
org.apache.ambari.server.orm.entities.ViewEntity.getStatus : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getStatus : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r36 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r36 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $r35 != $r36
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $r35 != $r36 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= $z4 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= $z4 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r66 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r66 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z10 = virtualinvoke $r66.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z10 = virtualinvoke $r66.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z10 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z10 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= return]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= return] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l5 + 10000L
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l5 + 10000L >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean deploymentFailed>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean deploymentFailed> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : return $z0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z25 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z25 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r340 == null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r340 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = $l12 cmp l0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = $l12 cmp l0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b13 >= 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b13 >= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String)>($r3)
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions>
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = (org.apache.ambari.server.orm.entities.ViewEntity) $r3
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = (org.apache.ambari.server.orm.entities.ViewEntity) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : return $r4
org.apache.ambari.server.view.ViewRegistry.getDefinition : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z22 = virtualinvoke $r230.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r231)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z22 = virtualinvoke $r230.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r231) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z22 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z22 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b19 = 2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b19 = 2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r340)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r340) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r210, $r211)
