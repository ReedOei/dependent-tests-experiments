org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.PutRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PutRequestTest$1: void <init>(org.apache.ambari.server.api.services.PutRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PutRequestTest$1: void <init>(org.apache.ambari.server.api.services.PutRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.PutRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3
org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>() >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.PutRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler>
org.apache.ambari.server.api.services.PutRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.PutRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler> >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest$1.getRequestHandler : return $r1
org.apache.ambari.server.api.services.PutRequestTest$1.getRequestHandler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0)
org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>() >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.PutRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor>
org.apache.ambari.server.api.services.PutRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.PutRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor> >>>>>>>> org.apache.ambari.server.api.services.PutRequestTest$1.getResultPostProcessor : return $r1
org.apache.ambari.server.api.services.PutRequestTest$1.getResultPostProcessor : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate>
org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : return $r1
org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.QueryPostRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: void <init>(org.apache.ambari.server.api.services.QueryPostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: void <init>(org.apache.ambari.server.api.services.QueryPostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.QueryPostRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3
org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>() >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler>
org.apache.ambari.server.api.services.QueryPostRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler> >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest$1.getRequestHandler : return $r1
org.apache.ambari.server.api.services.QueryPostRequestTest$1.getRequestHandler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0)
org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>() >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor>
org.apache.ambari.server.api.services.QueryPostRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.QueryPostRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor> >>>>>>>> org.apache.ambari.server.api.services.QueryPostRequestTest$1.getResultPostProcessor : return $r1
org.apache.ambari.server.api.services.QueryPostRequestTest$1.getResultPostProcessor : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate>
org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : return $r1
org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.PostRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PostRequestTest$1: void <init>(org.apache.ambari.server.api.services.PostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.PostRequestTest$1: void <init>(org.apache.ambari.server.api.services.PostRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3
org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>() >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.PostRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler>
org.apache.ambari.server.api.services.PostRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.PostRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler> >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest$1.getRequestHandler : return $r1
org.apache.ambari.server.api.services.PostRequestTest$1.getRequestHandler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0)
org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>() >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.PostRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor>
org.apache.ambari.server.api.services.PostRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.PostRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor> >>>>>>>> org.apache.ambari.server.api.services.PostRequestTest$1.getResultPostProcessor : return $r1
org.apache.ambari.server.api.services.PostRequestTest$1.getResultPostProcessor : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate>
org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : return $r1
org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.GetRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.GetRequestTest$1: void <init>(org.apache.ambari.server.api.services.GetRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.GetRequestTest$1: void <init>(org.apache.ambari.server.api.services.GetRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.GetRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3
org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>() >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.GetRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler>
org.apache.ambari.server.api.services.GetRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.GetRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler> >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest$1.getRequestHandler : return $r1
org.apache.ambari.server.api.services.GetRequestTest$1.getRequestHandler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0)
org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>() >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.GetRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor>
org.apache.ambari.server.api.services.GetRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.GetRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor> >>>>>>>> org.apache.ambari.server.api.services.GetRequestTest$1.getResultPostProcessor : return $r1
org.apache.ambari.server.api.services.GetRequestTest$1.getResultPostProcessor : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate>
org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : return $r1
org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.DeleteRequestTest$1 >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.DeleteRequestTest$1: void <init>(org.apache.ambari.server.api.services.DeleteRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6)
org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : specialinvoke $r8.<org.apache.ambari.server.api.services.DeleteRequestTest$1: void <init>(org.apache.ambari.server.api.services.DeleteRequestTest,javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.predicate.PredicateCompiler,org.apache.ambari.server.api.handlers.RequestHandler,org.apache.ambari.server.api.services.ResultPostProcessor)>(r0, r1, r2, r3, r7, r4, r5, r6) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : return $r8
org.apache.ambari.server.api.services.DeleteRequestTest.getTestRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response")
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("minimal_response") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.isMinimal : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1
org.apache.ambari.server.api.services.BaseRequest.isMinimal : return $z1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r3 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format")
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("format") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r8 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r5 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8)
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.api.query.render.Renderer getRenderer(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.query.render.Renderer m_renderer> = $r7 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = virtualinvoke $r1.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 != null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r24 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3
org.apache.ambari.server.api.services.BaseRequest.getURI : return $r3 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?")
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("?") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r25 = null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25]
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : goto [?= r23 = $r25] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r23 = $r25 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r23 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>() >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.DeleteRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler>
org.apache.ambari.server.api.services.DeleteRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.DeleteRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler> >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest$1.getRequestHandler : return $r1
org.apache.ambari.server.api.services.DeleteRequestTest$1.getRequestHandler : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0)
org.apache.ambari.server.api.services.BaseRequest.process : r24 = interfaceinvoke $r2.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r0) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r29 = interfaceinvoke r24.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.services.BaseRequest.process : $z1 = virtualinvoke $r29.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0
org.apache.ambari.server.api.services.BaseRequest.process : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.ResultPostProcessor getResultPostProcessor()>() >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.DeleteRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor>
org.apache.ambari.server.api.services.DeleteRequestTest$1.getResultPostProcessor : $r1 = r0.<org.apache.ambari.server.api.services.DeleteRequestTest$1: org.apache.ambari.server.api.services.ResultPostProcessor val$processor> >>>>>>>> org.apache.ambari.server.api.services.DeleteRequestTest$1.getResultPostProcessor : return $r1
org.apache.ambari.server.api.services.DeleteRequestTest$1.getResultPostProcessor : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24)
org.apache.ambari.server.api.services.BaseRequest.process : interfaceinvoke $r3.<org.apache.ambari.server.api.services.ResultPostProcessor: void process(org.apache.ambari.server.api.services.Result)>(r24) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.process : return r24
org.apache.ambari.server.api.services.BaseRequest.process : return r24 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate>
org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : return $r1
