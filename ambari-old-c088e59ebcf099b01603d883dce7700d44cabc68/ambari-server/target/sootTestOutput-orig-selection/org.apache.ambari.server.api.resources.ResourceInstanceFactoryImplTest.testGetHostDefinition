org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if $z0 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r17 = (java.lang.String) $r7
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r17 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if r17 == null
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if r17 == null >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r9 = virtualinvoke r17.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r9 = virtualinvoke r17.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r5 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: java.util.Map resourceDefinitions>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r5 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: java.util.Map resourceDefinitions> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z0 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r6 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r6 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES>
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2
org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0]
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i0 = virtualinvoke $r7.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i0 = virtualinvoke $r7.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i1 = $r6[$i0]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i1 = $r6[$i0] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : tableswitch($i1) {     case 1:
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r145)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z1 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r161 = new org.apache.ambari.server.api.resources.DetachedHostResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r161 = new org.apache.ambari.server.api.resources.DetachedHostResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r156 = r161
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r156 = r161 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r161.<org.apache.ambari.server.api.resources.DetachedHostResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r161.<org.apache.ambari.server.api.resources.DetachedHostResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r155 = $r156
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r155 = $r156 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= return r155]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= return r155] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : return r155
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : return r155 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r4 = new org.apache.ambari.server.api.query.QueryImpl
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r4 = new org.apache.ambari.server.api.query.QueryImpl >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r3 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: java.lang.String PROVIDER_MODULE_CLASS>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r3 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: java.lang.String PROVIDER_MODULE_CLASS> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3)
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.Service$Type.values : $r0 = <org.apache.ambari.server.state.Service$Type: org.apache.ambari.server.state.Service$Type[] $VALUES>
org.apache.ambari.server.state.Service$Type.values : $r0 = <org.apache.ambari.server.state.Service$Type: org.apache.ambari.server.state.Service$Type[] $VALUES> >>>>>>>> org.apache.ambari.server.state.Service$Type.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.Service$Type.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.Service$Type.values : $r2 = (org.apache.ambari.server.state.Service$Type[]) $r1
org.apache.ambari.server.state.Service$Type.values : $r2 = (org.apache.ambari.server.state.Service$Type[]) $r1 >>>>>>>> org.apache.ambari.server.state.Service$Type.values : return $r2
org.apache.ambari.server.state.Service$Type.values : return $r2 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r4 = virtualinvoke r14.<java.lang.Class: java.lang.Object newInstance()>()
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r4 = virtualinvoke r14.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r2 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory>
org.apache.ambari.server.utils.AmbariPath.getPath : $r2 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r2 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r2 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r8 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r8 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController>
org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : return $r0
org.apache.ambari.server.controller.AmbariServer.getController : return $r0 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r5 = (org.apache.ambari.server.controller.spi.ProviderModule) $r4
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r5 = (org.apache.ambari.server.controller.spi.ProviderModule) $r4 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r0 = staticinvoke <org.apache.ambari.server.view.ViewProviderModule: org.apache.ambari.server.view.ViewProviderModule getViewProviderModule(org.apache.ambari.server.controller.spi.ProviderModule)>($r5)
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r0 = staticinvoke <org.apache.ambari.server.view.ViewProviderModule: org.apache.ambari.server.view.ViewProviderModule getViewProviderModule(org.apache.ambari.server.controller.spi.ProviderModule)>($r5) >>>>>>>> org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : $r1 = new org.apache.ambari.server.view.ViewProviderModule
org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : $r1 = new org.apache.ambari.server.view.ViewProviderModule >>>>>>>> org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : specialinvoke $r1.<org.apache.ambari.server.view.ViewProviderModule: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0)
org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : specialinvoke $r1.<org.apache.ambari.server.view.ViewProviderModule: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0) >>>>>>>> org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : return $r1
org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r6 = new org.apache.ambari.server.controller.internal.ClusterControllerImpl
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r6 = new org.apache.ambari.server.controller.internal.ClusterControllerImpl >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : specialinvoke $r6.<org.apache.ambari.server.controller.internal.ClusterControllerImpl: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0)
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : specialinvoke $r6.<org.apache.ambari.server.controller.internal.ClusterControllerImpl: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0) >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> = $r6
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> = $r6 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : goto [?= $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>]
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : goto [?= $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>] >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r2, r19, $r5)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r2, r19, $r5) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap>
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : return $r4
