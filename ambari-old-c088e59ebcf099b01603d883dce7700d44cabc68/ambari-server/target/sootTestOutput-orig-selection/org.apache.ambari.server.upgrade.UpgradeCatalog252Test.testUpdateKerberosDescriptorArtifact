org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$000 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.state.stack.OsFamily osFamily>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.state.stack.OsFamily osFamily> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$100 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: javax.persistence.EntityManager entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$200 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4: org.apache.ambari.server.upgrade.UpgradeCatalog252Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r12)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog252Test)>($r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$300 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$300 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$4.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.getTargetVersion : return "2.5.2"
org.apache.ambari.server.upgrade.UpgradeCatalog252.getTargetVersion : return "2.5.2" >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r3 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ArtifactEntity: java.util.Map getArtifactData()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r3 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ArtifactEntity: java.util.Map getArtifactData()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r8 = new org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r8 = new org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : specialinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : specialinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r4 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: org.apache.ambari.server.state.kerberos.KerberosDescriptor createInstance(java.util.Map)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r4 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: org.apache.ambari.server.state.kerberos.KerberosDescriptor createInstance(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r2 = new org.apache.ambari.server.state.kerberos.KerberosDescriptor
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r2 = new org.apache.ambari.server.state.kerberos.KerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r2
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r4 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : z3 = 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : z3 = 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>("SPARK")
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>("SPARK") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if $r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r4
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : return $r5
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : return $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("livy.superusers")
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("livy.superusers") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r11 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("livy-conf", $r10)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r11 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("livy-conf", $r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $z0 = specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: boolean removeConfigurationSpecifications(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer,java.util.Map)>($r9, $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $z0 = specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: boolean removeConfigurationSpecifications(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer,java.util.Map)>($r9, $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : z5 = 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : z5 = 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if r1 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z0 = staticinvoke <org.apache.commons.collections.MapUtils: boolean isEmpty(java.util.Map)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z0 = staticinvoke <org.apache.commons.collections.MapUtils: boolean isEmpty(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r11 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r11 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r4 = (java.util.Map$Entry) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r4 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r5 = (java.lang.String) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r5 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r15 = (java.util.Collection) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r15 = (java.util.Collection) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r6 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r6 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r7 = (java.lang.String) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r7 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r8 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r8 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r10
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if r8 != null
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if r8 != null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r17 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r17 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r23 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r23 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $r23 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $r23 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r10 = virtualinvoke $r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : r10 = virtualinvoke $r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : return $r1
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if r10 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if r10 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z3 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z3 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : interfaceinvoke r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : interfaceinvoke r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r20 = <org.apache.ambari.server.upgrade.UpgradeCatalog252: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r20 = <org.apache.ambari.server.upgrade.UpgradeCatalog252: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19[0] = r5
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19[0] = r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19[1] = r7
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19[1] = r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r21 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r21 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19[2] = $r21
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $r19[2] = $r21 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Removed {}/{} from the descriptor named {}", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Removed {}/{} from the descriptor named {}", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : z5 = 1
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : z5 = 1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z4 = interfaceinvoke r10.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : $z4 = interfaceinvoke r10.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z4 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : return z5
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : return z5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : z3 = 1
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : z3 = 1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r12 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>("SPARK2")
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r12 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>("SPARK2") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("livy.superusers")
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("livy.superusers") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("livy2-conf", $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("livy2-conf", $r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $z1 = specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: boolean removeConfigurationSpecifications(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer,java.util.Map)>($r12, $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $z1 = specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: boolean removeConfigurationSpecifications(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer,java.util.Map)>($r12, $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r5 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>("KNOX")
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r5 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>("KNOX") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r5 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r5 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r6 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("KNOX_GATEWAY")
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : r6 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("KNOX_GATEWAY") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if $r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r5 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r4
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : $r5 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : return $r5
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponent : return $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r17 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r17 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : specialinvoke $r17.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : specialinvoke $r17.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r18 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r18 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r18[0] = "oozie.service.ProxyUserService.proxyuser.knox.groups"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r18[0] = "oozie.service.ProxyUserService.proxyuser.knox.groups" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r18[1] = "oozie.service.ProxyUserService.proxyuser.knox.hosts"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r18[1] = "oozie.service.ProxyUserService.proxyuser.knox.hosts" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oozie-site", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oozie-site", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r21 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r21 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r21[0] = "webhcat.proxyuser.knox.groups"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r21[0] = "webhcat.proxyuser.knox.groups" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r21[1] = "webhcat.proxyuser.knox.hosts"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r21[1] = "webhcat.proxyuser.knox.hosts" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r22 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r22 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("webhcat-site", $r22)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("webhcat-site", $r22) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r24 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r24 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r24[0] = "hadoop.proxyuser.knox.groups"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r24[0] = "hadoop.proxyuser.knox.groups" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r24[1] = "hadoop.proxyuser.knox.hosts"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r24[1] = "hadoop.proxyuser.knox.hosts" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r25 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r24)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r25 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r24) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("core-site", $r25)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("core-site", $r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r27 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r27 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r27[0] = "*.falcon.service.ProxyUserService.proxyuser.knox.groups"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r27[0] = "*.falcon.service.ProxyUserService.proxyuser.knox.groups" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r27[1] = "*.falcon.service.ProxyUserService.proxyuser.knox.hosts"
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r27[1] = "*.falcon.service.ProxyUserService.proxyuser.knox.hosts" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r28 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r27)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r28 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r27) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("falcon-runtime.properties", $r28)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("falcon-runtime.properties", $r28) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $z2 = specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: boolean removeConfigurationSpecifications(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer,java.util.Map)>(r6, $r17)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $z2 = specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: boolean removeConfigurationSpecifications(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer,java.util.Map)>(r6, $r17) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void setConfigurations(java.util.Map)>(r8)
org.apache.ambari.server.upgrade.UpgradeCatalog252.removeConfigurationSpecifications : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void setConfigurations(java.util.Map)>(r8) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : $r3 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : $r3 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : specialinvoke $r3.<java.util.TreeMap: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : specialinvoke $r3.<java.util.TreeMap: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.setConfigurations : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> = $r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : if z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r15 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : $r15 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : $r3 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : $r3 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : specialinvoke $r3.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : specialinvoke $r3.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r3 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : return r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : return r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : if $r5 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : if $r5 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r10 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r11 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r11 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : r4 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r15
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : r4 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r16 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r16 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r2)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.toMap : virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : if $r5 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : if $r5 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r10 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r11 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r11 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : r4 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r15
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : r4 = (org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r16 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r16 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r8 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r8 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r14 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r14 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r32 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r14
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r32 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r14 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r15 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r15 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r16 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r16 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r2 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r2 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r2.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r8 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r8 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>(java.util.Map)>($r5)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>(java.util.Map)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8)
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : return $r2
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.toMap : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r11 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_CONFIGURATIONS>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r11 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_CONFIGURATIONS> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r12 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r12 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r13 = <org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String KEY_COMPONENTS>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r13 = <org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String KEY_COMPONENTS> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r10)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r6 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : $r6 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : if $r6 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : if $r6 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : return r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.toMap : return r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r13 = <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.lang.String KEY_SERVICES>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r13 = <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.lang.String KEY_SERVICES> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r10)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r6 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : $r6 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : if $r6 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : if $r6 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : return r1
org.apache.ambari.server.state.kerberos.KerberosDescriptor.toMap : return r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : virtualinvoke r2.<org.apache.ambari.server.orm.entities.ArtifactEntity: void setArtifactData(java.util.Map)>($r15)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : virtualinvoke r2.<org.apache.ambari.server.orm.entities.ArtifactEntity: void setArtifactData(java.util.Map)>($r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : virtualinvoke r1.<org.apache.ambari.server.orm.dao.ArtifactDAO: org.apache.ambari.server.orm.entities.ArtifactEntity merge(org.apache.ambari.server.orm.entities.ArtifactEntity)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateKerberosDescriptorArtifact : virtualinvoke r1.<org.apache.ambari.server.orm.dao.ArtifactDAO: org.apache.ambari.server.orm.entities.ArtifactEntity merge(org.apache.ambari.server.orm.entities.ArtifactEntity)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : if $r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r5 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : $r5 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfiguration : return $r5
