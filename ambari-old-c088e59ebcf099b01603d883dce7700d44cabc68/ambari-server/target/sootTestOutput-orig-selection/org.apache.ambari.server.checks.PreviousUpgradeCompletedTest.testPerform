org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : return $r1
org.apache.ambari.server.state.StackId.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity.setStackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity.setStackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackName")
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackName") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName>
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackName", $r2, r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> = r1
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : return $r1
org.apache.ambari.server.state.StackId.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity.setStackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackVersion(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity.setStackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackVersion(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackVersion")
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackVersion") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion>
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackVersion", $r2, r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackVersion", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> = r1
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setSourceStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setSourceStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId> = r1 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setTargetRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion> = r1 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r8 = r0.<org.apache.ambari.server.checks.PreviousUpgradeCompleted: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r8 = r0.<org.apache.ambari.server.checks.PreviousUpgradeCompleted: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1: org.apache.ambari.server.checks.PreviousUpgradeCompletedTest this$0>
org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1: org.apache.ambari.server.checks.PreviousUpgradeCompletedTest this$0> >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.PreviousUpgradeCompletedTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.PreviousUpgradeCompletedTest)>($r1)
org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.PreviousUpgradeCompletedTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.PreviousUpgradeCompletedTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompletedTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.PreviousUpgradeCompletedTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.PreviousUpgradeCompletedTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.PreviousUpgradeCompletedTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompletedTest.access$000 : return $r1
org.apache.ambari.server.checks.PreviousUpgradeCompletedTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : return $r2
org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : return $r1
org.apache.ambari.server.checks.PreviousUpgradeCompletedTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r17 = null
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r17 = null >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : if null == r5
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : if null == r5 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : if null == r17
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : if null == r17 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r18 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.UpgradeEntity: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r18 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.UpgradeEntity: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r6 = virtualinvoke r18.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0)
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r6 = virtualinvoke r18.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getText : if z0 == 0
org.apache.ambari.server.state.stack.upgrade.Direction.getText : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getText : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String name()>()
org.apache.ambari.server.state.stack.upgrade.Direction.getText : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getText : $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.state.stack.upgrade.Direction.getText : $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getText : return $r4
org.apache.ambari.server.state.stack.upgrade.Direction.getText : return $r4 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r7 = virtualinvoke r18.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getPreposition()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r7 = virtualinvoke r18.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getPreposition()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : $r1 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction UPGRADE>
org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : $r1 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction UPGRADE> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : if r0 != $r1
org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : if r0 != $r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : $r2 = "to"
org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : $r2 = "to" >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : goto [?= return $r2]
org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : return $r2
org.apache.ambari.server.state.stack.upgrade.Direction.getPreposition : return $r2 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14 = newarray (java.lang.Object)[4]
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[0] = r6
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[0] = r6 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[1] = r7
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[1] = r7 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.UpgradeEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.UpgradeEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r16 = virtualinvoke $r15.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r16 = virtualinvoke $r15.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[2] = $r16
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[2] = $r16 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[3] = r6
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r14[3] = r6 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r17 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("There is an existing {0} {1} {2} which has not completed. This {3} must be completed before a new upgrade or downgrade can begin.", $r14)
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : r17 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("There is an existing {0} {1} {2} which has not completed. This {3} must be completed before a new upgrade or downgrade can begin.", $r14) >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r11 = new java.util.LinkedHashSet
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r11 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : specialinvoke $r11.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : specialinvoke $r11.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r12 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r12 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke $r11.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke $r11.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r11)
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r11) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailedOn : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailedOn : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> = r1 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r13 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : $r13 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r13)
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r13) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>(r17)
org.apache.ambari.server.checks.PreviousUpgradeCompleted.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>(r17) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
