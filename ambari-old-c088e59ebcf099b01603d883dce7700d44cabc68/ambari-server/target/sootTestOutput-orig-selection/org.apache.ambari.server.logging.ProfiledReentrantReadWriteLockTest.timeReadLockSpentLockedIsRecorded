org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : if r3 != null >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $i0 = virtualinvoke r4.<java.lang.String: int length()>()
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $i0 = virtualinvoke r4.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : if $i0 <= 0
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r0 = new java.lang.StringBuilder
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : goto [?= return $r5]
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : return $r5
org.apache.ambari.server.logging.LockProfileDelegate.addSpacePostfixIfNeeded : return $r5 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock.readLock : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock: org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock readLock>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock.readLock : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock: org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock readLock> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock.readLock : return $r1
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock.readLock : return $r1 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l0 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l0 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l1 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l1 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l2 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l2 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l4 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l4 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l5 = virtualinvoke $r15.<java.util.concurrent.TimeUnit: long toNanos(long)>(6L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l5 = virtualinvoke $r15.<java.util.concurrent.TimeUnit: long toNanos(long)>(6L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l6 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l6 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l7 = virtualinvoke $r20.<java.util.concurrent.TimeUnit: long toNanos(long)>(13L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l7 = virtualinvoke $r20.<java.util.concurrent.TimeUnit: long toNanos(long)>(13L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : virtualinvoke r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest: void replayAll()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : virtualinvoke r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void lock()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void lock()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : z0 = virtualinvoke $r1.<org.apache.ambari.server.logging.LockProfileDelegate: boolean logRequest()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : z0 = virtualinvoke $r1.<org.apache.ambari.server.logging.LockProfileDelegate: boolean logRequest()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r1 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: org.apache.ambari.server.logging.ProfiledLock lock>
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r1 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: org.apache.ambari.server.logging.ProfiledLock lock> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : z0 = interfaceinvoke $r1.<org.apache.ambari.server.logging.ProfiledLock: boolean isHeldByCurrentThread()>()
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : z0 = interfaceinvoke $r1.<org.apache.ambari.server.logging.ProfiledLock: boolean isHeldByCurrentThread()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: java.util.concurrent.locks.ReentrantReadWriteLock delegate>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: java.util.concurrent.locks.ReentrantReadWriteLock delegate> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $i0 = virtualinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadHoldCount()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $i0 = virtualinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadHoldCount()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : if $i0 <= 0
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $z0 = 0
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $z0 = 0 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : return $z0
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : return $z0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : if z0 != 0
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : if z0 != 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r2 = <org.apache.ambari.server.logging.LockProfileDelegate: org.slf4j.Logger LOG>
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r2 = <org.apache.ambari.server.logging.LockProfileDelegate: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $z1 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $z1 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : if $z1 == 0
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r4 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockRequestTime>
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r4 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockRequestTime> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r3 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: com.google.common.base.Ticker ticker>
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r3 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: com.google.common.base.Ticker ticker> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $l0 = virtualinvoke $r3.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $l0 = virtualinvoke $r3.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r5)
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequest : return z0
org.apache.ambari.server.logging.LockProfileDelegate.logRequest : return z0 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : specialinvoke r0.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : specialinvoke r0.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : $r2 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : $r2 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : virtualinvoke $r2.<org.apache.ambari.server.logging.LockProfileDelegate: void logRequestCompleted(boolean,boolean)>(z0, 1)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.lock : virtualinvoke $r2.<org.apache.ambari.server.logging.LockProfileDelegate: void logRequestCompleted(boolean,boolean)>(z0, 1) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : if z0 != 0
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : if z0 != 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : if z1 == 0
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : if z1 == 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r5 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockRequestTime>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r5 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockRequestTime> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r4 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap timeSpentWaitingForLock>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r4 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap timeSpentWaitingForLock> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : l0 = specialinvoke r0.<org.apache.ambari.server.logging.LockProfileDelegate: long storeElapsedTime(java.lang.ThreadLocal,java.util.concurrent.ConcurrentMap)>($r5, $r4)
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : l0 = specialinvoke r0.<org.apache.ambari.server.logging.LockProfileDelegate: long storeElapsedTime(java.lang.ThreadLocal,java.util.concurrent.ConcurrentMap)>($r5, $r4) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r5 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: com.google.common.base.Ticker ticker>
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r5 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: com.google.common.base.Ticker ticker> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : l0 = virtualinvoke $r5.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : l0 = virtualinvoke $r5.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : l8 = -9223372036854775808L
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : l8 = -9223372036854775808L >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r6 = virtualinvoke r1.<java.lang.ThreadLocal: java.lang.Object get()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r6 = virtualinvoke r1.<java.lang.ThreadLocal: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : r3 = (java.lang.Long) $r6
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : r3 = (java.lang.Long) $r6 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : if r3 == null
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : if r3 == null >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l1 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l1 = virtualinvoke r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $b2 = $l1 cmp l0
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $b2 = $l1 cmp l0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : if $b2 > 0
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : if $b2 > 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l3 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l3 = virtualinvoke r3.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l4 = l0 - $l3
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l4 = l0 - $l3 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : l8 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>($l4)
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : l8 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>($l4) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : r4 = virtualinvoke $r8.<java.lang.Thread: java.lang.String getName()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : r4 = virtualinvoke $r8.<java.lang.Thread: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : interfaceinvoke r2.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r4, $r9)
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : interfaceinvoke r2.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r4, $r9) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $b5 = l8 cmp 0L
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $b5 = l8 cmp 0L >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : if $b5 <= 0
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : if $b5 <= 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : virtualinvoke r1.<java.lang.ThreadLocal: void remove()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : virtualinvoke r1.<java.lang.ThreadLocal: void remove()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : return l8
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : return l8 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r9 = <org.apache.ambari.server.logging.LockProfileDelegate: org.slf4j.Logger LOG>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r9 = <org.apache.ambari.server.logging.LockProfileDelegate: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6 = newarray (java.lang.Object)[3]
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r7 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.String label>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r7 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.String label> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6[0] = $r7
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6[0] = $r7 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r8 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: org.apache.ambari.server.logging.ProfiledLock lock>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r8 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: org.apache.ambari.server.logging.ProfiledLock lock> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6[1] = $r8
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6[1] = $r8 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6[2] = $r10
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r6[2] = $r10 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{}acquired {} after {} ms", $r6)
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{}acquired {} after {} ms", $r6) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r11 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap lockCount>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r11 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap lockCount> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : staticinvoke <org.apache.ambari.server.logging.LockProfileDelegate: void increment(java.util.concurrent.ConcurrentMap)>($r11)
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : staticinvoke <org.apache.ambari.server.logging.LockProfileDelegate: void increment(java.util.concurrent.ConcurrentMap)>($r11) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.ambari.server.logging.LockProfileDelegate.increment : $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : r1 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>()
org.apache.ambari.server.logging.LockProfileDelegate.increment : r1 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.logging.LockProfileDelegate.increment : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : interfaceinvoke r0.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, $r3)
org.apache.ambari.server.logging.LockProfileDelegate.increment : interfaceinvoke r0.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, $r3) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : $r5 = interfaceinvoke r0.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.logging.LockProfileDelegate.increment : $r5 = interfaceinvoke r0.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : $r6 = (java.lang.Integer) $r5
org.apache.ambari.server.logging.LockProfileDelegate.increment : $r6 = (java.lang.Integer) $r5 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.logging.LockProfileDelegate.increment : $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : $i1 = $i0 + 1
org.apache.ambari.server.logging.LockProfileDelegate.increment : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.logging.LockProfileDelegate.increment : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.increment : interfaceinvoke r0.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7)
org.apache.ambari.server.logging.LockProfileDelegate.increment : interfaceinvoke r0.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r13 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockAcquireTime>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r13 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockAcquireTime> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r12 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: com.google.common.base.Ticker ticker>
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r12 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: com.google.common.base.Ticker ticker> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $l1 = virtualinvoke $r12.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $l1 = virtualinvoke $r12.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : virtualinvoke $r13.<java.lang.ThreadLocal: void set(java.lang.Object)>($r14)
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : virtualinvoke $r13.<java.lang.ThreadLocal: void set(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : goto [?= return]
org.apache.ambari.server.logging.LockProfileDelegate.logRequestCompleted : goto [?= return] >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void unlock()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void unlock()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.unlock : specialinvoke r0.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.unlock : specialinvoke r0.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.unlock : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.unlock : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.unlock : virtualinvoke $r1.<org.apache.ambari.server.logging.LockProfileDelegate: void logUnlock()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.unlock : virtualinvoke $r1.<org.apache.ambari.server.logging.LockProfileDelegate: void logUnlock()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r1 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: org.apache.ambari.server.logging.ProfiledLock lock>
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r1 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: org.apache.ambari.server.logging.ProfiledLock lock> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $z1 = interfaceinvoke $r1.<org.apache.ambari.server.logging.ProfiledLock: boolean isHeldByCurrentThread()>()
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $z1 = interfaceinvoke $r1.<org.apache.ambari.server.logging.ProfiledLock: boolean isHeldByCurrentThread()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : if $z1 != 0
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : if $z1 != 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $z3 = 1
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $z3 = 1 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : goto [?= (branch)]
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : if $z3 == 0
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : if $z3 == 0 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r3 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockAcquireTime>
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r3 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.lang.ThreadLocal lockAcquireTime> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r2 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap timeSpentLocked>
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r2 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap timeSpentLocked> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : l0 = specialinvoke r0.<org.apache.ambari.server.logging.LockProfileDelegate: long storeElapsedTime(java.lang.ThreadLocal,java.util.concurrent.ConcurrentMap)>($r3, $r2)
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : l0 = specialinvoke r0.<org.apache.ambari.server.logging.LockProfileDelegate: long storeElapsedTime(java.lang.ThreadLocal,java.util.concurrent.ConcurrentMap)>($r3, $r2) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r11 = interfaceinvoke r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r11 = interfaceinvoke r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r12 = (java.lang.Long) $r11
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r12 = (java.lang.Long) $r11 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l6 = virtualinvoke $r12.<java.lang.Long: long longValue()>()
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l6 = virtualinvoke $r12.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l7 = $l6 + l8
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $l7 = $l6 + l8 >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7)
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : interfaceinvoke r2.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r13)
org.apache.ambari.server.logging.LockProfileDelegate.storeElapsedTime : interfaceinvoke r2.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r13) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r4 = <org.apache.ambari.server.logging.LockProfileDelegate: org.slf4j.Logger LOG>
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $r4 = <org.apache.ambari.server.logging.LockProfileDelegate: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $z2 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : $z2 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : if $z2 == 0
org.apache.ambari.server.logging.LockProfileDelegate.logUnlock : if $z2 == 0 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r24 = virtualinvoke $r23.<java.lang.Thread: java.lang.String getName()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r24 = virtualinvoke $r23.<java.lang.Thread: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(7L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(7L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r26 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r24, $r25)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r26 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r24, $r25) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r27 = interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: java.util.Map getTimeSpentLocked()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r27 = interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: java.util.Map getTimeSpentLocked()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.getTimeSpentLocked : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.getTimeSpentLocked : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: org.apache.ambari.server.logging.LockProfileDelegate helper> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.getTimeSpentLocked : $r2 = virtualinvoke $r1.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.Map getTimeSpentLocked()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.getTimeSpentLocked : $r2 = virtualinvoke $r1.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.Map getTimeSpentLocked()>() >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : $r1 = new java.util.TreeMap
org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : $r1 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : $r2 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap timeSpentLocked>
org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : $r2 = r0.<org.apache.ambari.server.logging.LockProfileDelegate: java.util.concurrent.ConcurrentMap timeSpentLocked> >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : specialinvoke $r1.<java.util.TreeMap: void <init>(java.util.Map)>($r2)
org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : specialinvoke $r1.<java.util.TreeMap: void <init>(java.util.Map)>($r2) >>>>>>>> org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : return $r1
org.apache.ambari.server.logging.LockProfileDelegate.getTimeSpentLocked : return $r1 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.getTimeSpentLocked : return $r2
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.getTimeSpentLocked : return $r2 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : virtualinvoke r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest: void verifyAll()>()
