org.apache.ambari.server.orm.db.DDLTests.compareAgainstPostgres : $r5 = <org.apache.ambari.server.orm.db.DDLTests: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareAgainstPostgres : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Comparing {} against Postgres", r0)
org.apache.ambari.server.orm.db.DDLTests.compareAgainstPostgres : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Comparing {} against Postgres", r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareAgainstPostgres : r1 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL getDdl(java.lang.String)>("Postgres")
org.apache.ambari.server.orm.db.DDLTests.compareAgainstPostgres : r1 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL getDdl(java.lang.String)>("Postgres") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdl : $r1 = <org.apache.ambari.server.orm.db.DDLTestUtils: com.google.common.cache.LoadingCache ddlCache>
org.apache.ambari.server.orm.db.DDLTestUtils.getDdl : $r1 = <org.apache.ambari.server.orm.db.DDLTestUtils: com.google.common.cache.LoadingCache ddlCache> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdl : $r2 = interfaceinvoke $r1.<com.google.common.cache.LoadingCache: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.orm.db.DDLTestUtils.getDdl : $r2 = interfaceinvoke $r1.<com.google.common.cache.LoadingCache: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils$1.load : $r2 = (java.lang.String) r1
org.apache.ambari.server.orm.db.DDLTestUtils$1.load : $r2 = (java.lang.String) r1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils$1.load : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.db.DDLTestUtils$1: org.apache.ambari.server.orm.db.DDL load(java.lang.String)>($r2)
org.apache.ambari.server.orm.db.DDLTestUtils$1.load : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.db.DDLTestUtils$1: org.apache.ambari.server.orm.db.DDL load(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils$1.load : $r2 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL access$000(java.lang.String)>(r1)
org.apache.ambari.server.orm.db.DDLTestUtils$1.load : $r2 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL access$000(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.access$000 : $r1 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL loadDdl(java.lang.String)>(r0)
org.apache.ambari.server.orm.db.DDLTestUtils.access$000 : $r1 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL loadDdl(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadDdl : r1 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.List loadFile(java.lang.String)>(r0)
org.apache.ambari.server.orm.db.DDLTestUtils.loadDdl : r1 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.List loadFile(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r5 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.net.URL getDdlUrl(java.lang.String)>(r0)
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r5 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.net.URL getDdlUrl(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ambari-DDL-")
org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ambari-DDL-") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-CREATE.sql")
org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-CREATE.sql") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.getDdlUrl : $r6 = staticinvoke <com.google.common.io.Resources: java.net.URL getResource(java.lang.String)>($r5)
