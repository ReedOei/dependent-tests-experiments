org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r2 = new org.apache.ambari.server.security.CertificateManagerTest$2
org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r2 = new org.apache.ambari.server.security.CertificateManagerTest$2 >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : specialinvoke $r2.<org.apache.ambari.server.security.CertificateManagerTest$2: void <init>(org.apache.ambari.server.security.CertificateManagerTest)>(r0)
org.apache.ambari.server.security.CertificateManagerTest.getInjector : specialinvoke $r2.<org.apache.ambari.server.security.CertificateManagerTest$2: void <init>(org.apache.ambari.server.security.CertificateManagerTest)>(r0) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r1[0] = $r2
org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r2 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0>
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r2 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0> >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r5 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0>
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r5 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0> >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : return $r3
org.apache.ambari.server.security.CertificateManagerTest.getInjector : return $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r15 = new org.apache.ambari.server.security.SignCertResponse
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r15 = new org.apache.ambari.server.security.SignCertResponse >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : specialinvoke $r15.<org.apache.ambari.server.security.SignCertResponse: void <init>()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : specialinvoke $r15.<org.apache.ambari.server.security.SignCertResponse: void <init>()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r16 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r16 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>("Signing agent certificate")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>("Signing agent certificate") >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : r81 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r80)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : r81 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r80) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r81)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r81) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z0 == 0
org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r17 = r0.<org.apache.ambari.server.security.CertificateManager: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r17 = r0.<org.apache.ambari.server.security.CertificateManager: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z1 = virtualinvoke $r17.<org.apache.ambari.server.configuration.Configuration: boolean validateAgentHostnames()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z1 = virtualinvoke $r17.<org.apache.ambari.server.configuration.Configuration: boolean validateAgentHostnames()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z1 == 0
org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r18 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r18 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Skipping validation of agent hostname: {}", r81)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Skipping validation of agent hostname: {}", r81) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r19 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r19 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>("Verifying passphrase")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>("Verifying passphrase") >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r20 = r0.<org.apache.ambari.server.security.CertificateManager: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r20 = r0.<org.apache.ambari.server.security.CertificateManager: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r21 = virtualinvoke $r20.<org.apache.ambari.server.configuration.Configuration: java.util.Map getConfigsMap()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r21 = virtualinvoke $r20.<org.apache.ambari.server.configuration.Configuration: java.util.Map getConfigsMap()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r22 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty PASSPHRASE>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r22 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty PASSPHRASE> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r23 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r23 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r24 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r24 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r25 = (java.lang.String) $r24
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : r4 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : r4 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r26 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r26 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r26)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z2 != 0
org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r73 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r73 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r73.<org.slf4j.Logger: void warn(java.lang.String)>("Incorrect passphrase from the agent")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r73.<org.slf4j.Logger: void warn(java.lang.String)>("Incorrect passphrase from the agent") >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke $r15.<org.apache.ambari.server.security.SignCertResponse: void setResult(java.lang.String)>("ERROR")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke $r15.<org.apache.ambari.server.security.SignCertResponse: void setResult(java.lang.String)>("ERROR") >>>>>>>> org.apache.ambari.server.security.SignCertResponse.setResult : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result> = r1
org.apache.ambari.server.security.SignCertResponse.setResult : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result> = r1 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke $r15.<org.apache.ambari.server.security.SignCertResponse: void setMessage(java.lang.String)>("Incorrect passphrase from the agent")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke $r15.<org.apache.ambari.server.security.SignCertResponse: void setMessage(java.lang.String)>("Incorrect passphrase from the agent") >>>>>>>> org.apache.ambari.server.security.SignCertResponse.setMessage : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message> = r1
org.apache.ambari.server.security.SignCertResponse.setMessage : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message> = r1 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : return $r15
org.apache.ambari.server.security.CertificateManager.signAgentCrt : return $r15 >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getResult : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result>
org.apache.ambari.server.security.SignCertResponse.getResult : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result> >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getResult : return $r1
org.apache.ambari.server.security.SignCertResponse.getResult : return $r1 >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getMessage : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message>
org.apache.ambari.server.security.SignCertResponse.getMessage : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message> >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getMessage : return $r1
