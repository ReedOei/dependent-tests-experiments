org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyName : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyValue : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyValue> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyValue : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyValue> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyDescription : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyDescription> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyDescription : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyDescription> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setType : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String type> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setType : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String type> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyAttributes : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Map propertyAttributes> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyAttributes : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Map propertyAttributes> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : $r3 = new org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$StackLevelConfigurationRequestSetMatcher
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : $r3 = new org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$StackLevelConfigurationRequestSetMatcher >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : specialinvoke $r3.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$StackLevelConfigurationRequestSetMatcher: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : specialinvoke $r3.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$StackLevelConfigurationRequestSetMatcher: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1
org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1
org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1
org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r3)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : return null
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getStackLevelConfigurationRequestSet : return null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>()
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES>
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2
org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0]
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i0 = virtualinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i0 = virtualinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i1 = $r2[$i0]
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i1 = $r2[$i0] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : tableswitch($i1) {     case 1:
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r44 = new org.apache.ambari.server.controller.internal.StackLevelConfigurationResourceProvider
