org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreService;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreServiceImpl;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/security/encryption/CredentialStoreServiceImpl;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r6 = r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r6 = r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r7 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r7 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurePasswordHelper;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurePasswordHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r9 = new org.apache.ambari.server.security.SecurePasswordHelper
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r9 = new org.apache.ambari.server.security.SecurePasswordHelper >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r9.<org.apache.ambari.server.security.SecurePasswordHelper: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r9.<org.apache.ambari.server.security.SecurePasswordHelper: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r11 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r11 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r11.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r11.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosDescriptorFactory;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosDescriptorFactory;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r13 = new org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : $r13 = new org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : specialinvoke $r13.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest$1.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createServiceAdministrator(java.lang.String,java.lang.Long)>("serviceAdmin", $r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createServiceAdministrator(java.lang.String,java.lang.Long)>("serviceAdmin", $r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createServiceAdministratorGrantedAuthority(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createServiceAdministratorGrantedAuthority(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createServiceAdministratorPrivilegeEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createServiceAdministratorPrivilegeEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createServiceAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createServiceAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26]
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r14 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/StackId;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r14 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/StackId;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r2 = (org.apache.ambari.server.state.StackId) $r14
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r2 = (org.apache.ambari.server.state.StackId) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r15 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("stackName")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("stackName") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r19 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r19 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("stackVersion")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("stackVersion") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r3 = (org.apache.ambari.server.state.Cluster) $r23
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r3 = (org.apache.ambari.server.state.Cluster) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r24 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r24 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r29 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r29 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r33 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r33 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r4 = (org.apache.ambari.server.state.Clusters) $r33
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r4 = (org.apache.ambari.server.state.Clusters) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r34 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r34 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r38 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosDescriptor;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r38 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosDescriptor;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r5 = (org.apache.ambari.server.state.kerberos.KerberosDescriptor) $r38
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r5 = (org.apache.ambari.server.state.kerberos.KerberosDescriptor) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r39 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r39 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r41 = <org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.util.Map STACK_MAP>
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r41 = <org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.util.Map STACK_MAP> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r42 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r41)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r42 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r44 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r44 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r6 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r44
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r6 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r45 = virtualinvoke r6.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.kerberos.KerberosDescriptor getKerberosDescriptor(java.lang.String,java.lang.String,boolean)>("stackName", "stackVersion", 0)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r45 = virtualinvoke r6.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.kerberos.KerberosDescriptor getKerberosDescriptor(java.lang.String,java.lang.String,boolean)>("stackName", "stackVersion", 0) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r49 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r49 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r49
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r49 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r50 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r50 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r54 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r54 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r56 = interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r56 = interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r58 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Request;")
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r58 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Request;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r8 = (org.apache.ambari.server.controller.spi.Request) $r58
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r8 = (org.apache.ambari.server.controller.spi.Request) $r58 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r59 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Request: java.util.Set getPropertyIds()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r59 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Request: java.util.Set getPropertyIds()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r60 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r59)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r60 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r59) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r61 = interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r61 = interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r63 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r63 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r63.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : interfaceinvoke $r63.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r64 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterKerberosDescriptor>
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : $r64 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterKerberosDescriptor> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r9 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>($r64, r7)
org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProviderTest.testGetResourcesWithInvalidKerberosDescriptorType : r9 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>($r64, r7) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>()
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES>
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2
org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0]
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i0 = virtualinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i0 = virtualinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i1 = $r2[$i0]
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i1 = $r2[$i0] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : tableswitch($i1) {     case 1:
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r10 = new org.apache.ambari.server.controller.internal.ClusterKerberosDescriptorResourceProvider
