org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r1 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : specialinvoke $r1.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : specialinvoke $r1.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r2 = new org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest$1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r2 = new org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest$1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : specialinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest$1: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : specialinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest$1: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r3 = virtualinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest$1: java.lang.reflect.Type getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r3 = virtualinvoke $r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r4 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>("{\"value\": \"service/_HOST@_REALM\",\"configuration\": \"service-site/service.component.kerberos.principal\",\"type\": \"service\",\"local_username\": \"localUser\"}", $r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r4 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>("{\"value\": \"service/_HOST@_REALM\",\"configuration\": \"service-site/service.component.kerberos.principal\",\"type\": \"service\",\"local_username\": \"localUser\"}", $r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : r0 = (java.util.Map) $r4
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : r0 = (java.util.Map) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r5 = new org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : $r5 = new org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void <init>(java.util.Map)>(r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void <init>(java.util.Map)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : return $r5
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromJSON : return $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalDescriptor;"
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r3 != class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalDescriptor;" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor) r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if r1 != r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z0 = r1 instanceof org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z0 = r1 instanceof org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor) r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : r2 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor) r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : return $z1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.equals : return $z1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r7 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $r7 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $r9 = virtualinvoke r2.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z2 = virtualinvoke $r8.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : goto [?= return $z3]
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : goto [?= return $z3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : return $z3
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : return $z3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : $r0 = new org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : $r0 = new org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : $r1 = <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest: java.util.Map MAP_VALUE>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : $r1 = <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest: java.util.Map MAP_VALUE> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : specialinvoke $r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void <init>(java.util.Map)>($r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : specialinvoke $r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void <init>(java.util.Map)>($r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : return $r0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : return $r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.equals : $z3 = 0
