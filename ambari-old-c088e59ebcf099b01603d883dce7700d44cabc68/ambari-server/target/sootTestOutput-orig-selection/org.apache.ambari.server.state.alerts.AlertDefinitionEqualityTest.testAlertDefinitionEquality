org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : r1 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r3
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : r1 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r3 >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/ClusterController;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/ClusterController;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : r2 = (org.apache.ambari.server.controller.spi.ClusterController) $r4
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : r2 = (org.apache.ambari.server.controller.spi.ClusterController) $r4 >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/cluster/ClusterFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/cluster/ClusterFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/cluster/ClusterFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/cluster/ClusterFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/host/HostFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/host/HostFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/host/HostFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/host/HostFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r23 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r23 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r24 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r24 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/RequestFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r24.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r25)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r24.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r26 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r26 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r26.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r26.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/ClusterController;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/ClusterController;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r29 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r29 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/actionmanager/HostRoleCommandFactory;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r32)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r33 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r33 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;")
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostRoleCommandDAO;") >>>>>>>> org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r33.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r34)
org.apache.ambari.server.state.ConfigHelperTest$RunWithCustomModule$1.configure : interfaceinvoke $r33.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r1 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HDFS_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r1 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HDFS_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r3 = virtualinvoke $r1.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r3 = virtualinvoke $r1.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.Role.toString : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name>
org.apache.ambari.server.Role.toString : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name> >>>>>>>> org.apache.ambari.server.Role.toString : return $r1
org.apache.ambari.server.Role.toString : return $r1 >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs", $r3)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs", $r3) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r5 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role GLUSTERFS_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r5 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role GLUSTERFS_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r7 = virtualinvoke $r5.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r7 = virtualinvoke $r5.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("glusterfs", $r7)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("glusterfs", $r7) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r10 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r10 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r9 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HBASE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r9 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HBASE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r11 = virtualinvoke $r9.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r11 = virtualinvoke $r9.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase", $r11)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase", $r11) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r14 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r14 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r13 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAPREDUCE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r13 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAPREDUCE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r15 = virtualinvoke $r13.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r15 = virtualinvoke $r13.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce", $r15)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce", $r15) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r18 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r18 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r17 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ZOOKEEPER_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r17 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ZOOKEEPER_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r19 = virtualinvoke $r17.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r19 = virtualinvoke $r17.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper", $r19)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper", $r19) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r22 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r22 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r21 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HIVE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r21 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HIVE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r23 = virtualinvoke $r21.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r23 = virtualinvoke $r21.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive", $r23)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive", $r23) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r26 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r26 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r25 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HCAT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r25 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role HCAT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r27 = virtualinvoke $r25.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r27 = virtualinvoke $r25.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hcat", $r27)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hcat", $r27) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r30 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r30 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r29 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role OOZIE_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r29 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role OOZIE_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r31 = virtualinvoke $r29.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r31 = virtualinvoke $r29.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oozie", $r31)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oozie", $r31) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r34 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r34 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r33 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role PIG>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r33 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role PIG> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r35 = virtualinvoke $r33.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r35 = virtualinvoke $r33.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pig", $r35)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pig", $r35) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r38 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r38 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r37 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAHOUT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r37 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role MAHOUT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r39 = virtualinvoke $r37.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r39 = virtualinvoke $r37.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mahout", $r39)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mahout", $r39) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r42 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r42 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r41 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role SQOOP>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r41 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role SQOOP> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r43 = virtualinvoke $r41.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r43 = virtualinvoke $r41.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sqoop", $r43)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sqoop", $r43) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r46 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r46 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r45 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role YARN_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r45 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role YARN_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r47 = virtualinvoke $r45.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r47 = virtualinvoke $r45.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn", $r47)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn", $r47) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r50 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r50 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r49 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role KERBEROS_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r49 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role KERBEROS_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r51 = virtualinvoke $r49.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r51 = virtualinvoke $r49.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kerberos", $r51)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kerberos", $r51) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r54 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r54 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.Map serviceClients> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r53 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ACCUMULO_CLIENT>
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r53 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role ACCUMULO_CLIENT> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r55 = virtualinvoke $r53.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : $r55 = virtualinvoke $r53.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("accumulo", $r55)
org.apache.ambari.server.metadata.ActionMetadata.fillServiceClients : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("accumulo", $r55) >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r1 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r1 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("RESTART")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("RESTART") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r2 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("START")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("START") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r3 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r3 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>("STOP")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>("STOP") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r4 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r4 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("INSTALL")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("INSTALL") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r5 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r5 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r6 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE_FUNCTION")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("CONFIGURE_FUNCTION") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r7 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r7 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>("DISABLE_SECURITY")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>("DISABLE_SECURITY") >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r8 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands>
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : $r8 = r0.<org.apache.ambari.server.metadata.ActionMetadata: java.util.List defaultHostComponentCommands> >>>>>>>> org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>("RECONFIGURE")
org.apache.ambari.server.metadata.ActionMetadata.fillHostComponentCommands : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>("RECONFIGURE") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r2 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/configuration/Configuration;"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/configuration/Configuration;" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r1 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r5
org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r5 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r72 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r72 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;")
org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;")
org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15)
org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23)
org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r23 = null
org.apache.ambari.server.state.stack.OsFamily.init : r23 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r14
org.apache.ambari.server.state.stack.OsFamily.init : throw $r14 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20
org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17)
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r22
org.apache.ambari.server.state.stack.OsFamily.init : throw $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r15
org.apache.ambari.server.state.stack.OsFamily.init : throw $r15 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.clearDatabaseAndStopPersistenceService : $r1 = interfaceinvoke r0.<com.google.inject.Injector: com.google.inject.Provider getProvider(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.H2DatabaseCleaner.clearDatabaseAndStopPersistenceService : $r1 = interfaceinvoke r0.<com.google.inject.Injector: com.google.inject.Provider getProvider(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r1 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r1 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r7 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/RoleAuthorization;")
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r7 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/RoleAuthorization;") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r0, $r1, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r0, $r1, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r2 = (org.apache.ambari.server.state.ConfigHelper) $r1
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r2 = (org.apache.ambari.server.state.ConfigHelper) $r1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper> = $r2
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper> = $r2 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r3 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r3 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r5 = (org.apache.ambari.server.state.Cluster) $r4
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r5 = (org.apache.ambari.server.state.Cluster) $r4 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("{{foo/bar}}")
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("{{foo/bar}}") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r7 = (java.lang.String) $r6
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r8 = virtualinvoke $r3.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getPlaceholderValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String)>($r5, $r7)
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r8 = virtualinvoke $r3.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getPlaceholderValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String)>($r5, $r7) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("placeholder-rendered-properly")
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("placeholder-rendered-properly") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r12 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r12 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r14 = (org.apache.ambari.server.state.Cluster) $r13
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r14 = (org.apache.ambari.server.state.Cluster) $r13 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/lang/String;")
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/lang/String;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r16 = (java.lang.String) $r15
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r16 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r17 = virtualinvoke $r12.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveDesiredTags(org.apache.ambari.server.state.Cluster,java.lang.String)>($r14, $r16)
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r17 = virtualinvoke $r12.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveDesiredTags(org.apache.ambari.server.state.Cluster,java.lang.String)>($r14, $r16) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r19 = new java.util.HashMap
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19)
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.setConfigMocks : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$1.configure : specialinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void configure()>()
org.apache.ambari.server.state.UpgradeHelperTest$1.configure : specialinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void configure()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r2 = new com.google.inject.assistedinject.FactoryModuleBuilder
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r2 = new com.google.inject.assistedinject.FactoryModuleBuilder >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : specialinvoke $r2.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : specialinvoke $r2.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r3 = virtualinvoke $r2.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;")
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r3 = virtualinvoke $r2.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void install(com.google.inject.Module)>($r3)
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void install(com.google.inject.Module)>($r3) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r5 = r0.<org.apache.ambari.server.state.UpgradeHelperTest$MockModule: org.apache.ambari.server.state.UpgradeHelperTest this$0>
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r5 = r0.<org.apache.ambari.server.state.UpgradeHelperTest$MockModule: org.apache.ambari.server.state.UpgradeHelperTest this$0> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r6 = staticinvoke <org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper access$100(org.apache.ambari.server.state.UpgradeHelperTest)>($r5)
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : $r6 = staticinvoke <org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper access$100(org.apache.ambari.server.state.UpgradeHelperTest)>($r5) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.access$100 : $r1 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.state.UpgradeHelperTest.access$100 : $r1 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.access$100 : return $r1
org.apache.ambari.server.state.UpgradeHelperTest.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.state.UpgradeHelperTest$MockModule.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setClusterId : r0.<org.apache.ambari.server.state.alert.AlertDefinition: long clusterId> = l0
org.apache.ambari.server.state.alert.AlertDefinition.setClusterId : r0.<org.apache.ambari.server.state.alert.AlertDefinition: long clusterId> = l0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setComponentName : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName> = r1
org.apache.ambari.server.state.alert.AlertDefinition.setComponentName : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName> = r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setEnabled : r0.<org.apache.ambari.server.state.alert.AlertDefinition: boolean enabled> = z0
org.apache.ambari.server.state.alert.AlertDefinition.setEnabled : r0.<org.apache.ambari.server.state.alert.AlertDefinition: boolean enabled> = z0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setInterval : r0.<org.apache.ambari.server.state.alert.AlertDefinition: int interval> = i0
org.apache.ambari.server.state.alert.AlertDefinition.setInterval : r0.<org.apache.ambari.server.state.alert.AlertDefinition: int interval> = i0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setName : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name> = r1
org.apache.ambari.server.state.alert.AlertDefinition.setName : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setScope : if null != r1
org.apache.ambari.server.state.alert.AlertDefinition.setScope : if null != r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setScope : r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope> = r1
org.apache.ambari.server.state.alert.AlertDefinition.setScope : r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope> = r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setServiceName : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName> = r1
org.apache.ambari.server.state.alert.AlertDefinition.setServiceName : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setLabel : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label> = r1
org.apache.ambari.server.state.alert.AlertDefinition.setLabel : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label> = r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setDescription : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description> = r1
org.apache.ambari.server.state.alert.AlertDefinition.setDescription : r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description> = r1 >>>>>>>> org.apache.ambari.server.state.AlertState.values : $r0 = <org.apache.ambari.server.state.AlertState: org.apache.ambari.server.state.AlertState[] $VALUES>
org.apache.ambari.server.state.AlertState.values : $r0 = <org.apache.ambari.server.state.AlertState: org.apache.ambari.server.state.AlertState[] $VALUES> >>>>>>>> org.apache.ambari.server.state.AlertState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.AlertState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.AlertState.values : $r2 = (org.apache.ambari.server.state.AlertState[]) $r1
org.apache.ambari.server.state.AlertState.values : $r2 = (org.apache.ambari.server.state.AlertState[]) $r1 >>>>>>>> org.apache.ambari.server.state.AlertState.values : return $r2
org.apache.ambari.server.state.AlertState.values : return $r2 >>>>>>>> org.apache.ambari.server.state.alert.SourceType.values : $r0 = <org.apache.ambari.server.state.alert.SourceType: org.apache.ambari.server.state.alert.SourceType[] $VALUES>
org.apache.ambari.server.state.alert.SourceType.values : $r0 = <org.apache.ambari.server.state.alert.SourceType: org.apache.ambari.server.state.alert.SourceType[] $VALUES> >>>>>>>> org.apache.ambari.server.state.alert.SourceType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.alert.SourceType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.alert.SourceType.values : $r2 = (org.apache.ambari.server.state.alert.SourceType[]) $r1
org.apache.ambari.server.state.alert.SourceType.values : $r2 = (org.apache.ambari.server.state.alert.SourceType[]) $r1 >>>>>>>> org.apache.ambari.server.state.alert.SourceType.values : return $r2
org.apache.ambari.server.state.alert.SourceType.values : return $r2 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.setPort : r0.<org.apache.ambari.server.state.alert.PortSource: int m_port> = i0
org.apache.ambari.server.state.alert.PortSource.setPort : r0.<org.apache.ambari.server.state.alert.PortSource: int m_port> = i0 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.setUri : r0.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri> = r1
org.apache.ambari.server.state.alert.PortSource.setUri : r0.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri> = r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.setText : r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text> = r1
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.setText : r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text> = r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.setValue : r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value> = r1
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.setValue : r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value> = r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.setCritical : r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical> = r1
org.apache.ambari.server.state.alert.Reporting.setCritical : r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical> = r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.setWarning : r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning> = r1
org.apache.ambari.server.state.alert.Reporting.setWarning : r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning> = r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.setOk : r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok> = r1
org.apache.ambari.server.state.alert.Reporting.setOk : r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok> = r1 >>>>>>>> org.apache.ambari.server.state.alert.Source.setReporting : r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting> = r1
org.apache.ambari.server.state.alert.Source.setReporting : r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting> = r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.setSource : r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source> = r1
org.apache.ambari.server.state.alert.AlertDefinition.setSource : r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source> = r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : if null == r1
org.apache.ambari.server.state.alert.AlertDefinition.equals : if null == r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.AlertDefinition.equals : $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/apache/ambari/server/state/alert/AlertDefinition;")
org.apache.ambari.server.state.alert.AlertDefinition.equals : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/apache/ambari/server/state/alert/AlertDefinition;") >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : if $z0 != 0
org.apache.ambari.server.state.alert.AlertDefinition.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : $r5 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name>
org.apache.ambari.server.state.alert.AlertDefinition.equals : $r5 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : $r3 = (org.apache.ambari.server.state.alert.AlertDefinition) r1
org.apache.ambari.server.state.alert.AlertDefinition.equals : $r3 = (org.apache.ambari.server.state.alert.AlertDefinition) r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : $r4 = $r3.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name>
org.apache.ambari.server.state.alert.AlertDefinition.equals : $r4 = $r3.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.state.alert.AlertDefinition.equals : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.equals : return $z1
org.apache.ambari.server.state.alert.AlertDefinition.equals : return $z1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if r0 != r1
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if r0 != r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if r1 != null
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if r1 != null >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r3 == $r4
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : r2 = (org.apache.ambari.server.state.alert.AlertDefinition) r1
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : r2 = (org.apache.ambari.server.state.alert.AlertDefinition) r1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r5 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r5 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r5 != null
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r5 != null >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r7 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r7 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r6 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r6 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z0 != 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z2 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: boolean enabled>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z2 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: boolean enabled> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z1 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: boolean enabled>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z1 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: boolean enabled> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z2 == $z1
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z2 == $z1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z4 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: boolean ignoreHost>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z4 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: boolean ignoreHost> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z3 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: boolean ignoreHost>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z3 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: boolean ignoreHost> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z4 == $z3
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z4 == $z3 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $i1 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: int interval>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $i1 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: int interval> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $i0 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: int interval>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $i0 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: int interval> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $i1 == $i0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $i1 == $i0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r8 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r8 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r8 != null
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r8 != null >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r10 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r10 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r9 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r9 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String label> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z5 != 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r12 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String helpURL>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r12 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String helpURL> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r11 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String helpURL>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r11 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String helpURL> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r12, $r11)
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r12, $r11) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z6 != 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z6 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r13 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r13 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r13 != null
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r13 != null >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r15 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r15 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r14 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r14 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String description> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r14)
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z7 != 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z7 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r16 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r16 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r16 != null
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r16 != null >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r18 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r18 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r17 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r17 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z8 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17)
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z8 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z8 != 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z8 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r19 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r19 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if null != $r19
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if null != $r19 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r21 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r21 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r20 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r20 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Scope scope> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r21 == $r20
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r21 == $r20 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r22 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r22 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r22 != null
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r22 != null >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r24 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r24 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r23 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r23 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z9 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r23)
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z9 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z9 != 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z9 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r25 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r25 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r25 != null
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $r25 != null >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r27 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r27 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r26 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source>
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $r26 = r2.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z10 = virtualinvoke $r27.<org.apache.ambari.server.state.alert.Source: boolean equals(java.lang.Object)>($r26)
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : $z10 = virtualinvoke $r27.<org.apache.ambari.server.state.alert.Source: boolean equals(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : if r0 != r1
org.apache.ambari.server.state.alert.PortSource.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.alert.ParameterizedSource: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.state.alert.PortSource.equals : $z0 = specialinvoke r0.<org.apache.ambari.server.state.alert.ParameterizedSource: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : if r0 != r1
org.apache.ambari.server.state.alert.Source.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : if r1 != null
org.apache.ambari.server.state.alert.Source.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.Source.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.Source.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : if $r3 == $r4
org.apache.ambari.server.state.alert.Source.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : r2 = (org.apache.ambari.server.state.alert.Source) r1
org.apache.ambari.server.state.alert.Source.equals : r2 = (org.apache.ambari.server.state.alert.Source) r1 >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $r5 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting>
org.apache.ambari.server.state.alert.Source.equals : $r5 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting> >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : if $r5 != null
org.apache.ambari.server.state.alert.Source.equals : if $r5 != null >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $r7 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting>
org.apache.ambari.server.state.alert.Source.equals : $r7 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting> >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $r6 = r2.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting>
org.apache.ambari.server.state.alert.Source.equals : $r6 = r2.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting> >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $z0 = virtualinvoke $r7.<org.apache.ambari.server.state.alert.Reporting: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.alert.Source.equals : $z0 = virtualinvoke $r7.<org.apache.ambari.server.state.alert.Reporting: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if r0 != r1
org.apache.ambari.server.state.alert.Reporting.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if r1 != null
org.apache.ambari.server.state.alert.Reporting.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.Reporting.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.Reporting.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $r3 == $r4
org.apache.ambari.server.state.alert.Reporting.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : r2 = (org.apache.ambari.server.state.alert.Reporting) r1
org.apache.ambari.server.state.alert.Reporting.equals : r2 = (org.apache.ambari.server.state.alert.Reporting) r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r5 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical>
org.apache.ambari.server.state.alert.Reporting.equals : $r5 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $r5 != null
org.apache.ambari.server.state.alert.Reporting.equals : if $r5 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r7 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical>
org.apache.ambari.server.state.alert.Reporting.equals : $r7 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r6 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical>
org.apache.ambari.server.state.alert.Reporting.equals : $r6 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_critical> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $z0 = virtualinvoke $r7.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.alert.Reporting.equals : $z0 = virtualinvoke $r7.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if r0 != r1
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if r1 != null
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r3 == $r4
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : r2 = (org.apache.ambari.server.state.alert.Reporting$ReportTemplate) r1
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : r2 = (org.apache.ambari.server.state.alert.Reporting$ReportTemplate) r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r5 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text>
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r5 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text> >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r5 != null
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r5 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r7 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text>
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r7 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text> >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r6 = r2.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text>
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r6 = r2.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.String m_text> >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $z0 != 0
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r8 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value>
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r8 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value> >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r8 != null
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r8 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r10 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value>
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r10 = r0.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value> >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r9 = r2.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value>
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r9 = r2.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value> >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $z1 = virtualinvoke $r10.<java.lang.Double: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $z1 = virtualinvoke $r10.<java.lang.Double: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $z1 != 0
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : return 1
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : return 1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $z0 != 0
org.apache.ambari.server.state.alert.Reporting.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r8 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok>
org.apache.ambari.server.state.alert.Reporting.equals : $r8 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $r8 != null
org.apache.ambari.server.state.alert.Reporting.equals : if $r8 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r10 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok>
org.apache.ambari.server.state.alert.Reporting.equals : $r10 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r9 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok>
org.apache.ambari.server.state.alert.Reporting.equals : $r9 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $z1 = virtualinvoke $r10.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.state.alert.Reporting.equals : $z1 = virtualinvoke $r10.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r11 = r2.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value>
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : $r11 = r2.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: java.lang.Double m_value> >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r11 == null
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : if $r11 == null >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $z1 != 0
org.apache.ambari.server.state.alert.Reporting.equals : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r11 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning>
org.apache.ambari.server.state.alert.Reporting.equals : $r11 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $r11 != null
org.apache.ambari.server.state.alert.Reporting.equals : if $r11 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r13 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning>
org.apache.ambari.server.state.alert.Reporting.equals : $r13 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r12 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning>
org.apache.ambari.server.state.alert.Reporting.equals : $r12 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_warning> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $z2 = virtualinvoke $r13.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: boolean equals(java.lang.Object)>($r12)
org.apache.ambari.server.state.alert.Reporting.equals : $z2 = virtualinvoke $r13.<org.apache.ambari.server.state.alert.Reporting$ReportTemplate: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $z2 != 0
org.apache.ambari.server.state.alert.Reporting.equals : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r14 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportingType m_type>
org.apache.ambari.server.state.alert.Reporting.equals : $r14 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportingType m_type> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $r14 != null
org.apache.ambari.server.state.alert.Reporting.equals : if $r14 != null >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : $r17 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportingType m_type>
org.apache.ambari.server.state.alert.Reporting.equals : $r17 = r2.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportingType m_type> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : if $r17 == null
org.apache.ambari.server.state.alert.Reporting.equals : if $r17 == null >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : return 1
org.apache.ambari.server.state.alert.Reporting.equals : return 1 >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : if $z0 != 0
org.apache.ambari.server.state.alert.Source.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $r9 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.SourceType type>
org.apache.ambari.server.state.alert.Source.equals : $r9 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.SourceType type> >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : $r8 = r2.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.SourceType type>
org.apache.ambari.server.state.alert.Source.equals : $r8 = r2.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.SourceType type> >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : if $r9 == $r8
org.apache.ambari.server.state.alert.Source.equals : if $r9 == $r8 >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : return 1
org.apache.ambari.server.state.alert.Source.equals : return 1 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : if $z0 != 0
org.apache.ambari.server.state.alert.PortSource.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.PortSource.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.alert.PortSource.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : if $r3 == $r4
org.apache.ambari.server.state.alert.PortSource.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : r2 = (org.apache.ambari.server.state.alert.PortSource) r1
org.apache.ambari.server.state.alert.PortSource.equals : r2 = (org.apache.ambari.server.state.alert.PortSource) r1 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $i1 = r0.<org.apache.ambari.server.state.alert.PortSource: int m_port>
org.apache.ambari.server.state.alert.PortSource.equals : $i1 = r0.<org.apache.ambari.server.state.alert.PortSource: int m_port> >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $i0 = r2.<org.apache.ambari.server.state.alert.PortSource: int m_port>
org.apache.ambari.server.state.alert.PortSource.equals : $i0 = r2.<org.apache.ambari.server.state.alert.PortSource: int m_port> >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : if $i1 == $i0
org.apache.ambari.server.state.alert.PortSource.equals : if $i1 == $i0 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $r5 = r0.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri>
org.apache.ambari.server.state.alert.PortSource.equals : $r5 = r0.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri> >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : if $r5 != null
org.apache.ambari.server.state.alert.PortSource.equals : if $r5 != null >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $r7 = r0.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri>
org.apache.ambari.server.state.alert.PortSource.equals : $r7 = r0.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri> >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $r6 = r2.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri>
org.apache.ambari.server.state.alert.PortSource.equals : $r6 = r2.<org.apache.ambari.server.state.alert.PortSource: java.lang.String m_uri> >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.state.alert.PortSource.equals : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : if $z1 != 0
org.apache.ambari.server.state.alert.PortSource.equals : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : return 1
org.apache.ambari.server.state.alert.PortSource.equals : return 1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z10 != 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : if $z10 != 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : return 1
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : return 1 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : return 0
org.apache.ambari.server.state.alert.AlertDefinition.deeplyEquals : return 0 >>>>>>>> org.apache.ambari.server.state.alert.AggregateSource.setAlertName : r0.<org.apache.ambari.server.state.alert.AggregateSource: java.lang.String m_alertName> = r1
org.apache.ambari.server.state.alert.AggregateSource.setAlertName : r0.<org.apache.ambari.server.state.alert.AggregateSource: java.lang.String m_alertName> = r1 >>>>>>>> org.apache.ambari.server.state.alert.Source.equals : return 0
org.apache.ambari.server.state.alert.Source.equals : return 0 >>>>>>>> org.apache.ambari.server.state.alert.PortSource.equals : return 0
org.apache.ambari.server.state.alert.PortSource.equals : return 0 >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.getSource : $r1 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source>
org.apache.ambari.server.state.alert.AlertDefinition.getSource : $r1 = r0.<org.apache.ambari.server.state.alert.AlertDefinition: org.apache.ambari.server.state.alert.Source source> >>>>>>>> org.apache.ambari.server.state.alert.AlertDefinition.getSource : return $r1
org.apache.ambari.server.state.alert.AlertDefinition.getSource : return $r1 >>>>>>>> org.apache.ambari.server.state.alert.Source.getReporting : $r1 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting>
org.apache.ambari.server.state.alert.Source.getReporting : $r1 = r0.<org.apache.ambari.server.state.alert.Source: org.apache.ambari.server.state.alert.Reporting reporting> >>>>>>>> org.apache.ambari.server.state.alert.Source.getReporting : return $r1
org.apache.ambari.server.state.alert.Source.getReporting : return $r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.getOk : $r1 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok>
org.apache.ambari.server.state.alert.Reporting.getOk : $r1 = r0.<org.apache.ambari.server.state.alert.Reporting: org.apache.ambari.server.state.alert.Reporting$ReportTemplate m_ok> >>>>>>>> org.apache.ambari.server.state.alert.Reporting.getOk : return $r1
org.apache.ambari.server.state.alert.Reporting.getOk : return $r1 >>>>>>>> org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : return 0
org.apache.ambari.server.state.alert.Reporting$ReportTemplate.equals : return 0 >>>>>>>> org.apache.ambari.server.state.alert.Reporting.equals : return 0
