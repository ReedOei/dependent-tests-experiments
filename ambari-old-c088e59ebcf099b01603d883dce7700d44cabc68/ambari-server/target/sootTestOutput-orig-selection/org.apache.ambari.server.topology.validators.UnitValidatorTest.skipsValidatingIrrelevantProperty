org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r4 = new org.apache.ambari.server.state.ValueAttributesInfo >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : specialinvoke $r4.<org.apache.ambari.server.state.ValueAttributesInfo: void <init>()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : specialinvoke $r4.<org.apache.ambari.server.state.ValueAttributesInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : virtualinvoke $r4.<org.apache.ambari.server.state.ValueAttributesInfo: void setUnit(java.lang.String)>(r2)
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : virtualinvoke $r4.<org.apache.ambari.server.state.ValueAttributesInfo: void setUnit(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.ValueAttributesInfo.setUnit : r0.<org.apache.ambari.server.state.ValueAttributesInfo: java.lang.String unit> = r1
org.apache.ambari.server.state.ValueAttributesInfo.setUnit : r0.<org.apache.ambari.server.state.ValueAttributesInfo: java.lang.String unit> = r1 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r7 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: java.util.Map stackConfigWithMetadata>
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r7 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: java.util.Map stackConfigWithMetadata> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r5 = new org.apache.ambari.server.controller.internal.Stack$ConfigProperty
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r5 = new org.apache.ambari.server.controller.internal.Stack$ConfigProperty >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r6 = new org.apache.ambari.server.controller.StackConfigurationResponse
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r6 = new org.apache.ambari.server.controller.StackConfigurationResponse >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r9 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r9 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r10 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r10 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r11 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : $r11 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : specialinvoke $r6.<org.apache.ambari.server.controller.StackConfigurationResponse: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.util.Set,java.util.Map,org.apache.ambari.server.state.ValueAttributesInfo,java.util.Set)>(r1, "any", "any", "any", "any", $r8, $r9, $r10, $r4, $r11)
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : specialinvoke $r6.<org.apache.ambari.server.controller.StackConfigurationResponse: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.util.Set,java.util.Map,org.apache.ambari.server.state.ValueAttributesInfo,java.util.Set)>(r1, "any", "any", "any", "any", $r8, $r9, $r10, $r4, $r11) >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyName : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyName> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyName : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyValue : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyValue> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyValue : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyValue> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyDescription : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyDescription> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyDescription : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyDescription> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyDisplayName : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyDisplayName> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyDisplayName : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyDisplayName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setType : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String type> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setType : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String type> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setRequired : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.Boolean isRequired> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setRequired : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.Boolean isRequired> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyType : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set propertyTypes> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyType : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set propertyTypes> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyAttributes : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Map propertyAttributes> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyAttributes : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Map propertyAttributes> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyValueAttributes : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: org.apache.ambari.server.state.ValueAttributesInfo propertyValueAttributes> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setPropertyValueAttributes : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: org.apache.ambari.server.state.ValueAttributesInfo propertyValueAttributes> = r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.setDependsOnProperties : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set dependsOnProperties> = r1
org.apache.ambari.server.controller.StackConfigurationResponse.setDependsOnProperties : r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set dependsOnProperties> = r1 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : specialinvoke $r5.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: void <init>(org.apache.ambari.server.controller.StackConfigurationResponse)>($r6)
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : specialinvoke $r5.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: void <init>(org.apache.ambari.server.controller.StackConfigurationResponse)>($r6) >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyName : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyName>
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyName : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyName> >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyName : return $r1
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyName : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValue : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyValue>
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValue : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String propertyValue> >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValue : return $r1
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValue : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyAttributes : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Map propertyAttributes>
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyAttributes : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Map propertyAttributes> >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyAttributes : return $r1
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyAttributes : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyType : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set propertyTypes>
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyType : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set propertyTypes> >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyType : return $r1
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyType : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getType : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String type>
org.apache.ambari.server.controller.StackConfigurationResponse.getType : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String type> >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getType : return $r1
org.apache.ambari.server.controller.StackConfigurationResponse.getType : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml")
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml") >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getDependsOnProperties : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set dependsOnProperties>
org.apache.ambari.server.controller.StackConfigurationResponse.getDependsOnProperties : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: java.util.Set dependsOnProperties> >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getDependsOnProperties : return $r1
org.apache.ambari.server.controller.StackConfigurationResponse.getDependsOnProperties : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValueAttributes : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: org.apache.ambari.server.state.ValueAttributesInfo propertyValueAttributes>
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValueAttributes : $r1 = r0.<org.apache.ambari.server.controller.StackConfigurationResponse: org.apache.ambari.server.state.ValueAttributesInfo propertyValueAttributes> >>>>>>>> org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValueAttributes : return $r1
org.apache.ambari.server.controller.StackConfigurationResponse.getPropertyValueAttributes : return $r1 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5)
org.apache.ambari.server.topology.validators.UnitValidatorTest.stackUnitIs : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r4 = new org.apache.ambari.server.topology.validators.UnitValidatorTest$1
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r4 = new org.apache.ambari.server.topology.validators.UnitValidatorTest$1 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : specialinvoke $r4.<org.apache.ambari.server.topology.validators.UnitValidatorTest$1: void <init>(org.apache.ambari.server.topology.validators.UnitValidatorTest,java.lang.String,java.lang.String)>(r0, r1, r2)
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : specialinvoke $r4.<org.apache.ambari.server.topology.validators.UnitValidatorTest$1: void <init>(org.apache.ambari.server.topology.validators.UnitValidatorTest,java.lang.String,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r5 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology>
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r5 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r8 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r8 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r9 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r9 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : specialinvoke $r8.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r4, $r9)
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : specialinvoke $r8.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r4, $r9) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r10 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8)
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : $r10 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : virtualinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: void replayAll()>()
org.apache.ambari.server.topology.validators.UnitValidatorTest.propertyToBeValidatedIs : virtualinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r2 = new org.apache.ambari.server.topology.validators.UnitValidator
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r2 = new org.apache.ambari.server.topology.validators.UnitValidator >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r3 = newarray (org.apache.ambari.server.topology.validators.UnitValidatedProperty)[1]
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r3 = newarray (org.apache.ambari.server.topology.validators.UnitValidatedProperty)[1] >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r4 = new org.apache.ambari.server.topology.validators.UnitValidatedProperty
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r4 = new org.apache.ambari.server.topology.validators.UnitValidatedProperty >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : specialinvoke $r4.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: void <init>(java.lang.String,java.lang.String,java.lang.String)>("service", "config-type", r1)
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : specialinvoke $r4.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: void <init>(java.lang.String,java.lang.String,java.lang.String)>("service", "config-type", r1) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r3[0] = $r4
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r3[0] = $r4 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r5 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r3)
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r5 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r3) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r1 = new org.apache.commons.lang.builder.HashCodeBuilder
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r1 = new org.apache.commons.lang.builder.HashCodeBuilder >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : specialinvoke $r1.<org.apache.commons.lang.builder.HashCodeBuilder: void <init>(int,int)>(17, 37)
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : specialinvoke $r1.<org.apache.commons.lang.builder.HashCodeBuilder: void <init>(int,int)>(17, 37) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r2 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String configType>
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r2 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String configType> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r3 = virtualinvoke $r1.<org.apache.commons.lang.builder.HashCodeBuilder: org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object)>($r2)
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r3 = virtualinvoke $r1.<org.apache.commons.lang.builder.HashCodeBuilder: org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r4 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String serviceName>
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r4 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r5 = virtualinvoke $r3.<org.apache.commons.lang.builder.HashCodeBuilder: org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object)>($r4)
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r5 = virtualinvoke $r3.<org.apache.commons.lang.builder.HashCodeBuilder: org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r6 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String propertyName>
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r6 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String propertyName> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r7 = virtualinvoke $r5.<org.apache.commons.lang.builder.HashCodeBuilder: org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object)>($r6)
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $r7 = virtualinvoke $r5.<org.apache.commons.lang.builder.HashCodeBuilder: org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $i0 = virtualinvoke $r7.<org.apache.commons.lang.builder.HashCodeBuilder: int toHashCode()>()
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : $i0 = virtualinvoke $r7.<org.apache.commons.lang.builder.HashCodeBuilder: int toHashCode()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : return $i0
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hashCode : return $i0 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : specialinvoke $r2.<org.apache.ambari.server.topology.validators.UnitValidator: void <init>(java.util.Set)>($r5)
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : specialinvoke $r2.<org.apache.ambari.server.topology.validators.UnitValidator: void <init>(java.util.Set)>($r5) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.validators.UnitValidator validator> = $r2
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.validators.UnitValidator validator> = $r2 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r7 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.validators.UnitValidator validator>
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r7 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.validators.UnitValidator validator> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r6 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology>
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : $r6 = r0.<org.apache.ambari.server.topology.validators.UnitValidatorTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : virtualinvoke $r7.<org.apache.ambari.server.topology.validators.UnitValidator: void validate(org.apache.ambari.server.topology.ClusterTopology)>($r6)
org.apache.ambari.server.topology.validators.UnitValidatorTest.validate : virtualinvoke $r7.<org.apache.ambari.server.topology.validators.UnitValidator: void validate(org.apache.ambari.server.topology.ClusterTopology)>($r6) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validate : $r5 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.validators.UnitValidator.validate : $r5 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validate : r2 = interfaceinvoke $r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.validators.UnitValidator.validate : r2 = interfaceinvoke $r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validate : $r6 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.validators.UnitValidator.validate : $r6 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validate : $r7 = virtualinvoke $r6.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>()
org.apache.ambari.server.topology.validators.UnitValidator.validate : $r7 = virtualinvoke $r6.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r1 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(2147483647)
org.apache.ambari.server.topology.Configuration.getFullProperties : $r1 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(2147483647) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if i0 != 0
org.apache.ambari.server.topology.Configuration.getFullProperties : if i0 != 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r3 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r3 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if $r3 != null
org.apache.ambari.server.topology.Configuration.getFullProperties : if $r3 != null >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r28 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.getFullProperties : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= r29 = $r28]
org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= r29 = $r28] >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r29 = $r28
org.apache.ambari.server.topology.Configuration.getFullProperties : r29 = $r28 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r6 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r6 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if $z2 == 0
org.apache.ambari.server.topology.Configuration.getFullProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r8 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r8 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r31 = (java.util.Map$Entry) $r8
org.apache.ambari.server.topology.Configuration.getFullProperties : r31 = (java.util.Map$Entry) $r8 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r9 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r9 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : r1 = (java.lang.String) $r9
org.apache.ambari.server.topology.Configuration.getFullProperties : r1 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r10 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.getFullProperties : $r10 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r11 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.Configuration.getFullProperties : $r11 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $r12 = (java.util.Map) $r11
org.apache.ambari.server.topology.Configuration.getFullProperties : $r12 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r10.<java.util.HashMap: void <init>(java.util.Map)>($r12)
org.apache.ambari.server.topology.Configuration.getFullProperties : specialinvoke $r10.<java.util.HashMap: void <init>(java.util.Map)>($r12) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : $z0 = interfaceinvoke r29.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Configuration.getFullProperties : $z0 = interfaceinvoke r29.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : if $z0 == 0
org.apache.ambari.server.topology.Configuration.getFullProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.apache.ambari.server.topology.Configuration.getFullProperties : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.Configuration.getFullProperties : goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : return r29
org.apache.ambari.server.topology.Configuration.getFullProperties : return r29 >>>>>>>> org.apache.ambari.server.topology.Configuration.getFullProperties : return $r1
org.apache.ambari.server.topology.Configuration.getFullProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validate : specialinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidator: void validateConfig(java.util.Map,org.apache.ambari.server.controller.internal.Stack)>($r7, r2)
org.apache.ambari.server.topology.validators.UnitValidator.validate : specialinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidator: void validateConfig(java.util.Map,org.apache.ambari.server.controller.internal.Stack)>($r7, r2) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : if $z0 == 0
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : r4 = (java.util.Map$Entry) $r6
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : r4 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r8 = (java.lang.String) $r7
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r10 = (java.util.Map) $r9
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : $r10 = (java.util.Map) $r9 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : specialinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidator: void validateConfigType(java.lang.String,java.util.Map,org.apache.ambari.server.controller.internal.Stack)>($r8, $r10, r2)
org.apache.ambari.server.topology.validators.UnitValidator.validateConfig : specialinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidator: void validateConfigType(java.lang.String,java.util.Map,org.apache.ambari.server.controller.internal.Stack)>($r8, $r10, r2) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : $r6 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : $r6 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : if $z0 == 0
org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : r5 = (java.lang.String) $r7
org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : r5 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : specialinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidator: void validateProperty(java.lang.String,java.util.Map,java.lang.String,org.apache.ambari.server.controller.internal.Stack)>(r1, r2, r5, r3)
org.apache.ambari.server.topology.validators.UnitValidator.validateConfigType : specialinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidator: void validateProperty(java.lang.String,java.util.Map,java.lang.String,org.apache.ambari.server.controller.internal.Stack)>(r1, r2, r5, r3) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r5 = r0.<org.apache.ambari.server.topology.validators.UnitValidator: java.util.Set relevantProps>
org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r5 = r0.<org.apache.ambari.server.topology.validators.UnitValidator: java.util.Set relevantProps> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r6 = interfaceinvoke $r5.<java.util.Set: java.util.stream.Stream stream()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r6 = interfaceinvoke $r5.<java.util.Set: java.util.stream.Stream stream()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r7 = dynamicinvoke "test" <java.util.function.Predicate (java.lang.String,java.lang.String)>(r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Z", handle: <org.apache.ambari.server.topology.validators.UnitValidator: boolean lambda$validateProperty$0(java.lang.String,java.lang.String,org.apache.ambari.server.topology.validators.UnitValidatedProperty)>, class "(Lorg/apache/ambari/server/topology/validators/UnitValidatedProperty;)Z")
org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r7 = dynamicinvoke "test" <java.util.function.Predicate (java.lang.String,java.lang.String)>(r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Z", handle: <org.apache.ambari.server.topology.validators.UnitValidator: boolean lambda$validateProperty$0(java.lang.String,java.lang.String,org.apache.ambari.server.topology.validators.UnitValidatedProperty)>, class "(Lorg/apache/ambari/server/topology/validators/UnitValidatedProperty;)Z") >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7)
org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r9 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.Optional findFirst()>()
org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r9 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.Optional findFirst()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.lambda$validateProperty$0 : $z0 = virtualinvoke r2.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: boolean hasTypeAndName(java.lang.String,java.lang.String)>(r0, r1)
org.apache.ambari.server.topology.validators.UnitValidator.lambda$validateProperty$0 : $z0 = virtualinvoke r2.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: boolean hasTypeAndName(java.lang.String,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : $r3 = virtualinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String getConfigType()>()
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : $r3 = virtualinvoke r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String getConfigType()>() >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.getConfigType : $r1 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String configType>
org.apache.ambari.server.topology.validators.UnitValidatedProperty.getConfigType : $r1 = r0.<org.apache.ambari.server.topology.validators.UnitValidatedProperty: java.lang.String configType> >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.getConfigType : return $r1
org.apache.ambari.server.topology.validators.UnitValidatedProperty.getConfigType : return $r1 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : if $z0 == 0
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : $z2 = 0
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : $z2 = 0 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : return $z2
org.apache.ambari.server.topology.validators.UnitValidatedProperty.hasTypeAndName : return $z2 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.lambda$validateProperty$0 : return $z0
org.apache.ambari.server.topology.validators.UnitValidator.lambda$validateProperty$0 : return $z0 >>>>>>>> org.apache.ambari.server.topology.validators.UnitValidator.validateProperty : $r10 = dynamicinvoke "accept" <java.util.function.Consumer (org.apache.ambari.server.controller.internal.Stack,java.util.Map,org.apache.ambari.server.topology.validators.UnitValidator)>(r4, r2, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)V", handle: <org.apache.ambari.server.topology.validators.UnitValidator: void lambda$validateProperty$1(java.util.Map,org.apache.ambari.server.controller.internal.Stack,org.apache.ambari.server.topology.validators.UnitValidatedProperty)>, class "(Lorg/apache/ambari/server/topology/validators/UnitValidatedProperty;)V")
