org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lcom/google/inject/Provider;") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : r0 = (com.google.inject.Provider) $r2
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : r0 = (com.google.inject.Provider) $r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;")
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : r1 = (org.apache.ambari.server.orm.dao.ViewInstanceDAO) $r3
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : r1 = (org.apache.ambari.server.orm.dao.ViewInstanceDAO) $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r4 = interfaceinvoke r0.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r4 = interfaceinvoke r0.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r8 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity findByResourceId(long)>($l0)
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r8 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity findByResourceId(long)>($l0) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r12 = newarray (java.lang.Object)[2]
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r12 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r12[0] = r0
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r12[0] = r0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r12[1] = r1
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : $r12[1] = r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12)
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : <org.apache.ambari.server.security.authorization.AuthorizationHelper: com.google.inject.Provider viewInstanceDAOProvider> = r0
org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer.viewInstanceDAOReturningNull : <org.apache.ambari.server.security.authorization.AuthorizationHelper: com.google.inject.Provider viewInstanceDAOProvider> = r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createServiceAdministrator(java.lang.String,java.lang.Long)>("serviceAdmin", $r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createServiceAdministrator(java.lang.String,java.lang.Long)>("serviceAdmin", $r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createServiceAdministratorGrantedAuthority(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createServiceAdministratorGrantedAuthority(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createServiceAdministratorPrivilegeEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createServiceAdministratorPrivilegeEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createServiceAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createServiceAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26]
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPrivilegeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorGrantedAuthority : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component>
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/MaintenanceStateHelper;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/MaintenanceStateHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r33
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r34
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Clusters) $r35
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Clusters) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Cluster) $r36
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Cluster) $r36 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r37
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.state.Service) $r38
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.state.Service) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ComponentInfo;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ComponentInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.state.ComponentInfo) $r39
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.state.ComponentInfo) $r39 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ComponentInfo;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ComponentInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.state.ComponentInfo) $r40
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.state.ComponentInfo) $r40 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ComponentInfo;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ComponentInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r11 = (org.apache.ambari.server.state.ComponentInfo) $r41
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r11 = (org.apache.ambari.server.state.ComponentInfo) $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r12 = (org.apache.ambari.server.state.ServiceComponent) $r42
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r12 = (org.apache.ambari.server.state.ServiceComponent) $r42 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r13 = (org.apache.ambari.server.state.ServiceComponent) $r43
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r13 = (org.apache.ambari.server.state.ServiceComponent) $r43 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponent;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r14 = (org.apache.ambari.server.state.ServiceComponent) $r44
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r14 = (org.apache.ambari.server.state.ServiceComponent) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponentHost;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceComponentHost;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r15 = (org.apache.ambari.server.state.ServiceComponentHost) $r45
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r15 = (org.apache.ambari.server.state.ServiceComponentHost) $r45 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/RequestStatusResponse;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/RequestStatusResponse;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r16 = (org.apache.ambari.server.controller.RequestStatusResponse) $r46
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r16 = (org.apache.ambari.server.controller.RequestStatusResponse) $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r47 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r47 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r47.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("stackName-1")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r47.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("stackName-1") >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r48 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r48 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r48.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r48.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component101", r12)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component101", r12) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component102", r13)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component102", r13) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component103", r14)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Component103", r14) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r52 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r52 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r52.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r52.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("startedCount", $r53)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("startedCount", $r53) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("installedCount", $r55)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("installedCount", $r55) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("installedAndMaintenanceOffCount", $r57)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("installedAndMaintenanceOffCount", $r57) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("installFailedCount", $r59)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("installFailedCount", $r59) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("initCount", $r61)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("initCount", $r61) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unknownCount", $r63)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unknownCount", $r63) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("totalCount", $r65)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("totalCount", $r65) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r67 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r67 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r68 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r67)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r68 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r67) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r69 = interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r69 = interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r71 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r71 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r72 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r71)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r72 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r73 = interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r73 = interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r76 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r75)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r76 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r77 = (org.apache.ambari.server.state.ServiceComponentHost) $r76
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r77 = (org.apache.ambari.server.state.ServiceComponentHost) $r76 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r78 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.MaintenanceState getEffectiveMaintenanceState(org.apache.ambari.server.state.ServiceComponentHost)>($r77)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r78 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.MaintenanceState getEffectiveMaintenanceState(org.apache.ambari.server.state.ServiceComponentHost)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r80 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r80 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r81 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r80)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r81 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r83 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r83 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r87 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service100")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r87 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service100") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r91 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r91 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service100")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service100") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r95 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component101")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r95 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component101") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r99 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component102")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r99 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component102") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r103 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component103")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r103 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("Component103") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r105 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r105 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r105.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r105.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r107 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r107 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r108 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r107)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r108 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r107) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r109 = interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component101")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r109 = interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component101") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r109.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r109.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r111 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r111 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r115 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r115 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r117 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component102")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r117 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component102") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r117.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r117.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r119 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r119 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r120 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r119)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r120 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r119) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r121 = interfaceinvoke $r120.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r121 = interfaceinvoke $r120.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r123 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r123 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r125 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component103")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r125 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Component103") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r125.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r125.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r127 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r127 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r128 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r127)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r128 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r127) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r129 = interfaceinvoke $r128.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r129 = interfaceinvoke $r128.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r131 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r131 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r132 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r131)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r132 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r131) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r133 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Service100", r8)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r133 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Service100", r8) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r134 = interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r133)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r134 = interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r133) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r136 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r136 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r137 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r136)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r137 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r136) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r138 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r138 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r139 = interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r138)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r139 = interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r138) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r141 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r141 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r142 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r141)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r142 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r141) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r143 = interfaceinvoke $r142.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r143 = interfaceinvoke $r142.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r143.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r143.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r145 = virtualinvoke r7.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("stackName", "1", "Service100", "Component101")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r145 = virtualinvoke r7.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("stackName", "1", "Service100", "Component101") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r146 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r145)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r146 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r147 = interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r147 = interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r147.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r147.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r149 = virtualinvoke r7.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("stackName", "1", "Service100", "Component102")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r149 = virtualinvoke r7.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("stackName", "1", "Service100", "Component102") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r150 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r149)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r150 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r149) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r151 = interfaceinvoke $r150.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r151 = interfaceinvoke $r150.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r153 = virtualinvoke r7.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("stackName", "1", "Service100", "Component103")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r153 = virtualinvoke r7.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("stackName", "1", "Service100", "Component103") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r157 = virtualinvoke r9.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCategory()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r157 = virtualinvoke r9.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCategory()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r158 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r157)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r158 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r157) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r158.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r158.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r160 = virtualinvoke r10.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCategory()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r160 = virtualinvoke r10.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCategory()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r161 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r160)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r161 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r160) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r163 = virtualinvoke r11.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCategory()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r163 = virtualinvoke r11.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCategory()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r166 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.controller.ServiceComponentResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r166 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.controller.ServiceComponentResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r167 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r166)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r167 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r166) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r168 = new org.apache.ambari.server.controller.ServiceComponentResponse
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r168 = new org.apache.ambari.server.controller.ServiceComponentResponse >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r169 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r169 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r168.<org.apache.ambari.server.controller.ServiceComponentResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,boolean,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r169, "Cluster100", "Service100", "Component101", $r47, "", $r52, 0, "Component101 Client", null, null)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r168.<org.apache.ambari.server.controller.ServiceComponentResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,boolean,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r169, "Cluster100", "Service100", "Component101", $r47, "", $r52, 0, "Component101 Client", null, null) >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackId : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.getStackId : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : if $z0 == 0
org.apache.ambari.server.state.StackId.getStackId : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.state.StackId.getStackId : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.StackId.getStackId : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r3 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackId : $r3 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.state.StackId.getStackId : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.state.StackId.getStackId : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r6 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackId : $r6 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.state.StackId.getStackId : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.StackId.getStackId : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : return $r8
org.apache.ambari.server.state.StackId.getStackId : return $r8 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r168)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r168) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r171 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.controller.ServiceComponentResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r171 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.controller.ServiceComponentResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r172 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r171)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r172 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r171) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r173 = new org.apache.ambari.server.controller.ServiceComponentResponse
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r173 = new org.apache.ambari.server.controller.ServiceComponentResponse >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r174 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r174 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r173.<org.apache.ambari.server.controller.ServiceComponentResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,boolean,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r174, "Cluster100", "Service100", "Component102", $r47, "", $r52, 0, "Component102 Client", null, null)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r173.<org.apache.ambari.server.controller.ServiceComponentResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,boolean,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r174, "Cluster100", "Service100", "Component102", $r47, "", $r52, 0, "Component102 Client", null, null) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r172.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r173)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r172.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r173) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r176 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.controller.ServiceComponentResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r176 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.controller.ServiceComponentResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r177 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r176)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r177 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r176) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r178 = new org.apache.ambari.server.controller.ServiceComponentResponse
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r178 = new org.apache.ambari.server.controller.ServiceComponentResponse >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r179 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r179 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r178.<org.apache.ambari.server.controller.ServiceComponentResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,boolean,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r179, "Cluster100", "Service100", "Component103", $r47, "", $r52, 0, "Component103 Client", null, null)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r178.<org.apache.ambari.server.controller.ServiceComponentResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.util.Map,boolean,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r179, "Cluster100", "Service100", "Component103", $r47, "", $r52, 0, "Component103 Client", null, null) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r177.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r178)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r177.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r178) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r181 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r181 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r182 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r181)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r182 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r181) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r183 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r183 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r184 = interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r183)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r184 = interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r183) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r184.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r184.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r186 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r186 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r187 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r186)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r187 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r186) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r188 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r188 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r189 = interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r188)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r189 = interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r188) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r189.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r189.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r191 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r191 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r192 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r191)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r192 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r191) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r193 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r193 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r194 = interfaceinvoke $r192.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r193)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r194 = interfaceinvoke $r192.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r193) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r194.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r194.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r196 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r196 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r197 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r196)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r197 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r196) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r198 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r198 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r199 = interfaceinvoke $r197.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r198)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r199 = interfaceinvoke $r197.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r198) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r199.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r199.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r15)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r15) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r201 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r201 = interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r202 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r201)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r202 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r201) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r203 = interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r203 = interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r203.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r203.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r205 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r205 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r206 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r205)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r206 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r205) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r207 = interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r207 = interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r207.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r207.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r209 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r209 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r210 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r209)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r210 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r209) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r211 = interfaceinvoke $r210.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r211 = interfaceinvoke $r210.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r213 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Resource$Type;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r213 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Resource$Type;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r214 = (org.apache.ambari.server.controller.spi.Resource$Type) $r213
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r214 = (org.apache.ambari.server.controller.spi.Resource$Type) $r213 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r215 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r215 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r216 = (org.apache.ambari.server.state.Service) $r215
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r216 = (org.apache.ambari.server.state.Service) $r215 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $z0 = virtualinvoke r3.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>($r214, $r216)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $z0 = virtualinvoke r3.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>($r214, $r216) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r217 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r217 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r218 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r217)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r218 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r217) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r219 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r219 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r220 = interfaceinvoke $r218.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r219)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r220 = interfaceinvoke $r218.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r219) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r220.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r220.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r21 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r21 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r22 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r22 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r23 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r23 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r24 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r24 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r25 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r25 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r26 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r26 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r27 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : r27 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r222 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r27)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r222 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r27) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r223 = (org.apache.ambari.server.state.Cluster) $r222
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r223 = (org.apache.ambari.server.state.Cluster) $r222 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r224 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r224 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r225 = (java.util.Map) $r224
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r225 = (java.util.Map) $r224 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r226 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r25)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r226 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r25) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r227 = (java.util.Map) $r226
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r227 = (java.util.Map) $r226 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r228 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r22)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r228 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r229 = (java.util.Map) $r228
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r229 = (java.util.Map) $r228 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r230 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r23)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r230 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r23) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r231 = (java.util.Map) $r230
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r231 = (java.util.Map) $r230 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r232 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r24)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r232 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r24) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r233 = (java.util.Map) $r232
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r233 = (java.util.Map) $r232 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r234 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r26)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r234 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r26) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r235 = (java.util.Collection) $r234
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r235 = (java.util.Collection) $r234 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $z1 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $z1 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $z2 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $z2 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r236 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAndPersistStages(org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r223, $r225, $r227, $r229, $r231, $r233, $r235, $z1, $z2)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r236 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAndPersistStages(org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r223, $r225, $r227, $r229, $r231, $r233, $r235, $z1, $z2) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r237 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r236)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r237 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r236) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r237.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r16)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r237.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r239 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r239 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r239.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r239.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r239.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test")
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r239.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241 = newarray (java.lang.Object)[14]
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241 = newarray (java.lang.Object)[14] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[0] = r4
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[0] = r4 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[1] = r5
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[1] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[2] = r6
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[2] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[3] = r7
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[3] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[4] = r8
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[4] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[5] = r9
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[5] = r9 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[6] = r10
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[6] = r10 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[7] = r11
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[7] = r11 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[8] = r12
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[8] = r12 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[9] = r13
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[9] = r13 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[10] = r14
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[10] = r14 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[11] = r15
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[11] = r15 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[12] = r16
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[12] = r16 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[13] = r3
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r241[13] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r241)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r241) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r242 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r242 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r242.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : interfaceinvoke $r242.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r243 = new org.apache.ambari.server.controller.internal.ComponentResourceProvider
org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : $r243 = new org.apache.ambari.server.controller.internal.ComponentResourceProvider >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProviderTest.testUpdateResources : specialinvoke $r243.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void <init>(org.apache.ambari.server.controller.AmbariManagementController,org.apache.ambari.server.controller.MaintenanceStateHelper)>(r4, r3)
