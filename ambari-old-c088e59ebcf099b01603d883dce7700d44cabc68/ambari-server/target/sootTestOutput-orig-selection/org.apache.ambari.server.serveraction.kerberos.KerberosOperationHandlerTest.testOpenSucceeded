org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r1 = new org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r1 = new org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0[0] = $r1
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r0[0] = $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r0)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7[0] = r1
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r7)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeIPAKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2 = newarray (java.lang.reflect.Method)[2]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2 = newarray (java.lang.reflect.Method)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r3 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r3 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[0] = $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[0] = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r4 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r4 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[1] = $r4
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[1] = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>($r2)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>(r1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/IPAKerberosOperationHandler;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/IPAKerberosOperationHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler) $r5
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r6 = <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : $r6 = <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : return r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : return $r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.createMockedHandler : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r6 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>($r5)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r6 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r8 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r8 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: void <init>(org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: void <init>(org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r8)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : return r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : return r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/utils/ShellCommandUtil$Result;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/utils/ShellCommandUtil$Result;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String)>("kinit")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String)>("kinit") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : $r1 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : $r1 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: void <init>(java.lang.String)>(r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : return null
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : return null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r10 = (java.util.Map) $r9
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r10 = (java.util.Map) $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r12 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r11
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r12 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r11 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r13 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r8, $r10, $r12)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r13 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r8, $r10, $r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : $r1 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential DEFAULT_ADMIN_CREDENTIALS>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : $r1 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential DEFAULT_ADMIN_CREDENTIALS> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP>
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.getKerberosEnv : return $r1
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.getKerberosEnv : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ipa_user_group")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ipa_user_group") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r7 = (java.lang.String) $r6
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String userPrincipalGroup> = $r7
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String userPrincipalGroup> = $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("ipa")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("ipa") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: java.lang.String answer()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: java.lang.String answer()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object[] getCurrentArguments()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object[] getCurrentArguments()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r2 = r1[0]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r2 = r1[0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String executableIpa> = $r4
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String executableIpa> = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("ipa-getkeytab")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : $r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("ipa-getkeytab") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String executableIpaGetKeytab> = $r5
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler: java.lang.String executableIpaGetKeytab> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r6 = (java.lang.String) $r5
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String adminServerHost> = $r6
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String adminServerHost> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kinit")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kinit") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit> = $r4
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit> = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean init()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean init()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $r4 == null
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $r4 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r34 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("ambari_krb_", "cc")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r34 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("ambari_krb_", "cc") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> = $r34
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> = $r34 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r35 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r35 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : virtualinvoke $r35.<java.io.File: void deleteOnExit()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : virtualinvoke $r35.<java.io.File: void deleteOnExit()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void ensureAmbariOnlyAccess(java.io.File)>($r36)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void ensureAmbariOnlyAccess(java.io.File)>($r36) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z1 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z1 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z2 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z2 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z2 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z3 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z3 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z3 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z3 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z4 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z4 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z4 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z4 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z5 = virtualinvoke r1.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z5 = virtualinvoke r1.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z5 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z5 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z6 = virtualinvoke r1.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z6 = virtualinvoke r1.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z6 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z6 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : goto [?= $r5 = newarray (java.lang.Object)[1]]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : goto [?= $r5 = newarray (java.lang.Object)[1]] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5[0] = $r7
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5[0] = $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FILE:%s", $r5)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FILE:%s", $r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r8 = new java.util.HashMap
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> = $r8
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> = $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KRB5CCNAME", r38)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KRB5CCNAME", r38) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r12 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String[] getKinitCommand(java.lang.String,org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String)>($r11, r1, r38)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r12 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String[] getKinitCommand(java.lang.String,org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String)>($r11, r1, r38) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4 = newarray (java.lang.String)[4]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4 = newarray (java.lang.String)[4] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[0] = r1
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[1] = "-c"
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[1] = "-c" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[2] = r3
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[2] = r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r5 = virtualinvoke r2.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r5 = virtualinvoke r2.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[3] = $r5
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : $r4[3] = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : return $r4
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandler.getKinitCommand : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r13 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r13 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r15 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r15 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r15)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r15) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler: void <init>(java.lang.String,java.lang.String)>($r16, null)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler: void <init>(java.lang.String,java.lang.String)>($r16, null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r12, $r14, $r13)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r12, $r14, $r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z0 = r1 instanceof java.lang.String[]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z0 = r1 instanceof java.lang.String[] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $r7 = (java.lang.String[]) r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $r7 = (java.lang.String[]) r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r2 = (java.lang.String[]) $r7
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r2 = (java.lang.String[]) $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r3 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: java.lang.String[] startItems>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r3 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: java.lang.String[] startItems> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i0 = lengthof r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r4 = r3[i2]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r4 = r3[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i1 = lengthof r2
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i1 = lengthof r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i3 = 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i3 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i3 >= i1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i3 >= i1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r6 = r2[i3]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r6 = r2[i3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z1 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z1 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if z2 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : return 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : return 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r17 = new java.util.HashMap
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r17 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r17.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r17.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.HashMap cachedKeytabs> = $r17
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.HashMap cachedKeytabs> = $r17 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : return 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : return 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void setOpen(boolean)>($z0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void setOpen(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r0 = newarray (java.lang.Class)[0]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r0 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isOpen", $r0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isOpen", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodIsOpen> = $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodIsOpen> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r5 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r5 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3 = newarray (java.lang.Class)[2]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3 = newarray (java.lang.Class)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r4 = <java.lang.Boolean: java.lang.Class TYPE>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r4 = <java.lang.Boolean: java.lang.Class TYPE> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[1] = $r4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[1] = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("principalExists", $r3)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("principalExists", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodPrincipalExists> = $r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodPrincipalExists> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r8 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r8 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("invokeKAdmin", $r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("invokeKAdmin", $r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodInvokeKAdmin> = $r9
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodInvokeKAdmin> = $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r18 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r18 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2 = newarray (java.lang.reflect.Method)[2]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2 = newarray (java.lang.reflect.Method)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r3 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r3 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[0] = $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[0] = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r4 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r4 = <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[1] = $r4
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r2[1] = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>($r2)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler) $r5
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : return r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : return $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r6 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>($r5)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r6 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r8 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r8 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: void <init>(org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: void <init>(org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r8)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : return r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.createMockedHandler : return r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/utils/ShellCommandUtil$Result;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/utils/ShellCommandUtil$Result;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String)>("kinit")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String)>("kinit") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : $r1 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : $r1 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: void <init>(java.lang.String)>(r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : return null
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.arrayContains : return null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r10 = (java.util.Map) $r9
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r10 = (java.util.Map) $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r12 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r11
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r12 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r11 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r13 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r8, $r10, $r12)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r13 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r8, $r10, $r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : $r1 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential DEFAULT_ADMIN_CREDENTIALS>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : $r1 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential DEFAULT_ADMIN_CREDENTIALS> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.getKerberosEnv : return $r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.getKerberosEnv : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_create_attributes")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_create_attributes") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r6 = (java.lang.String) $r5
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String createAttributes> = $r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String createAttributes> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: java.lang.String answer()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1: java.lang.String answer()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object[] getCurrentArguments()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object[] getCurrentArguments()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r2 = r1[0]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r2 = r1[0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$1.answer : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin> = $r4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin> = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r6 = (java.lang.String) $r5
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String adminServerHost> = $r6
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String adminServerHost> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kinit")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kinit") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit> = $r4
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit> = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean init()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean init()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $r4 == null
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $r4 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r34 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("ambari_krb_", "cc")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r34 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("ambari_krb_", "cc") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> = $r34
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> = $r34 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r35 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r35 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : virtualinvoke $r35.<java.io.File: void deleteOnExit()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : virtualinvoke $r35.<java.io.File: void deleteOnExit()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void ensureAmbariOnlyAccess(java.io.File)>($r36)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void ensureAmbariOnlyAccess(java.io.File)>($r36) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z1 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z1 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z2 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z2 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z2 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z3 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z3 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z3 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z3 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z4 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z4 = virtualinvoke r1.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z4 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z4 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z5 = virtualinvoke r1.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z5 = virtualinvoke r1.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z5 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z5 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z6 = virtualinvoke r1.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : $z6 = virtualinvoke r1.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z6 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.ensureAmbariOnlyAccess : if $z6 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : goto [?= $r5 = newarray (java.lang.Object)[1]]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : goto [?= $r5 = newarray (java.lang.Object)[1]] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.io.File credentialsCacheFile> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5[0] = $r7
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r5[0] = $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FILE:%s", $r5)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FILE:%s", $r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r8 = new java.util.HashMap
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> = $r8
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> = $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KRB5CCNAME", r38)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KRB5CCNAME", r38) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String executableKinit> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r12 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String[] getKinitCommand(java.lang.String,org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String)>($r11, r1, r38)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r12 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String[] getKinitCommand(java.lang.String,org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String)>($r11, r1, r38) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4 = newarray (java.lang.String)[6]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4 = newarray (java.lang.String)[6] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[0] = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[1] = "-c"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[1] = "-c" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[2] = r3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[2] = r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[3] = "-S"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[3] = "-S" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r5 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getAdminServerHost()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getAdminServerHost()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.getAdminServerHost : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String adminServerHost>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.getAdminServerHost : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.String adminServerHost> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.getAdminServerHost : return $r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.getAdminServerHost : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r5[0] = $r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r5[0] = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("kadmin/%s", $r5)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("kadmin/%s", $r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[4] = $r7
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[4] = $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r8 = virtualinvoke r2.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r8 = virtualinvoke r2.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[5] = $r8
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : $r4[5] = $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : return $r4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKinitCommand : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.Map environmentMap> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r13 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r13 = new org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r15 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r15 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r15)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r15) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler: void <init>(java.lang.String,java.lang.String)>($r16, null)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler$InteractivePasswordHandler: void <init>(java.lang.String,java.lang.String)>($r16, null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r12, $r14, $r13)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r12, $r14, $r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z0 = r1 instanceof java.lang.String[]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z0 = r1 instanceof java.lang.String[] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $r7 = (java.lang.String[]) r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $r7 = (java.lang.String[]) r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r2 = (java.lang.String[]) $r7
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r2 = (java.lang.String[]) $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r3 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: java.lang.String[] startItems>
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r3 = r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains: java.lang.String[] startItems> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i0 = lengthof r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i2 >= i0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i2 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r4 = r3[i2]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r4 = r3[i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i1 = lengthof r2
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i1 = lengthof r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i3 = 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i3 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i3 >= i1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if i3 >= i1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r6 = r2[i3]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : r6 = r2[i3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z1 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : $z1 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : z2 = 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if z2 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : if z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = i2 + 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : return 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest$ArrayContains.matches : return 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r17 = new java.util.HashMap
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : $r17 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r17.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : specialinvoke $r17.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.HashMap cachedKeytabs> = $r17
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.util.HashMap cachedKeytabs> = $r17 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : return 1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.init : return 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void setOpen(boolean)>($z0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: void setOpen(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[2]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[0] = class "Ljava/util/Properties;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[0] = class "Ljava/util/Properties;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[1] = class "[Ljavax/naming/ldap/Control;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[1] = class "[Ljavax/naming/ldap/Control;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createInitialLdapContext", $r0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createInitialLdapContext", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext> = $r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r1 = newarray (java.lang.reflect.Method)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r1 = newarray (java.lang.reflect.Method)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r2 = <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r2 = <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r1[0] = $r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r3 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>($r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r3 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler createMockedHandler(java.lang.reflect.Method[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler) $r5
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : return r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : return $r3
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler) r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler) r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Properties;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Properties;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r4 = (java.util.Properties) $r3
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r4 = (java.util.Properties) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r6 = (javax.naming.ldap.Control[]) $r5
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r6 = (javax.naming.ldap.Control[]) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r7 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r4, $r6)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r7 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r4, $r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : $r1 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential DEFAULT_ADMIN_CREDENTIALS>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : $r1 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential DEFAULT_ADMIN_CREDENTIALS> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : return $r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r6 = (java.lang.String) $r5
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r6
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r7 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = (java.lang.String) $r9
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r10
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r11 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r11 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = new javax.naming.ldap.LdapName
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = new javax.naming.ldap.LdapName >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r13 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r13 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r12.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r13)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r12.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r12
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r12 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r3 = new java.util.Properties
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r3 = new java.util.Properties >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r3.<java.util.Properties: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r3.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r5)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r7 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r7 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r9 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r9 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r10)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r15 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r15 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z1 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration: boolean validateKerberosOperationSSLCertTrust()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z1 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration: boolean validateKerberosOperationSSLCertTrust()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r16 = class "Lorg/apache/ambari/server/security/InternalSSLSocketFactoryTrusting;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r16 = class "Lorg/apache/ambari/server/security/InternalSSLSocketFactoryTrusting;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r17)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r43 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r3, null)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r43 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r3, null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r43
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r43 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r14
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r14 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r2 = new javax.naming.directory.SearchControls
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r2 = new javax.naming.directory.SearchControls >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : specialinvoke $r2.<javax.naming.directory.SearchControls: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : specialinvoke $r2.<javax.naming.directory.SearchControls: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : virtualinvoke $r2.<javax.naming.directory.SearchControls: void setSearchScope(int)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : virtualinvoke $r2.<javax.naming.directory.SearchControls: void setSearchScope(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r3 = newarray (java.lang.String)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r3 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r3[0] = "cn"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r3[0] = "cn" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : virtualinvoke $r2.<javax.naming.directory.SearchControls: void setReturningAttributes(java.lang.String[])>($r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : virtualinvoke $r2.<javax.naming.directory.SearchControls: void setReturningAttributes(java.lang.String[])>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : return $r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r15
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r17 = (java.lang.String) $r16
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r17
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r17 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
