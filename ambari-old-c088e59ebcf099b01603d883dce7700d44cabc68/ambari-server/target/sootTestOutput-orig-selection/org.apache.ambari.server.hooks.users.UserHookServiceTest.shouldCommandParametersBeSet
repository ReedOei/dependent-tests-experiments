org.apache.ambari.server.hooks.users.UserCreatedEvent.getContext : $r1 = r0.<org.apache.ambari.server.hooks.users.UserCreatedEvent: org.apache.ambari.server.hooks.HookContext context> >>>>>>>> org.apache.ambari.server.hooks.users.UserCreatedEvent.getContext : return $r1
org.apache.ambari.server.hooks.users.UserCreatedEvent.getContext : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.PostUserCreationHookContext.getUserGroups : $r1 = r0.<org.apache.ambari.server.hooks.users.PostUserCreationHookContext: java.util.Map userGroups>
org.apache.ambari.server.hooks.users.PostUserCreationHookContext.getUserGroups : $r1 = r0.<org.apache.ambari.server.hooks.users.PostUserCreationHookContext: java.util.Map userGroups> >>>>>>>> org.apache.ambari.server.hooks.users.PostUserCreationHookContext.getUserGroups : return $r1
org.apache.ambari.server.hooks.users.PostUserCreationHookContext.getUserGroups : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r8 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r8 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Preparing hook execution for event: {}", r1)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Preparing hook execution for event: {}", r1) >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.events.AmbariEvent.toString : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.events.AmbariEvent.toString : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>()
org.apache.ambari.server.events.AmbariEvent.toString : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>() >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)
org.apache.ambari.server.events.AmbariEvent.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{eventType=")
org.apache.ambari.server.events.AmbariEvent.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{eventType=") >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : $r6 = r0.<org.apache.ambari.server.events.AmbariEvent: org.apache.ambari.server.events.AmbariEvent$AmbariEventType m_eventType>
org.apache.ambari.server.events.AmbariEvent.toString : $r6 = r0.<org.apache.ambari.server.events.AmbariEvent: org.apache.ambari.server.events.AmbariEvent$AmbariEventType m_eventType> >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)
org.apache.ambari.server.events.AmbariEvent.toString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.events.AmbariEvent.toString : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.events.AmbariEvent.toString : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.events.AmbariEvent.toString : return $r9
org.apache.ambari.server.events.AmbariEvent.toString : return $r9 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r9 = new org.apache.ambari.server.controller.internal.RequestStageContainer
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r9 = new org.apache.ambari.server.controller.internal.RequestStageContainer >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r10 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.ActionManager actionManager>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r10 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.ActionManager actionManager> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l0 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.ActionManager: long getNextRequestId()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l0 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.ActionManager: long getNextRequestId()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r13 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.RequestFactory requestFactory>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r13 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.RequestFactory requestFactory> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r12 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.ActionManager actionManager>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r12 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.ActionManager actionManager> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : specialinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void <init>(java.lang.Long,java.util.List,org.apache.ambari.server.actionmanager.RequestFactory,org.apache.ambari.server.actionmanager.ActionManager)>($r11, null, $r13, $r12)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : specialinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void <init>(java.lang.Long,java.util.List,org.apache.ambari.server.actionmanager.RequestFactory,org.apache.ambari.server.actionmanager.ActionManager)>($r11, null, $r13, $r12) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r2 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.hooks.users.UserHookService$ClusterData getClusterData()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r2 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.hooks.users.UserHookService$ClusterData getClusterData()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r23 = "NA"
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r23 = "NA" >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r24 = "NA"
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r24 = "NA" >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r4 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r4 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r1 = (java.util.Map$Entry) $r8
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r1 = (java.util.Map$Entry) $r8 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r9 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r9 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r2 = (org.apache.ambari.server.state.Cluster) $r9
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r2 = (org.apache.ambari.server.state.Cluster) $r9 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r10 = <org.apache.ambari.server.hooks.users.UserHookService$1: int[] $SwitchMap$org$apache$ambari$server$state$SecurityType>
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r10 = <org.apache.ambari.server.hooks.users.UserHookService$1: int[] $SwitchMap$org$apache$ambari$server$state$SecurityType> >>>>>>>> org.apache.ambari.server.state.SecurityType.values : $r0 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType[] $VALUES>
org.apache.ambari.server.state.SecurityType.values : $r0 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType[] $VALUES> >>>>>>>> org.apache.ambari.server.state.SecurityType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.SecurityType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.SecurityType.values : $r2 = (org.apache.ambari.server.state.SecurityType[]) $r1
org.apache.ambari.server.state.SecurityType.values : $r2 = (org.apache.ambari.server.state.SecurityType[]) $r1 >>>>>>>> org.apache.ambari.server.state.SecurityType.values : return $r2
org.apache.ambari.server.state.SecurityType.values : return $r2 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r11 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r11 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i0 = virtualinvoke $r11.<org.apache.ambari.server.state.SecurityType: int ordinal()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i0 = virtualinvoke $r11.<org.apache.ambari.server.state.SecurityType: int ordinal()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i1 = $r10[$i0]
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i1 = $r10[$i0] >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : lookupswitch($i1) {     case 1:
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r21 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER>
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r21 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r22 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r22 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("The cluster security is not set. Security type: {}", $r22)
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("The cluster security is not set. Security type: {}", $r22) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r15 = new org.apache.ambari.server.hooks.users.UserHookService$ClusterData
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r15 = new org.apache.ambari.server.hooks.users.UserHookService$ClusterData >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r16 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r16 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $l2 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $l2 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r18 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r18 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r19 = virtualinvoke $r18.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r19 = virtualinvoke $r18.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r20 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: java.lang.String getHdfsUser(org.apache.ambari.server.state.Cluster)>(r2)
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r20 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: java.lang.String getHdfsUser(org.apache.ambari.server.state.Cluster)>(r2) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env")
org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env") >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs_user")
org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs_user") >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : r2 = (java.lang.String) $r5
org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : r2 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : return r2
org.apache.ambari.server.hooks.users.UserHookService.getHdfsUser : return r2 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : specialinvoke $r15.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: void <init>(java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, $r17, $r19, r24, r23, $r20)
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : specialinvoke $r15.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: void <init>(java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, $r17, $r19, r24, r23, $r20) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : return $r15
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : return $r15 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r14 = virtualinvoke r1.<org.apache.ambari.server.hooks.users.UserCreatedEvent: org.apache.ambari.server.hooks.HookContext getContext()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r14 = virtualinvoke r1.<org.apache.ambari.server.hooks.users.UserCreatedEvent: org.apache.ambari.server.hooks.HookContext getContext()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r3 = (org.apache.ambari.server.hooks.users.PostUserCreationHookContext) $r14
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r3 = (org.apache.ambari.server.hooks.users.PostUserCreationHookContext) $r14 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r16 = virtualinvoke r3.<org.apache.ambari.server.hooks.users.PostUserCreationHookContext: java.util.Map getUserGroups()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r16 = virtualinvoke r3.<org.apache.ambari.server.hooks.users.PostUserCreationHookContext: java.util.Map getUserGroups()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $i1 = interfaceinvoke $r16.<java.util.Map: int size()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $i1 = interfaceinvoke $r16.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r15[0] = $r17
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r15[0] = $r17 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Post user creation hook for [ %s ] users", $r15)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Post user creation hook for [ %s ] users", $r15) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r18 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.StageFactory stageFactory>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r18 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r19 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.Long getId()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r19 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getId : $r1 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.Long id>
org.apache.ambari.server.controller.internal.RequestStageContainer.getId : $r1 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.Long id> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getId : return $r1
org.apache.ambari.server.controller.internal.RequestStageContainer.getId : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l2 = virtualinvoke $r19.<java.lang.Long: long longValue()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l2 = virtualinvoke $r19.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r21 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r21 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerTempDir()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerTempDir()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $c3 = <java.io.File: char pathSeparatorChar>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $c3 = <java.io.File: char pathSeparatorChar> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r25 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.Long getId()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r25 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r28 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getClusterName()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r28 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterName : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String clusterName>
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterName : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterName : return $r1
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r29 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.Long getClusterId()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r29 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterId : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.Long clusterId>
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterId : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.Long clusterId> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterId : return $r1
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getClusterId : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l4 = virtualinvoke $r29.<java.lang.Long: long longValue()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l4 = virtualinvoke $r29.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r5 = interfaceinvoke $r18.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)>($l2, $r27, $r28, $l4, r4, "{}", "{}")
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r5 = interfaceinvoke $r18.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)>($l2, $r27, $r28, $l4, r4, "{}", "{}") >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l5 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: long getLastStageId()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l5 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: long getLastStageId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : $r1 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages>
org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : $r1 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : if $z0 == 0
org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : $l2 = -1L
org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : $l2 = -1L >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : goto [?= return $l2]
org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : goto [?= return $l2] >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : return $l2
org.apache.ambari.server.controller.internal.RequestStageContainer.getLastStageId : return $l2 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>($l5)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>($l5) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r30 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r30 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : specialinvoke $r30.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent: void <init>(java.lang.String,long)>("ambari-server-host", $l6)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : specialinvoke $r30.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent: void <init>(java.lang.String,long)>("ambari-server-host", $l6) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r7 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: java.util.Map prepareCommandParams(org.apache.ambari.server.hooks.users.PostUserCreationHookContext,org.apache.ambari.server.hooks.users.UserHookService$ClusterData)>(r3, r2)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : r7 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: java.util.Map prepareCommandParams(org.apache.ambari.server.hooks.users.PostUserCreationHookContext,org.apache.ambari.server.hooks.users.UserHookService$ClusterData)>(r3, r2) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r4 = new java.util.HashMap
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r5 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams SCRIPT>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r5 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams SCRIPT> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r6 = virtualinvoke $r5.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r6 = virtualinvoke $r5.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookParams.param : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param>
org.apache.ambari.server.hooks.users.UserHookParams.param : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookParams.param : return $r1
org.apache.ambari.server.hooks.users.UserHookParams.param : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r8 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r8 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty POST_USER_CREATION_HOOK>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty POST_USER_CREATION_HOOK> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.equals : if r0 != r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.equals : return 1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.equals : return 1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r9)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r9) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r11 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_ID>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r11 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_ID> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r12 = virtualinvoke $r11.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r12 = virtualinvoke $r11.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r13 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.Long getClusterId()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r13 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r16 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_NAME>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r16 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_NAME> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r17 = virtualinvoke $r16.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r17 = virtualinvoke $r16.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r18 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getClusterName()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r18 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r20 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_SECURITY_TYPE>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r20 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CLUSTER_SECURITY_TYPE> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r21 = virtualinvoke $r20.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r21 = virtualinvoke $r20.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r22 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getSecurityType()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r22 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getSecurityType()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getSecurityType : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String securityType>
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getSecurityType : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String securityType> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getSecurityType : return $r1
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getSecurityType : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r24 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_KEYTAB>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r24 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_KEYTAB> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r25 = virtualinvoke $r24.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r25 = virtualinvoke $r24.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r26 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getKeytab()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r26 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getKeytab()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getKeytab : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String keytab>
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getKeytab : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String keytab> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getKeytab : return $r1
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getKeytab : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r28 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_PRINCIPAL>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r28 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_PRINCIPAL> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r29 = virtualinvoke $r28.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r29 = virtualinvoke $r28.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r30 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getPrincipal()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r30 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getPrincipal : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String principal>
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getPrincipal : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String principal> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getPrincipal : return $r1
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r32 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_USER>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r32 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_HDFS_USER> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r33 = virtualinvoke $r32.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r33 = virtualinvoke $r32.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r34 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getHdfsUser()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r34 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getHdfsUser()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getHdfsUser : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String hdfsUser>
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getHdfsUser : $r1 = r0.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String hdfsUser> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getHdfsUser : return $r1
org.apache.ambari.server.hooks.users.UserHookService$ClusterData.getHdfsUser : return $r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r36 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r36 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams CMD_INPUT_FILE> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r37 = virtualinvoke $r36.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r37 = virtualinvoke $r36.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r38 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: java.lang.String generateInputFileName()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r38 = specialinvoke r0.<org.apache.ambari.server.hooks.users.UserHookService: java.lang.String generateInputFileName()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r2 = newarray (java.lang.Object)[1]
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r2 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $l0 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $l0 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r2[0] = $r4
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r2[0] = $r4 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("user_hook_input_%s.csv", $r2)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("user_hook_input_%s.csv", $r2) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r5 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER>
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r5 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Command input file name: {}", r1)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Command input file name: {}", r1) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r7 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r7 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerTempDir()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerTempDir()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r10 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r10 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : return $r13
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : return $r13 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, $r38)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, $r38) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r40 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams PAYLOAD>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r40 = <org.apache.ambari.server.hooks.users.UserHookParams: org.apache.ambari.server.hooks.users.UserHookParams PAYLOAD> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r41 = virtualinvoke $r40.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r41 = virtualinvoke $r40.<org.apache.ambari.server.hooks.users.UserHookParams: java.lang.String param()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r42 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.codehaus.jackson.map.ObjectMapper objectMapper>
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r42 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.codehaus.jackson.map.ObjectMapper objectMapper> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r43 = virtualinvoke r1.<org.apache.ambari.server.hooks.users.PostUserCreationHookContext: java.util.Map getUserGroups()>()
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r43 = virtualinvoke r1.<org.apache.ambari.server.hooks.users.PostUserCreationHookContext: java.util.Map getUserGroups()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r44 = virtualinvoke $r42.<org.codehaus.jackson.map.ObjectMapper: java.lang.String writeValueAsString(java.lang.Object)>($r43)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : $r44 = virtualinvoke $r42.<org.codehaus.jackson.map.ObjectMapper: java.lang.String writeValueAsString(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r44)
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r44) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : return $r4
org.apache.ambari.server.hooks.users.UserHookService.prepareCommandParams : return $r4 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r31 = class "Lorg/apache/ambari/server/serveraction/users/PostUserCreationHookServerAction;"
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r31 = class "Lorg/apache/ambari/server/serveraction/users/PostUserCreationHookServerAction;" >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r33 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r33 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r34 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand EXECUTE>
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r34 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand EXECUTE> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r35 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getClusterName()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r35 = virtualinvoke r2.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void addServerActionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,java.lang.String,org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent,java.util.Map,java.lang.String,java.util.Map,java.lang.Integer,boolean,boolean)>($r32, "ambari", $r33, $r34, $r35, $r30, r7, r4, null, null, 0, 0)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void addServerActionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,java.lang.String,org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent,java.util.Map,java.lang.String,java.util.Map,java.lang.Integer,boolean,boolean)>($r32, "ambari", $r33, $r34, $r35, $r30, r7, r4, null, null, 0, 0) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void setClusterHostInfo(java.lang.String)>("{}")
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void setClusterHostInfo(java.lang.String)>("{}") >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.setClusterHostInfo : r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.String clusterHostInfo> = r1
org.apache.ambari.server.controller.internal.RequestStageContainer.setClusterHostInfo : r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.String clusterHostInfo> = r1 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r36 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r5)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : $r36 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void addStages(java.util.List)>($r36)
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void addStages(java.util.List)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.addStages : if r1 == null
org.apache.ambari.server.controller.internal.RequestStageContainer.addStages : if r1 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.addStages : $r2 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages>
org.apache.ambari.server.controller.internal.RequestStageContainer.addStages : $r2 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.addStages : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1)
org.apache.ambari.server.controller.internal.RequestStageContainer.addStages : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>()
org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : virtualinvoke $r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r2 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages>
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r2 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if $z0 != 0
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r3 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.ExecuteActionRequest actionRequest>
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r3 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.ExecuteActionRequest actionRequest> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if null != $r3
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if null != $r3 >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r18 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.actionmanager.RequestFactory requestFactory>
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r18 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.actionmanager.RequestFactory requestFactory> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r17 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages>
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r17 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.util.List stages> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r16 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.String clusterHostInfo>
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r16 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.String clusterHostInfo> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r19 = interfaceinvoke $r18.<org.apache.ambari.server.actionmanager.RequestFactory: org.apache.ambari.server.actionmanager.Request createNewFromStages(java.util.Collection,java.lang.String)>($r17, $r16)
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r19 = interfaceinvoke $r18.<org.apache.ambari.server.actionmanager.RequestFactory: org.apache.ambari.server.actionmanager.Request createNewFromStages(java.util.Collection,java.lang.String)>($r17, $r16) >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : goto [?= r1 = $r19]
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : goto [?= r1 = $r19] >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : r1 = $r19
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : r1 = $r19 >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r8 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.String requestContext>
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : $r8 = r0.<org.apache.ambari.server.controller.internal.RequestStageContainer: java.lang.String requestContext> >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if null == $r8
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if null == $r8 >>>>>>>> org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if r1 == null
org.apache.ambari.server.controller.internal.RequestStageContainer.persist : if r1 == null >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.onUserCreatedEvent : goto [?= return]
