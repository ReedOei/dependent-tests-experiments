org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createClusterAdministrator(java.lang.String,java.lang.Long)>("clusterAdmin", $r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createClusterAdministrator(java.lang.String,java.lang.Long)>("clusterAdmin", $r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createClusterAdministratorGrantedAuthority(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createClusterAdministratorGrantedAuthority(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createClusterAdministratorPrivilegeEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createClusterAdministratorPrivilegeEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createClusterAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createClusterAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38]
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r34
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r34 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r35
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r35 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r36
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r36 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r37
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r37 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r38
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r38 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r39
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r39 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r40
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r40 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r41
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r41 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r42
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r42 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r43
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r43 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r44
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r44 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r45
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r45 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r47 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r46, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r47 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r46, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r47)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r47) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/springframework/security/core/context/SecurityContext;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/springframework/security/core/context/SecurityContext;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r3 = (org.springframework.security.core.context.SecurityContext) $r16
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r3 = (org.springframework.security.core.context.SecurityContext) $r16 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/servlet/FilterConfig;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/servlet/FilterConfig;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r4 = (javax.servlet.FilterConfig) $r17
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r4 = (javax.servlet.FilterConfig) $r17 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r5 = (org.apache.ambari.server.configuration.Configuration) $r18
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r5 = (org.apache.ambari.server.configuration.Configuration) $r18 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r19 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultApiAuthenticatedUser()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r19 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultApiAuthenticatedUser()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r6 = (org.apache.ambari.server.audit.AuditLogger) $r23
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r6 = (org.apache.ambari.server.audit.AuditLogger) $r23 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z1 = interfaceinvoke r6.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z1 = interfaceinvoke r6.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/AmbariAuthorizationFilter;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/AmbariAuthorizationFilter;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r30 = interfaceinvoke $r29.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getSecurityContext")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r30 = interfaceinvoke $r29.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getSecurityContext") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r31 = interfaceinvoke $r30.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getViewRegistry")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r31 = interfaceinvoke $r30.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getViewRegistry") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32 = newarray (java.lang.Object)[5]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/AmbariEntryPoint;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/AmbariEntryPoint;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[0] = $r33
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[0] = $r33 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[1] = r5
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[1] = r5 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/Users;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/Users;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[2] = $r34
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[2] = $r34 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[3] = r6
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[3] = r6 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/PermissionHelper;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/PermissionHelper;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[4] = $r35
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32[4] = $r35 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r36 = interfaceinvoke $r31.<org.easymock.IMockBuilder: org.easymock.IMockBuilder withConstructor(java.lang.Object[])>($r32)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r36 = interfaceinvoke $r31.<org.easymock.IMockBuilder: org.easymock.IMockBuilder withConstructor(java.lang.Object[])>($r32) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r37 = interfaceinvoke $r36.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r37 = interfaceinvoke $r36.<org.easymock.IMockBuilder: java.lang.Object createMock()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r7 = (org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter) $r37
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r7 = (org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter) $r37 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewRegistry;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewRegistry;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r8 = (org.apache.ambari.server.view.ViewRegistry) $r38
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r8 = (org.apache.ambari.server.view.ViewRegistry) $r38 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r39 = interfaceinvoke r4.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("realm")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r39 = interfaceinvoke r4.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("realm") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AuthFilter")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AuthFilter") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r43 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r43 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r45 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r45 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r47 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.apache.ambari.server.view.ViewRegistry getViewRegistry()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r47 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.apache.ambari.server.view.ViewRegistry getViewRegistry()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r49 = interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r49 = interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r51 = interfaceinvoke r3.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r51 = interfaceinvoke r3.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("DeniedView")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("DeniedView") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r56 = (java.lang.String) $r55
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r56 = (java.lang.String) $r55 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r57 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r57 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r58 = (java.lang.String) $r57
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r58 = (java.lang.String) $r57 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r59 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r59 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r60 = (java.lang.String) $r59
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r60 = (java.lang.String) $r59 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z2 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z2 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z3 = virtualinvoke r8.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r56, $r58, $r60, $z2)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z3 = virtualinvoke r8.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r56, $r58, $r60, $z2) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r61 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r61 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r61)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r63 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r63 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r64 = interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r63)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r64 = interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66 = newarray (java.lang.Object)[6]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66 = newarray (java.lang.Object)[6] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[0] = r4
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[0] = r4 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[1] = r7
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[1] = r7 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[2] = r3
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[2] = r3 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[3] = r8
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[3] = r8 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[4] = r5
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[4] = r5 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[5] = r6
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r66[5] = r6 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r66)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r66) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67 = interfaceinvoke r2.<com.google.common.collect.Table: java.util.Set cellSet()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67 = interfaceinvoke r2.<com.google.common.collect.Table: java.util.Set cellSet()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r9 = interfaceinvoke $r67.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r9 = interfaceinvoke $r67.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z4 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r68 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r68 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r10 = (com.google.common.collect.Table$Cell) $r68
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r10 = (com.google.common.collect.Table$Cell) $r68 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljavax/servlet/FilterChain;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljavax/servlet/FilterChain;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r11 = (javax.servlet.FilterChain) $r69
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r11 = (javax.servlet.FilterChain) $r69 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/servlet/http/HttpServletRequest;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/servlet/http/HttpServletRequest;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r12 = (javax.servlet.http.HttpServletRequest) $r70
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r12 = (javax.servlet.http.HttpServletRequest) $r70 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/servlet/http/HttpServletResponse;")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/servlet/http/HttpServletResponse;") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r13 = (javax.servlet.http.HttpServletResponse) $r71
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r13 = (javax.servlet.http.HttpServletResponse) $r71 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r72 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r72 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r14 = (java.lang.String) $r72
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r14 = (java.lang.String) $r72 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r15 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\?")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r15 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\?") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r73 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r73 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r75 = r15[0]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r75 = r15[0] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r78 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r78 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $i0 = lengthof r15
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $i0 = lengthof r15 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $i0 != 2
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $i0 != 2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r130 = null
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r130 = null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r130)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r130) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r82 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r82 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r84 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r84 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r85 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r84)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r85 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r84) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if z0 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r87 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r87 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r88 = (java.lang.Boolean) $r87
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r88 = (java.lang.Boolean) $r87 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z5 = virtualinvoke $r88.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z5 = virtualinvoke $r88.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z5 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r92 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r92 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r93 = (javax.servlet.ServletRequest) $r92
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r93 = (javax.servlet.ServletRequest) $r92 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r94 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r94 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r95 = (javax.servlet.ServletResponse) $r94
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r95 = (javax.servlet.ServletResponse) $r94 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke r11.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r93, $r95)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke r11.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r93, $r95) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89 = newarray (java.lang.Object)[3]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89[0] = r12
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89[0] = r12 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89[1] = r13
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89[1] = r13 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89[2] = r11
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r89[2] = r11 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r89)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r89) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>(r12, r13, r11)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>(r12, r13, r11) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r4 = (javax.servlet.http.HttpServletRequest) r1
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r4 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r5 = (javax.servlet.http.HttpServletResponse) r2
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r5 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r7 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r7 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r94 = interfaceinvoke r7.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r94 = interfaceinvoke r7.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if r94 == null
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if r94 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z24 = r94 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z24 = r94 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z24 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z24 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z3 = r94 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z3 = r94 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z3 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z3 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z4 = interfaceinvoke r94.<org.springframework.security.core.Authentication: boolean isAuthenticated()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z4 = interfaceinvoke r94.<org.springframework.security.core.Authentication: boolean isAuthenticated()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.isAuthenticated : return 1
org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.isAuthenticated : return 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z4 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z5 = specialinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: boolean authorizationPerformedInternally(java.lang.String)>(r6)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z5 = specialinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: boolean authorizationPerformedInternally(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/users.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/users.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z0 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z1 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/requests.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z1 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/requests.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z1 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/groups.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/groups.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z2 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z3 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/credentials.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z3 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/credentials.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z3 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z3 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z4 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z4 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z4 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z5 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/requests.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z5 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/requests.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z5 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z6 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/services.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z6 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/services.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z6 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z7 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/alert.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z7 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/alert.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z7 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z8 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/(\\w+/?)?")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z8 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/(\\w+/?)?") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z8 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 1
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : goto [?= return $z23]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : goto [?= return $z23] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : return $z23
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : return $z23 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z5 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r107 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r107 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3]
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $r107 == null
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $r107 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $r90 = newarray (java.lang.Object)[1]]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $r90 = newarray (java.lang.Object)[1]] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r90 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r90 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r90[0] = r11
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r90[0] = r11 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r90)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r90) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= (branch)]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z9 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/stacks/.*?/versions/.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z9 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/stacks/.*?/versions/.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z9 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z9 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z10 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/views.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z10 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/views.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z10 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z10 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z11 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/views/([^/]+)/([^/]+)/([^/]+)(.*)")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z11 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/views/([^/]+)/([^/]+)/([^/]+)(.*)") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z11 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z11 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z12 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/widget_layouts.*?")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z12 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/widget_layouts.*?") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z12 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z12 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z13 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/hosts.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z13 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/hosts.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z13 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z13 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z14 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/configurations.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z14 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/configurations.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z14 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z14 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z15 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/components.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z15 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/components.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z15 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z15 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z16 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/host_components.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z16 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/host_components.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z16 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z16 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z17 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/config_groups.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z17 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/config_groups.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z17 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z17 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z18 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/hosts.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z18 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/hosts.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z18 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z18 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z19 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/alert_targets.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z19 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/alert_targets.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z19 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z19 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z20 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z20 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z20 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z20 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z21 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/persist.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z21 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/persist.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z21 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z21 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z22 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/upgrades.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z22 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/upgrades.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z22 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z22 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z25 = 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z25 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z6 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/bootstrap.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z6 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/bootstrap.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z6 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z6 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r54 = interfaceinvoke r94.<org.springframework.security.core.Authentication: java.util.Collection getAuthorities()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r54 = interfaceinvoke r94.<org.springframework.security.core.Authentication: java.util.Collection getAuthorities()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : $r1 = r0.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: java.util.Collection authorities>
org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : $r1 = r0.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: java.util.Collection authorities> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r103 = interfaceinvoke $r54.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r103 = interfaceinvoke $r54.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z7 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z7 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z7 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z7 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r78 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r78 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r104 = (org.springframework.security.core.GrantedAuthority) $r78
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r104 = (org.springframework.security.core.GrantedAuthority) $r78 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z11 = r104 instanceof org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z11 = r104 instanceof org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z11 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z11 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r105 = (org.apache.ambari.server.security.authorization.AmbariGrantedAuthority) r104
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r105 = (org.apache.ambari.server.security.authorization.AmbariGrantedAuthority) r104 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r8 = virtualinvoke r105.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity getPrivilegeEntity()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r8 = virtualinvoke r105.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity getPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity>
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : return $r1
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r79 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r79 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r9 = virtualinvoke $r79.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer getId()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r9 = virtualinvoke $r79.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer getId()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PermissionEntity.getId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getId : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity.getId : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z12 = virtualinvoke r9.<java.lang.Integer: boolean equals(java.lang.Object)>($r80)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z12 = virtualinvoke r9.<java.lang.Integer: boolean equals(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z12 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z12 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r81 = "GET"
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r81 = "GET" >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r82 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r82 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z13 = virtualinvoke $r81.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r82)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z13 = virtualinvoke $r81.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r82) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z13 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z13 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z22 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/credentials/ambari\\..*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z22 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/credentials/ambari\\..*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z22 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z22 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z14 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z14 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z14 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z14 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r83 = <org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: java.util.regex.Pattern STACK_ADVISOR_REGEX>
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r83 = <org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: java.util.regex.Pattern STACK_ADVISOR_REGEX> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r84 = virtualinvoke $r83.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r84 = virtualinvoke $r83.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z15 = virtualinvoke $r84.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z15 = virtualinvoke $r84.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z15 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z15 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z16 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/views.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z16 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/views.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z16 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z16 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : goto [?= $z7 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : goto [?= $z7 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if z25 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if z25 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r77 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r77 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z9 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("GET")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z9 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("GET") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z9 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z9 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z27 = 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z27 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z26 = $z27
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z26 = $z27 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if z26 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if z26 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r55 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r55 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z8 = interfaceinvoke $r55.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z8 = interfaceinvoke $r55.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z8 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z8 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r56 = new java.lang.StringBuilder
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r56 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : specialinvoke $r56.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic realm=\"")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic realm=\"") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r58 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: java.lang.String realm>
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r58 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: java.lang.String realm> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("WWW-Authenticate", $r61)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("WWW-Authenticate", $r61) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(403, "You do not have permissions to access this resource.")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(403, "You do not have permissions to access this resource.") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void flushBuffer()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void flushBuffer()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z10 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/ldap_sync_events.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z10 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/ldap_sync_events.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z10 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z10 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z27 = 1
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z27 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : goto [?= z26 = $z27]
