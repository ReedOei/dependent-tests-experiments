org.apache.ambari.server.upgrade.UpgradeHelperTestModule.configure : specialinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void configure()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r72 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r72 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r5 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r4.<java.util.Properties: boolean containsKey(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r58 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r57.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r58, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r7.<java.util.Properties: boolean containsKey(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r52.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r53.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r54, r72) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r10.<java.util.Properties: boolean containsKey(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r48.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r49.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r73) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r12 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r14 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r13.<java.util.Properties: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r44 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = virtualinvoke $r44.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r45.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r46, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r16.<java.util.Properties: boolean containsKey(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r19.<java.util.Properties: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r37.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r38, "src/test/resources/") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r21.<org.apache.ambari.server.ldap.LdapModule: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void install(com.google.inject.Module)>($r21) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapFacade;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConfigurationService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapAttributeDetectionService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/DefaultLdapConnectionConfigService;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;")
org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/AmbariLdapConfigurationProvider;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;")
org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15)
org.apache.ambari.server.ldap.LdapModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r14, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r15) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r18.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r20.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/UserGroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23)
org.apache.ambari.server.ldap.LdapModule.configure : r2 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class,java.lang.'annotation'.Annotation)>($r22, class "Lorg/apache/ambari/server/ldap/service/AttributeDetector;", $r23) >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r24.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupObjectClassDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r26.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupNameAttrDetector;") >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;")
org.apache.ambari.server.ldap.LdapModule.configure : interfaceinvoke $r28.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/GroupMemberAttrDetector;") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r23 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r23.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r24) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r23 = null
org.apache.ambari.server.state.stack.OsFamily.init : r23 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r14.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r14
org.apache.ambari.server.state.stack.OsFamily.init : throw $r14 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r18 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = virtualinvoke $r18.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20
org.apache.ambari.server.state.stack.OsFamily.init : $r17[0] = $r20 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17)
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r17) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r22
org.apache.ambari.server.state.stack.OsFamily.init : throw $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r15
org.apache.ambari.server.state.stack.OsFamily.init : throw $r15 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r70) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r71 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r6 = (java.lang.String) $r5
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r8 = (java.lang.String) $r7
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r10 = (java.lang.String[]) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r10 = (java.lang.String[]) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r12 = (java.lang.String[]) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r12 = (java.lang.String[]) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r13 = interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: java.util.List getIntColumnValues(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean)>($r6, $r8, $r10, $r12, $z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r13 = interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: java.util.List getIntColumnValues(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean)>($r6, $r8, $r10, $r12, $z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectGetCurrentVersionID : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r7 = (java.lang.String) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r9 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r8
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r9 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r8 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r7, $r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r7, $r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r14 = (java.lang.String) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r16 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r15
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r16 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r14, $r16)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r14, $r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r19 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r19 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r21 = (java.lang.String) $r20
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r23 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r23 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r19.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r21, $r23)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r19.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r21, $r23) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r26 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r26 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r28 = (java.lang.String) $r27
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r28 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r30 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r29
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r30 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r29 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r26.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r28, $r30)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r26.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r28, $r30) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r33 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r33 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r35 = (java.lang.String) $r34
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_scds_desired_repo_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_scds_desired_repo_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r37 = (java.lang.String) $r36
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r39 = (java.lang.String) $r38
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r39 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r41 = (java.lang.String) $r40
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r41 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r43 = (java.lang.String) $r42
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r43 = (java.lang.String) $r42 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r33.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r35, $r37, $r39, $r41, $r43, $z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r33.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r35, $r37, $r39, $r41, $r43, $z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r46 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r46 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r48 = (java.lang.String) $r47
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r48 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_scds_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_scds_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r50 = (java.lang.String) $r49
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r50 = (java.lang.String) $r49 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r46.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r48, $r50)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r46.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r48, $r50) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r53 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r53 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r54 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r54 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r55 = (java.lang.String) $r54
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r55 = (java.lang.String) $r54 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r57 = (java.lang.String) $r56
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r57 = (java.lang.String) $r56 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r53.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r55, $r57)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r53.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r55, $r57) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r60 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r60 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r61 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r61 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r62 = (java.lang.String) $r61
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r62 = (java.lang.String) $r61 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r63 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r63 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r64 = (java.lang.String) $r63
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r64 = (java.lang.String) $r63 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r60.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r62, $r64)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r60.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r62, $r64) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r65 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : $r65 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceComponentDesiredStateTable : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r5 = (java.lang.String) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r5, $r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r5, $r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r12 = (java.lang.String) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r12 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r14 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r14 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r12, $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r12, $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r19 = (java.lang.String) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r21 = (java.lang.String) $r20
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r23 = (java.lang.String) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r25 = (java.lang.String) $r24
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r27 = (java.lang.String) $r26
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r19, $r21, $r23, $r25, $r27, $z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r19, $r21, $r23, $r25, $r27, $z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r30 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r30 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r32 = (java.lang.String) $r31
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r32 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_sds_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_sds_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r34 = (java.lang.String) $r33
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r34 = (java.lang.String) $r33 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r30.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r32, $r34)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r30.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r32, $r34) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r37 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r37 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicedesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r39 = (java.lang.String) $r38
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r39 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r41 = (java.lang.String) $r40
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r41 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r37.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r39, $r41)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r37.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r39, $r41) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateServiceDesiredStateTable : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfigmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfigmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r7 = (java.lang.String) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r9 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r8
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r9 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r8 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r11 = (java.lang.String) $r10
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r13 = (java.lang.String) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r15 = (java.lang.String) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfig")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfig") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r17 = (java.lang.String) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r19 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r19 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r21 = (java.lang.String) $r20
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r23 = (java.lang.String) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r25 = (java.lang.String) $r24
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("selected")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("selected") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r27 = (java.lang.String) $r26
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("1")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("1") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r29 = (java.lang.String) $r28
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r29 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $i0 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $i0 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r30)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r30) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r33 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r33 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfigmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfigmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r35 = (java.lang.String) $r34
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r37 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r36
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r37 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r36 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r39 = (java.lang.String) $r38
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r39 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r41 = (java.lang.String) $r40
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r41 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r43 = (java.lang.String) $r42
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r43 = (java.lang.String) $r42 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfig")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfig") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r45 = (java.lang.String) $r44
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r45 = (java.lang.String) $r44 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r47 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r46
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r47 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r46 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r49 = (java.lang.String) $r48
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r49 = (java.lang.String) $r48 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("type_name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r51 = (java.lang.String) $r50
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r51 = (java.lang.String) $r50 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("version_tag") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r53 = (java.lang.String) $r52
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r53 = (java.lang.String) $r52 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r54 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("selected")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r54 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("selected") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r55 = (java.lang.String) $r54
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r55 = (java.lang.String) $r54 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("1")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("1") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r57 = (java.lang.String) $r56
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r57 = (java.lang.String) $r56 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $i1 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $i1 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r33.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r58)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r33.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r58) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddSelectedCollumsToClusterconfigTable : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r3 = (java.lang.String) $r2
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r3 = (java.lang.String) $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_hcds_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_hcds_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r5 = (java.lang.String) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r3, $r5)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r3, $r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r10 = (java.lang.String) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r12 = (java.lang.String) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r12 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r10, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r10, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentDesiredStateTable : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r3 = (java.lang.String) $r2
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r3 = (java.lang.String) $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_hcs_current_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_hcs_current_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r5 = (java.lang.String) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r3, $r5)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r3, $r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentstate")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r10 = (java.lang.String) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("current_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("current_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r12 = (java.lang.String) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r12 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r10, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r10, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateHostComponentStateTable : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusters")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusters") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r6 = (java.lang.String) $r5
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r8 = (java.lang.String) $r7
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(null)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void clearTableColumn(java.lang.String,java.lang.String,java.lang.Object)>($r6, $r8, $r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void clearTableColumn(java.lang.String,java.lang.String,java.lang.Object)>($r6, $r8, $r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r14 = (java.lang.String) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>($r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r19 = (java.lang.String) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_from_repo_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_from_repo_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r21 = (java.lang.String) $r20
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r19, $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r19, $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r24 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r24 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r26 = (java.lang.String) $r25
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r26 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_to_repo_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_to_repo_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r28 = (java.lang.String) $r27
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r28 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r24.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r26, $r28)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r24.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>($r26, $r28) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r31 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r31 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r33 = (java.lang.String) $r32
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("from_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("from_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r35 = (java.lang.String) $r34
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r31.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r33, $r35)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r31.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r33, $r35) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r38 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r38 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r40 = (java.lang.String) $r39
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r40 = (java.lang.String) $r39 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("to_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("to_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r42 = (java.lang.String) $r41
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r38.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r40, $r42)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r38.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>($r40, $r42) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r45 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r45 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r47 = (java.lang.String) $r46
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r47 = (java.lang.String) $r46 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r49 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r48
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r49 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r48 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r45.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r47, $r49)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r45.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r47, $r49) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r52 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r52 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r54 = (java.lang.String) $r53
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r54 = (java.lang.String) $r53 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r56 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r55
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r56 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r55 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r52.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r54, $r56)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r52.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r54, $r56) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r59 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r59 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r61 = (java.lang.String) $r60
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r61 = (java.lang.String) $r60 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r62 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r62 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r63 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r62
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r63 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r62 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r59.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r61, $r63)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r59.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r61, $r63) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r64 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r64 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r66 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r66 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r68 = (java.lang.String) $r67
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r68 = (java.lang.String) $r67 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r70 = (java.lang.String) $r69
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r70 = (java.lang.String) $r69 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r72 = (java.lang.String) $r71
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r72 = (java.lang.String) $r71 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r73 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r73 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r74 = (java.lang.String) $r73
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r74 = (java.lang.String) $r73 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r75 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r75 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r76 = (java.lang.String) $r75
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r76 = (java.lang.String) $r75 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r66.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r68, $r70, $r72, $r74, $r76, $z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r66.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r68, $r70, $r72, $r74, $r76, $z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r77 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : $r77 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateUpgradeTable : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r4 = (java.lang.String) $r3
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r7 = (java.util.List) $r5
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r7 = (java.util.List) $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r6 = newarray (java.lang.String)[0]
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r6 = newarray (java.lang.String)[0] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r4, $r7, $r6)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r4, $r7, $r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r12 = (java.lang.String) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r12 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("PK_upgrade_hist")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("PK_upgrade_hist") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r15 = (java.lang.String) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r15 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r14 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r14 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r17 = (java.lang.String) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r14[0] = $r17
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r14[0] = $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>($r12, $r15, $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>($r12, $r15, $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r20 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r20 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r22 = (java.lang.String) $r21
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r22 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_hist_upgrade_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_hist_upgrade_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r24 = (java.lang.String) $r23
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r24 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r26 = (java.lang.String) $r25
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r26 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r28 = (java.lang.String) $r27
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r28 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r30 = (java.lang.String) $r29
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r30 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $z0 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r20.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r22, $r24, $r26, $r28, $r30, $z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r20.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r22, $r24, $r26, $r28, $r30, $z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r33 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r33 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r35 = (java.lang.String) $r34
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_hist_from_repo")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_hist_from_repo") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r37 = (java.lang.String) $r36
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("from_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("from_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r39 = (java.lang.String) $r38
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r39 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r41 = (java.lang.String) $r40
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r41 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r43 = (java.lang.String) $r42
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r43 = (java.lang.String) $r42 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $z1 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $z1 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r33.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r35, $r37, $r39, $r41, $r43, $z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r33.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r35, $r37, $r39, $r41, $r43, $z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r46 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r46 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r48 = (java.lang.String) $r47
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r48 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_hist_target_repo")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("FK_upgrade_hist_target_repo") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r50 = (java.lang.String) $r49
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r50 = (java.lang.String) $r49 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("target_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("target_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r52 = (java.lang.String) $r51
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r52 = (java.lang.String) $r51 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r54 = (java.lang.String) $r53
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r54 = (java.lang.String) $r53 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r56 = (java.lang.String) $r55
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r56 = (java.lang.String) $r55 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $z2 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $z2 = staticinvoke <org.easymock.EasyMock: boolean eq(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r46.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r48, $r50, $r52, $r54, $r56, $z2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r46.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r48, $r50, $r52, $r54, $r56, $z2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r59 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r59 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r61 = (java.lang.String) $r60
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r61 = (java.lang.String) $r60 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r62 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("UQ_upgrade_hist")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r62 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("UQ_upgrade_hist") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r64 = (java.lang.String) $r62
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r64 = (java.lang.String) $r62 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63 = newarray (java.lang.String)[3]
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r65 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r65 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("upgrade_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r66 = (java.lang.String) $r65
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r66 = (java.lang.String) $r65 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63[0] = $r66
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63[0] = $r66 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("component_name")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("component_name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r68 = (java.lang.String) $r67
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r68 = (java.lang.String) $r67 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63[1] = $r68
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63[1] = $r68 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("service_name")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("service_name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r70 = (java.lang.String) $r69
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r70 = (java.lang.String) $r69 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63[2] = $r70
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r63[2] = $r70 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r59.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>($r61, $r64, $r63)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r59.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>($r61, $r64, $r63) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectCreateUpgradeHistoryTable : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfigmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfigmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r3 = (java.lang.String) $r2
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r3 = (java.lang.String) $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("cluster_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r8 = (java.lang.String) $r7
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>($r8)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponent_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("servicecomponent_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r13 = (java.lang.String) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectDropStaleTables : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r5 = (java.lang.String) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r5, $r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r5, $r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("repo_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r10 = (java.lang.String) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r12 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r12 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r10, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r10, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectUpdateRepositoryVersionTableTable : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfig")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("clusterconfig") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r4 = (java.lang.String) $r3
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("service_deleted")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("service_deleted") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r6 = (java.lang.String) $r5
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r7
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void renameColumn(java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r4, $r6, $r8)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void renameColumn(java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r4, $r6, $r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRenameServiceDeletedColumn : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewurl")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewurl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r3 = (java.lang.String) $r2
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r3 = (java.lang.String) $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewurl_pkey")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewurl_pkey") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r5 = (java.lang.String) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropPKConstraint(java.lang.String,java.lang.String)>($r3, $r5)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropPKConstraint(java.lang.String,java.lang.String)>($r3, $r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewurl")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewurl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r10 = (java.lang.String) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("PK_viewurl")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("PK_viewurl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r13 = (java.lang.String) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r13 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r12 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r12 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("url_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("url_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r15 = (java.lang.String) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r12[0] = $r15
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r12[0] = $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>($r10, $r13, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>($r10, $r13, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectAddViewUrlPKConstraint : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("users")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("users") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r3 = (java.lang.String) $r2
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r3 = (java.lang.String) $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("users_ldap_user_key")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("users_ldap_user_key") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r5 = (java.lang.String) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropUniqueConstraint(java.lang.String,java.lang.String)>($r3, $r5)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.expectRemoveStaleConstraints : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropUniqueConstraint(java.lang.String,java.lang.String)>($r3, $r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r1 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r2 = new org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r2 = new org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>(r0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>(r0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r1[0] = $r2
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily osFamily>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.state.stack.OsFamily osFamily> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: javax.persistence.EntityManager entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11: org.apache.ambari.server.upgrade.UpgradeCatalog260Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog260Test)>($r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.access$300 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$11.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : return $r3
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.getInjector : return $r3 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getTargetVersion : return "2.6.0"
org.apache.ambari.server.upgrade.UpgradeCatalog260.getTargetVersion : return "2.6.0" >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : r1 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: java.lang.Integer getCurrentVersionID()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : r1 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: java.lang.Integer getCurrentVersionID()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r3 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r3 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r3[0] = "state"
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r3[0] = "state" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r4 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r4 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r4[0] = "CURRENT"
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r4[0] = "CURRENT" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : r1 = interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: java.util.List getIntColumnValues(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean)>("cluster_version", "repo_version_id", $r3, $r4, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : r1 = interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: java.util.List getIntColumnValues(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean)>("cluster_version", "repo_version_id", $r3, $r4, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : if $i0 == 1
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : if $i0 == 1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r7 = (java.lang.Integer) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : $r7 = (java.lang.Integer) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : return $r7
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCurrentVersionID : return $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void dropBrokenFK()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void dropBrokenFK()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_from_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_from_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_to_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_to_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "FK_servicecomponentdesiredstate_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "FK_servicecomponentdesiredstate_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicedesiredstate", "FK_servicedesiredstate_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicedesiredstate", "FK_servicedesiredstate_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "FK_hostcomponentdesiredstate_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "FK_hostcomponentdesiredstate_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentstate", "FK_hostcomponentstate_current_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropBrokenFK : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentstate", "FK_hostcomponentstate_current_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateServiceComponentDesiredStateTable(java.lang.Integer)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateServiceComponentDesiredStateTable(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r2 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r2 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, r1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, r1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r6 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r6 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_state", class "Ljava/lang/String;", $r8, "CURRENT", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_state", class "Ljava/lang/String;", $r8, "CURRENT", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r7.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r6)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r7.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_state", class "Ljava/lang/String;", $r11, "NOT_REQUIRED", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_state", class "Ljava/lang/String;", $r11, "NOT_REQUIRED", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicecomponentdesiredstate", $r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicecomponentdesiredstate", "FK_scds_desired_repo_id", "desired_repo_version_id", "repo_version", "repo_version_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicecomponentdesiredstate", "FK_scds_desired_repo_id", "desired_repo_version_id", "repo_version", "repo_version_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "FK_scds_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "FK_scds_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "desired_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceComponentDesiredStateTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("servicecomponentdesiredstate", "desired_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateServiceDesiredStateTable(java.lang.Integer)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateServiceDesiredStateTable(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r2 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r2 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : specialinvoke $r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, r1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : specialinvoke $r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, r1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("desired_repo_version_id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicedesiredstate", "FK_repo_version_id", "desired_repo_version_id", "repo_version", "repo_version_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicedesiredstate", "FK_repo_version_id", "desired_repo_version_id", "repo_version", "repo_version_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r7.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicedesiredstate", "FK_sds_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r7.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("servicedesiredstate", "FK_sds_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("servicedesiredstate", "desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateServiceDesiredStateTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("servicedesiredstate", "desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addSelectedCollumsToClusterconfigTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addSelectedCollumsToClusterconfigTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("selected", class "Ljava/lang/Short;", null, $r6, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("selected", class "Ljava/lang/Short;", null, $r6, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("selected", class "Ljava/lang/Integer;", null, $r8, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("selected", class "Ljava/lang/Integer;", null, $r8, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("selected_timestamp", class "Ljava/lang/Long;", null, $r10, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("selected_timestamp", class "Ljava/lang/Long;", null, $r10, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r11 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r11 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r11.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("create_timestamp", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : specialinvoke $r11.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("create_timestamp", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>("clusterconfigmapping", $r7, "cluster_id", "type_name", "version_tag", "clusterconfig", $r5, "cluster_id", "type_name", "version_tag", "selected", "1", $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>("clusterconfigmapping", $r7, "cluster_id", "type_name", "version_tag", "clusterconfig", $r5, "cluster_id", "type_name", "version_tag", "selected", "1", $r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>("clusterconfigmapping", $r11, "cluster_id", "type_name", "version_tag", "clusterconfig", $r9, "cluster_id", "type_name", "version_tag", "selected", "1", $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addSelectedCollumsToClusterconfigTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void copyColumnToAnotherTable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>("clusterconfigmapping", $r11, "cluster_id", "type_name", "version_tag", "clusterconfig", $r9, "cluster_id", "type_name", "version_tag", "selected", "1", $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateHostComponentDesiredStateTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateHostComponentDesiredStateTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "FK_hcds_desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "FK_hcds_desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "desired_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentDesiredStateTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "desired_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateHostComponentStateTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateHostComponentStateTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentstate", "FK_hcs_current_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("hostcomponentstate", "FK_hcs_current_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("hostcomponentstate", "current_stack_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateHostComponentStateTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("hostcomponentstate", "current_stack_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void dropStaleTables()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void dropStaleTables()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>("clusterconfigmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>("clusterconfigmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>("cluster_version")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>("cluster_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>("servicecomponent_history")
org.apache.ambari.server.upgrade.UpgradeCatalog260.dropStaleTables : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void dropTable(java.lang.String)>("servicecomponent_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateUpgradeTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateUpgradeTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void clearTableColumn(java.lang.String,java.lang.String,java.lang.Object)>("clusters", "upgrade_id", null)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void clearTableColumn(java.lang.String,java.lang.String,java.lang.Object)>("clusters", "upgrade_id", null) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>("upgrade_item")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>("upgrade_item") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>("upgrade_group")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>("upgrade_group") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>("upgrade")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void clearTable(java.lang.String)>("upgrade") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_from_repo_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_from_repo_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_to_repo_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("upgrade", "FK_upgrade_to_repo_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r7.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("upgrade", "from_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r7.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("upgrade", "from_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("upgrade", "to_repo_version_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void dropColumn(java.lang.String,java.lang.String)>("upgrade", "to_repo_version_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_version_id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_version_id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("upgrade", $r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("upgrade", $r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r11 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r11 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : specialinvoke $r11.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("orchestration", class "Ljava/lang/String;", $r13, "STANDARD", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : specialinvoke $r11.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("orchestration", class "Ljava/lang/String;", $r13, "STANDARD", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("upgrade", $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("upgrade", $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r14 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r14 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : specialinvoke $r14.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("revert_allowed", class "Ljava/lang/Short;", null, $r16, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : specialinvoke $r14.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("revert_allowed", class "Ljava/lang/Short;", null, $r16, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("upgrade", $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("upgrade", $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade", "FK_upgrade_repo_version_id", "repo_version_id", "repo_version", "repo_version_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateUpgradeTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade", "FK_upgrade_repo_version_id", "repo_version_id", "repo_version", "repo_version_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void createUpgradeHistoryTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void createUpgradeHistoryTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r2 = new java.util.ArrayList
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r3 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r3 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("upgrade_id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("upgrade_id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("service_name", class "Ljava/lang/String;", $r6, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("service_name", class "Ljava/lang/String;", $r6, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("component_name", class "Ljava/lang/String;", $r8, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("component_name", class "Ljava/lang/String;", $r8, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("from_repo_version_id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("from_repo_version_id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r10 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r10 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r10.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("target_repo_version_id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : specialinvoke $r10.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("target_repo_version_id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r11 = newarray (java.lang.String)[0]
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r11 = newarray (java.lang.String)[0] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>("upgrade_history", $r2, $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r12.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>("upgrade_history", $r2, $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r13 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r13 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r13[0] = "id"
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r13[0] = "id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("upgrade_history", "PK_upgrade_hist", $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("upgrade_history", "PK_upgrade_hist", $r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade_history", "FK_upgrade_hist_upgrade_id", "upgrade_id", "upgrade", "upgrade_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade_history", "FK_upgrade_hist_upgrade_id", "upgrade_id", "upgrade", "upgrade_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade_history", "FK_upgrade_hist_from_repo", "from_repo_version_id", "repo_version", "repo_version_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade_history", "FK_upgrade_hist_from_repo", "from_repo_version_id", "repo_version", "repo_version_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade_history", "FK_upgrade_hist_target_repo", "target_repo_version_id", "repo_version", "repo_version_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("upgrade_history", "FK_upgrade_hist_target_repo", "target_repo_version_id", "repo_version", "repo_version_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r19 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r19 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18 = newarray (java.lang.String)[3]
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18[0] = "upgrade_id"
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18[0] = "upgrade_id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18[1] = "component_name"
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18[1] = "component_name" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18[2] = "service_name"
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r18[2] = "service_name" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r19.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("upgrade_history", "UQ_upgrade_hist", $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : interfaceinvoke $r19.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("upgrade_history", "UQ_upgrade_hist", $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addSequence(java.lang.String,java.lang.Long,boolean)>("upgrade_history_id_seq", $r20, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.createUpgradeHistoryTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addSequence(java.lang.String,java.lang.Long,boolean)>("upgrade_history_id_seq", $r20, 0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r15 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r15 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r16 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r16 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r4 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r4 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r15 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r15 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r15 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r15 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r7 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r7 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6[0] = $r7
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6[0] = $r7 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6[1] = r1
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) from %s where sequence_name=\'%s\'", $r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) from %s where sequence_name=\'%s\'", $r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r16 = interfaceinvoke r15.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r8)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r16 = interfaceinvoke r15.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r16 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r16 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $z1 = interfaceinvoke r16.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $z1 = interfaceinvoke r16.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r9 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r9 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Sequence {} already exists, skipping", r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Sequence {} already exists, skipping", r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r16.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r16.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r15.<java.sql.Statement: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r15.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= return]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= return] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateRepositoryVersionTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void updateRepositoryVersionTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r1 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r1 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : specialinvoke $r1.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("hidden", class "Ljava/lang/Short;", null, $r3, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : specialinvoke $r1.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("hidden", class "Ljava/lang/Short;", null, $r3, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r1)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("resolved", class "Ljava/lang/Short;", null, $r6, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("resolved", class "Ljava/lang/Short;", null, $r6, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateRepositoryVersionTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void renameServiceDeletedColumn()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void renameServiceDeletedColumn()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $z0 = interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: boolean tableHasColumn(java.lang.String,java.lang.String)>("clusterconfig", "service_deleted")
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $z0 = interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: boolean tableHasColumn(java.lang.String,java.lang.String)>("clusterconfig", "service_deleted") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r2 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r2 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : specialinvoke $r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("unmapped", class "Ljava/lang/Short;", null, $r4, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : specialinvoke $r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("unmapped", class "Ljava/lang/Short;", null, $r4, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void renameColumn(java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("clusterconfig", "service_deleted", $r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260.renameServiceDeletedColumn : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void renameColumn(java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("clusterconfig", "service_deleted", $r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addLegacyColumn()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addLegacyColumn()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $z0 = interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: boolean tableHasColumn(java.lang.String,java.lang.String)>("repo_version", "legacy")
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $z0 = interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: boolean tableHasColumn(java.lang.String,java.lang.String)>("repo_version", "legacy") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $z1 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $z1 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : if $z1 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : if $z1 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("legacy", class "Ljava/lang/Short;", null, $r5, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("legacy", class "Ljava/lang/Short;", null, $r5, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : virtualinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void setDefaultValue(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : virtualinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void setDefaultValue(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.setDefaultValue : r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object defaultValue> = r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.setDefaultValue : r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object defaultValue> = r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addLegacyColumn : interfaceinvoke $r8.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("repo_version", $r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void expandUpgradeItemItemTextColumn()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void expandUpgradeItemItemTextColumn()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.expandUpgradeItemItemTextColumn : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.expandUpgradeItemItemTextColumn : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.expandUpgradeItemItemTextColumn : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void changeColumnType(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class)>("upgrade_item", "item_text", class "Ljava/lang/String;", class "[C")
org.apache.ambari.server.upgrade.UpgradeCatalog260.expandUpgradeItemItemTextColumn : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void changeColumnType(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class)>("upgrade_item", "item_text", class "Ljava/lang/String;", class "[C") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addViewUrlPKConstraint()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void addViewUrlPKConstraint()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("viewinstance", "FK_instance_url_id")
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropFKConstraint(java.lang.String,java.lang.String)>("viewinstance", "FK_instance_url_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropPKConstraint(java.lang.String,java.lang.String)>("viewurl", "viewurl_pkey")
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void dropPKConstraint(java.lang.String,java.lang.String)>("viewurl", "viewurl_pkey") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r3 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r3 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r3[0] = "url_id"
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r3[0] = "url_id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("viewurl", "PK_viewurl", $r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("viewurl", "PK_viewurl", $r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("viewinstance", "FK_instance_url_id", "short_url", "viewurl", "url_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog260.addViewUrlPKConstraint : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("viewinstance", "FK_instance_url_id", "short_url", "viewurl", "url_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeStaleConstraints()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: void removeStaleConstraints()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeStaleConstraints : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeStaleConstraints : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.removeStaleConstraints : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropUniqueConstraint(java.lang.String,java.lang.String)>("users", "users_ldap_user_key")
org.apache.ambari.server.upgrade.UpgradeCatalog260.removeStaleConstraints : interfaceinvoke $r1.<org.apache.ambari.server.orm.DBAccessor: void dropUniqueConstraint(java.lang.String,java.lang.String)>("users", "users_ldap_user_key") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r3 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r3 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r5 = (java.lang.Object[]) $r3
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r5 = (java.lang.Object[]) $r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r4 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r4 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r4[0] = "state"
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r4[0] = "state" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r6 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r6 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r8 = (java.lang.Object[]) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r8 = (java.lang.Object[]) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r7 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r7 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r7[0] = "CURRENT"
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $r7[0] = "CURRENT" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyGetCurrentVersionID : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r9 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r9 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r10 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r10 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String name>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object defaultValue>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object defaultValue> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r13 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r13 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class type>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class type> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z0 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z0 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.isNullable : $z0 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.isNullable : $z0 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.isNullable : return $z0
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.isNullable : return $z0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r16 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r16 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r17 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r17 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r17)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r17) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r18 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r18 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r19 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r19 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z1 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z1 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r22 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r22 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r23 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r23 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("repo_state", $r23)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("repo_state", $r23) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r24 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r24 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("CURRENT", $r24)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("CURRENT", $r24) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r25 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r25 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r25)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z2 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z2 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r29 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r29 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer length>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer length> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r30 = virtualinvoke r4.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r30 = virtualinvoke r4.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r30
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r30 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r31 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r31 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("repo_state", $r31)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("repo_state", $r31) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r32 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r32 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("NOT_REQUIRED", $r32)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("NOT_REQUIRED", $r32) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r33 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r33 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r33)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r33) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z3 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $z3 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r37 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : $r37 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r37)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceComponentDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r37) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r5 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r5 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r5
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r6 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r6 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r6)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $z0 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $z0 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r13 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r13 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("desired_repo_version_id", $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r15 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r15 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r16 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r16 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r16)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $z1 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $z1 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateServiceDesiredStateTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r9 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r9 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r10 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r10 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("selected", $r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("selected", $r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r14 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r14 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z0 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z0 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r17 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r17 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r18 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r18 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("selected", $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("selected", $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r19 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r19 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r20 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r20 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r20)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r20) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r22 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r22 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z1 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z1 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r25 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r25 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r25
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r25 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r26 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r26 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("selected_timestamp", $r26)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("selected_timestamp", $r26) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r27 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r27 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r27)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r27) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r28 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r28 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r28)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r28) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r30 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r30 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z2 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z2 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r32)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r32) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r33 = virtualinvoke r4.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r33 = virtualinvoke r4.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r33
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r33 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r34 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r34 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("create_timestamp", $r34)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("create_timestamp", $r34) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r35 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r35 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r35)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r35) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r36 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r36 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r36)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r36) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r37 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r37 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r37)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r37) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z3 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $z3 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyAddSelectedCollumsToClusterconfigTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r7 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r7 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r7
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r8 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r8 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("repo_version_id", $r8)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("repo_version_id", $r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r9 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r9 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r11 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r11 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $z0 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $z0 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r14 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r14 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("orchestration", $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("orchestration", $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r16 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r16 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r16)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r18 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r18 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r19 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r19 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("STANDARD", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("STANDARD", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $z1 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $z1 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r22 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r22 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r23 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r23 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("revert_allowed", $r23)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("revert_allowed", $r23) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r24 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r24 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r24)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r24) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r25 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r25 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r25)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r27 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r27 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $z2 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $z2 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateUpgradeTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r9 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r9 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r2 = (java.util.List) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r2 = (java.util.List) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $i0 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $i0 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $l1 = (long) $i0
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 6L)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 6L) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r10
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r11 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r11 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("id", $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("id", $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r13 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r13 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r14 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r14 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z0 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z0 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r17 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r17 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r18 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r18 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("upgrade_id", $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("upgrade_id", $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r20 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r20 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r20)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r20) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r21 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r21 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z1 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z1 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r24 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r24 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r24
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r5 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r24 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r25 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r25 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("service_name", $r25)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("service_name", $r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r26 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r26 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r26)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r26) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r28 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r28 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r29 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r29 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r29)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z2 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z2 = virtualinvoke r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r32 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r32 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r32
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r6 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r32 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r33 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r33 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("component_name", $r33)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("component_name", $r33) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r34 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r34 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r34)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r34) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r36 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r36 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r37 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r37 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r37)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r37) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z3 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z3 = virtualinvoke r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r40 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r40 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r40
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r7 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r41 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r41 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("from_repo_version_id", $r41)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("from_repo_version_id", $r41) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r42 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r42 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r42)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r42) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r43 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r43 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r43)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r43) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r44 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r44 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r44)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z4 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z4 = virtualinvoke r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r45, $r46)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r45, $r46) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r47 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(5)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r47 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r47
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r47 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r48 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r48 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("target_repo_version_id", $r48)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("target_repo_version_id", $r48) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r49 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r49 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r49)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r49) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r50 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r50 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r50)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r50) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r51 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r51 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r51)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r51) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z5 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $z5 = virtualinvoke r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r53)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyCreateUpgradeHistoryTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r53) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r5 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r5 = virtualinvoke r1.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r5
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r7 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r7 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("hidden", $r8)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("hidden", $r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $z0 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $z0 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r11 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r11 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : r4 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r13 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r13 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("resolved", $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("resolved", $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $z1 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $z1 = virtualinvoke r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test.verifyUpdateRepositoryVersionTableTable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
