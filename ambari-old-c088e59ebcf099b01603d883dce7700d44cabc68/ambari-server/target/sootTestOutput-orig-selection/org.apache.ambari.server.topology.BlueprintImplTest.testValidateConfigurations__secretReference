org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : r0 = (org.apache.ambari.server.configuration.Configuration) $r2
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : r0 = (org.apache.ambari.server.configuration.Configuration) $r2 >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean getGplLicenseAccepted()>()
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean getGplLicenseAccepted()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5)
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r8 = class "Lorg/apache/ambari/server/topology/BlueprintValidatorImpl;"
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r8 = class "Lorg/apache/ambari/server/topology/BlueprintValidatorImpl;" >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : r1 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("configuration")
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : r1 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("configuration") >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : virtualinvoke r1.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r0)
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : virtualinvoke r1.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r0) >>>>>>>> org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : return r0
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : return r0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getParentConfiguration : $r1 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getParentConfiguration : $r1 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getParentConfiguration : return $r1
org.apache.ambari.server.topology.Configuration.getParentConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getStack : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintImpl.getStack : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getStack : return $r1
org.apache.ambari.server.topology.BlueprintImpl.getStack : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.BlueprintValidator validator>
org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.BlueprintValidator validator> >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : interfaceinvoke $r1.<org.apache.ambari.server.topology.BlueprintValidator: void validateRequiredProperties()>()
org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : interfaceinvoke $r1.<org.apache.ambari.server.topology.BlueprintValidator: void validateRequiredProperties()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r5 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r5 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.Configuration configuration>
org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.Configuration configuration> >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : return $r1
org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r1 = virtualinvoke $r6.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r1 = virtualinvoke $r6.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : return $r1
org.apache.ambari.server.topology.Configuration.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r1 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r1 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r70 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r70 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r71 = virtualinvoke $r70.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean getGplLicenseAccepted()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r71 = virtualinvoke $r70.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean getGplLicenseAccepted()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z27 = virtualinvoke $r71.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z27 = virtualinvoke $r71.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r72 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r72 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r72.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z28 = 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z28 = 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r73 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r73 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r98 = interfaceinvoke $r73.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r98 = interfaceinvoke $r73.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z21 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z21 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z21 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z21 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r79 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r79 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r99 = (java.util.Map$Entry) $r79
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r99 = (java.util.Map$Entry) $r79 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r80 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r80 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r100 = (java.lang.String) $r80
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r100 = (java.lang.String) $r80 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r81 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r81 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $r81 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $r81 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r82 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r82 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r83 = (java.util.Map) $r82
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r83 = (java.util.Map) $r82 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r84 = interfaceinvoke $r83.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r84 = interfaceinvoke $r83.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r101 = interfaceinvoke $r84.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r101 = interfaceinvoke $r84.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z22 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z22 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z22 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z22 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r85 = interfaceinvoke r101.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r85 = interfaceinvoke r101.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r102 = (java.util.Map$Entry) $r85
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r102 = (java.util.Map$Entry) $r85 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r86 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r86 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r103 = (java.lang.String) $r86
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r103 = (java.lang.String) $r86 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r87 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r87 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r104 = (java.lang.String) $r87
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r104 = (java.lang.String) $r87 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r104 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r104 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z27 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z27 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z29 = staticinvoke <org.apache.ambari.server.utils.SecretReference: boolean isSecret(java.lang.String)>(r104)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z29 = staticinvoke <org.apache.ambari.server.utils.SecretReference: boolean isSecret(java.lang.String)>(r104) >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.ambari.server.utils.SecretReference.isSecret : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $i0 = lengthof r1
org.apache.ambari.server.utils.SecretReference.isSecret : $i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : if $i0 != 4
org.apache.ambari.server.utils.SecretReference.isSecret : if $i0 != 4 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 0
org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : return $z1
org.apache.ambari.server.utils.SecretReference.isSecret : return $z1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z29 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z29 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z22 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z22 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $r2 = r1[0]
org.apache.ambari.server.utils.SecretReference.isSecret : $r2 = r1[0] >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SECRET")
org.apache.ambari.server.utils.SecretReference.isSecret : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SECRET") >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : if $z0 == 0
org.apache.ambari.server.utils.SecretReference.isSecret : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 1
org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 1 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : goto [?= return $z1]
org.apache.ambari.server.utils.SecretReference.isSecret : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r88 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r88 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r88.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Config:")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Config:") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r100)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r100) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Property:")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Property:") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z28 = 1
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z28 = 1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z21 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z21 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z28 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z28 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r74 = new org.apache.ambari.server.topology.InvalidTopologyException
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r74 = new org.apache.ambari.server.topology.InvalidTopologyException >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r75 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r75 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r75.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Secret references are not allowed in blueprints, replace following properties with real passwords:\n")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Secret references are not allowed in blueprints, replace following properties with real passwords:\n") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r74.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r78)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r74.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r78) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : throw $r74
