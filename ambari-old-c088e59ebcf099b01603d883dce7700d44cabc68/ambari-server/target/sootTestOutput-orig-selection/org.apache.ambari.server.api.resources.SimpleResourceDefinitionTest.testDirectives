org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType CREATE>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType CREATE> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : return $r4
org.apache.ambari.server.api.resources.BaseResourceDefinition.getCreateDirectives : return $r4 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i1 = interfaceinvoke r1.<java.util.Collection: int size()>()
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i1 = interfaceinvoke r1.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l2 = (long) $i1
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i3 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i3 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l4 = (long) $i3
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l4 = (long) $i3 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l4)
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l4) >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : if $z0 == 0
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $z1 = interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("DIRECTIVE")
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $z1 = interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("DIRECTIVE") >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i5 = i0 + 1
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i5 = i0 + 1 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l6 = (long) $i5
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l6 = (long) $i5 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i7 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $i7 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l8 = (long) $i7
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $l8 = (long) $i7 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l6, $l8)
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l6, $l8) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType READ>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType READ> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : return $r4
org.apache.ambari.server.api.resources.BaseResourceDefinition.getReadDirectives : return $r4 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType UPDATE>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType UPDATE> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : return $r4
org.apache.ambari.server.api.resources.BaseResourceDefinition.getUpdateDirectives : return $r4 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r2 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType DELETE>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r1 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType DELETE> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r4 = (java.util.Collection) $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : $r4 = (java.util.Collection) $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : return $r4
org.apache.ambari.server.api.resources.BaseResourceDefinition.getDeleteDirectives : return $r4 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if $r6 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if $r6 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = (java.util.Collection) $r7
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = (java.util.Collection) $r7 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : virtualinvoke $r4.<java.util.HashSet: boolean addAll(java.util.Collection)>($r8)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : virtualinvoke $r4.<java.util.HashSet: boolean addAll(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : r4 = (java.lang.String) $r5
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : r4 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : $z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinitionTest.validateDirectives : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
