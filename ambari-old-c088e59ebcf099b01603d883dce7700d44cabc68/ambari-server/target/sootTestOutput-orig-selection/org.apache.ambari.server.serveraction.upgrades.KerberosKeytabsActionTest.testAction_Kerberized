org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r3 = staticinvoke <org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest)>($r2)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r3 = staticinvoke <org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$000 : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$000 : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.state.Clusters m_clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$000 : return $r1
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest this$0>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r6 = staticinvoke <org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.controller.KerberosHelper access$100(org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest)>($r5)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r6 = staticinvoke <org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.controller.KerberosHelper access$100(org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$100 : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.controller.KerberosHelper m_kerberosHelper>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$100 : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest: org.apache.ambari.server.controller.KerberosHelper m_kerberosHelper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$100 : return $r1
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeHelper;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeHelper;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeHelper;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/UpgradeContextFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsActionTest$2.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.setCommandParams : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map commandParams> = r1
org.apache.ambari.server.agent.ExecutionCommand.setCommandParams : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map commandParams> = r1 >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.setClusterName : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.ExecutionCommand.setClusterName : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r2 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r2 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getClusterName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName>
org.apache.ambari.server.agent.ExecutionCommand.getClusterName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getClusterName : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : $r1 = r0.<org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction: org.apache.ambari.server.state.Clusters m_clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : return $r1
org.apache.ambari.server.serveraction.upgrades.AbstractUpgradeServerAction.getClusters : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r10 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r10[0] = r2
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r10[0] = r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.controller.KerberosHelper m_kerberosHelper>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.controller.KerberosHelper m_kerberosHelper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $z0 = interfaceinvoke $r11.<org.apache.ambari.server.controller.KerberosHelper: boolean isClusterKerberosEnabled(org.apache.ambari.server.state.Cluster)>(r3)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $z0 = interfaceinvoke $r11.<org.apache.ambari.server.controller.KerberosHelper: boolean isClusterKerberosEnabled(org.apache.ambari.server.state.Cluster)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r10[1] = $r12
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r10[1] = $r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Checking %s is secured by Kerberos... %s", $r10)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Checking %s is secured by Kerberos... %s", $r10) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r15 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r15 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r17 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.controller.KerberosHelper m_kerberosHelper>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r17 = r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.controller.KerberosHelper m_kerberosHelper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $z1 = interfaceinvoke $r17.<org.apache.ambari.server.controller.KerberosHelper: boolean isClusterKerberosEnabled(org.apache.ambari.server.state.Cluster)>(r3)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $z1 = interfaceinvoke $r17.<org.apache.ambari.server.controller.KerberosHelper: boolean isClusterKerberosEnabled(org.apache.ambari.server.state.Cluster)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if $z1 != 0
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r18 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r18 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r18[0] = "kerberos-env"
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r18[0] = "kerberos-env" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r18[1] = r2
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r18[1] = r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Loading %s for cluster %s", $r18)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Loading %s for cluster %s", $r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r20 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r20 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r21 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r21 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kerberos-env")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kerberos-env") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if r5 != null
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if r5 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r50 = <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType NONE>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r50 = <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType NONE> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if null == r6
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if null == r6 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $z2 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>("kdc_type")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $z2 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>("kdc_type") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if $z2 == 0
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r36 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_type")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r36 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_type") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r37 = (java.lang.String) $r36
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r50 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType translate(java.lang.String)>($r37)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : r50 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType translate(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if r0 == null
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if r0 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_")
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCType;", r0)
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCType;", r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType) $r1
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType) $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : return $r2
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : return $r4
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r51 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r51 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r51[0] = r50
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r51[0] = r50 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Checking KDC type... %s", $r51)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Checking KDC type... %s", $r51) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r53 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r53 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r54 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r54 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r55 = <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType NONE>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r55 = <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType NONE> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if $r55 != r50
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : if $r55 != r50 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r24 = newarray (java.lang.Object)[0]
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r24 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ambari is managing Kerberos keytabs.  Regenerate keytabs after upgrade is complete.", $r24)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ambari is managing Kerberos keytabs.  Regenerate keytabs after upgrade is complete.", $r24) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r27 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus HOLDING>
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r27 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus HOLDING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r28 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r28 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r29 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r27, "{}", $r28, "")
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : $r29 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r27, "{}", $r28, "") >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r5 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r5 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r6 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r6 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r6 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r6 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r29 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r29 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r30 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r30 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand roleCommand>
org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand roleCommand> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = new org.apache.ambari.server.agent.CommandReport
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = new org.apache.ambari.server.agent.CommandReport >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void <init>()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = $r8
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r27 = $r8 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder
org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : return $r4
org.apache.ambari.server.utils.StageUtils.getActionId : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r11)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1
org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r13)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map configurationTags>
org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map configurationTags> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r15)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r15) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1
org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRole : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String role>
org.apache.ambari.server.agent.ExecutionCommand.getRole : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String role> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRole : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getRole : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r17)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1
org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r30 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r30 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1
org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getServiceName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String serviceName>
org.apache.ambari.server.agent.ExecutionCommand.getServiceName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getServiceName : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getServiceName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1
org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getTaskId : $l0 = r0.<org.apache.ambari.server.agent.ExecutionCommand: long taskId>
org.apache.ambari.server.agent.ExecutionCommand.getTaskId : $l0 = r0.<org.apache.ambari.server.agent.ExecutionCommand: long taskId> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getTaskId : return $l0
org.apache.ambari.server.agent.ExecutionCommand.getTaskId : return $l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0
org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1
org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r4
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1
org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r3
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1
org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1
org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r8.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0
org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r27 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : return $r29
org.apache.ambari.server.serveraction.upgrades.KerberosKeytabsAction.execute : return $r29 >>>>>>>> org.apache.ambari.server.agent.CommandReport.getStatus : $r1 = r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status>
org.apache.ambari.server.agent.CommandReport.getStatus : $r1 = r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> >>>>>>>> org.apache.ambari.server.agent.CommandReport.getStatus : return $r1
org.apache.ambari.server.agent.CommandReport.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.agent.CommandReport.getStdOut : $r1 = r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout>
org.apache.ambari.server.agent.CommandReport.getStdOut : $r1 = r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> >>>>>>>> org.apache.ambari.server.agent.CommandReport.getStdOut : return $r1
