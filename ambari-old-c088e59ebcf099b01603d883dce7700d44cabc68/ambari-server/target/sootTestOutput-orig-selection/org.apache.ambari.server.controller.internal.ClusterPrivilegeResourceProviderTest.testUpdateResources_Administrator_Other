org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r1 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r1 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r7 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/RoleAuthorization;")
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r7 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/RoleAuthorization;") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r0, $r1, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r0, $r1, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: com.google.inject.Injector createInjector()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r1 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r2 = new org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r2 = new org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : specialinvoke $r2.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: void <init>(org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest)>(r0)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : specialinvoke $r2.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: void <init>(org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r1[0] = $r2
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r2 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r2 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r5 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r5 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r8 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r8 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r14 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r14 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r17 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r17 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r20 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r20 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r23 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r23 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r24 = virtualinvoke $r23.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r24 = virtualinvoke $r23.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r26 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r26 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r29 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r29 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r30 = virtualinvoke $r29.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r30 = virtualinvoke $r29.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r32 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r32 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r34 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r34 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r35 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r35 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r38 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r38 = r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r39 = virtualinvoke $r38.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : $r39 = virtualinvoke $r38.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : return $r3
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createInjector : return $r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r23 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r23 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r4 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceTypeEntity createMockResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r23)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r4 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceTypeEntity createMockResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceTypeEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceTypeEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : r2 = (org.apache.ambari.server.orm.entities.ResourceTypeEntity) $r3
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : r2 = (org.apache.ambari.server.orm.entities.ResourceTypeEntity) $r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer getId()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $i0 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $i0 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r11 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r11 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : return r2
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceTypeEntity : return r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r5 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PermissionEntity createMockPermissionEntity(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>("CLUSTER.ADMINISTRATOR", "Cluster Administrator", r4)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r5 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PermissionEntity createMockPermissionEntity(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>("CLUSTER.ADMINISTRATOR", "Cluster Administrator", r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PermissionEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PermissionEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : r4 = (org.apache.ambari.server.orm.entities.PermissionEntity) $r5
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : r4 = (org.apache.ambari.server.orm.entities.PermissionEntity) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionName()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionLabel()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionLabel()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : return r4
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPermissionEntity : return r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r24 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r24 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r6 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r24
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r6 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r25 = virtualinvoke r6.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findPermissionByNameAndType(java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>("CLUSTER.OPERATOR", r4)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r25 = virtualinvoke r6.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findPermissionByNameAndType(java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>("CLUSTER.OPERATOR", r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r7 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceEntity createMockResourceEntity(java.lang.Long,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r28, r4)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r7 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceEntity createMockResourceEntity(java.lang.Long,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r28, r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : r3 = (org.apache.ambari.server.orm.entities.ResourceEntity) $r4
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : r3 = (org.apache.ambari.server.orm.entities.ResourceEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : return r3
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockResourceEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ClusterEntity createMockClusterEntity(java.lang.String,org.apache.ambari.server.orm.entities.ResourceEntity)>("c1", r7)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ClusterEntity createMockClusterEntity(java.lang.String,org.apache.ambari.server.orm.entities.ResourceEntity)>("c1", r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ClusterEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ClusterEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : r3 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r4
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : r3 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : return r3
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockClusterEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r29 = new java.util.LinkedList
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r29 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : specialinvoke $r29.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : specialinvoke $r29.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createMockPrincipalTypeEntity(java.lang.String)>("USER")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createMockPrincipalTypeEntity(java.lang.String)>("USER") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalTypeEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalTypeEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : r2 = (org.apache.ambari.server.orm.entities.PrincipalTypeEntity) $r3
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : r2 = (org.apache.ambari.server.orm.entities.PrincipalTypeEntity) $r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : return r2
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : return r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalEntity createMockPrincipalEntity(java.lang.Long,org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r30, r10)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalEntity createMockPrincipalEntity(java.lang.Long,org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r30, r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : r3 = (org.apache.ambari.server.orm.entities.PrincipalEntity) $r4
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : r3 = (org.apache.ambari.server.orm.entities.PrincipalEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity getPrincipalType()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity getPrincipalType()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : return r3
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrincipalEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r12 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.UserEntity createMockUserEntity(org.apache.ambari.server.orm.entities.PrincipalEntity,java.lang.String)>(r11, r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r12 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.UserEntity createMockUserEntity(org.apache.ambari.server.orm.entities.PrincipalEntity,java.lang.String)>(r11, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/UserEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/UserEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : r3 = (org.apache.ambari.server.orm.entities.UserEntity) $r4
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : r3 = (org.apache.ambari.server.orm.entities.UserEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : return r3
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockUserEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r13 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrivilegeEntity createMockPrivilegeEntity(java.lang.Integer,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>($r31, r7, r11, r5)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r13 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrivilegeEntity createMockPrivilegeEntity(java.lang.Integer,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>($r31, r7, r11, r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrivilegeEntity;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrivilegeEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : r5 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) $r6
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : r5 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) $r6 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r7 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer getId()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r7 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r9 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r9 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r13 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r13 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r19 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r19 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : return r5
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.createMockPrivilegeEntity : return r5 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r32 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r32 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : specialinvoke $r32.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : specialinvoke $r32.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r33 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r33 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r15 = (org.apache.ambari.server.orm.dao.UserDAO) $r33
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r15 = (org.apache.ambari.server.orm.dao.UserDAO) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r34 = virtualinvoke r15.<org.apache.ambari.server.orm.dao.UserDAO: org.apache.ambari.server.orm.entities.UserEntity findUserByName(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r34 = virtualinvoke r15.<org.apache.ambari.server.orm.dao.UserDAO: org.apache.ambari.server.orm.entities.UserEntity findUserByName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r38 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r38 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r16 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r38
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r16 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r39 = virtualinvoke r16.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r39 = virtualinvoke r16.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r29)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r42 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r42 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r17 = (org.apache.ambari.server.orm.dao.ResourceDAO) $r42
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r17 = (org.apache.ambari.server.orm.dao.ResourceDAO) $r42 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r44 = virtualinvoke r17.<org.apache.ambari.server.orm.dao.ResourceDAO: org.apache.ambari.server.orm.entities.ResourceEntity findById(java.lang.Long)>($r43)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r44 = virtualinvoke r17.<org.apache.ambari.server.orm.dao.ResourceDAO: org.apache.ambari.server.orm.entities.ResourceEntity findById(java.lang.Long)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r48 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r48 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r18 = (org.apache.ambari.server.orm.dao.PrincipalDAO) $r48
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r18 = (org.apache.ambari.server.orm.dao.PrincipalDAO) $r48 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r50 = virtualinvoke r18.<org.apache.ambari.server.orm.dao.PrincipalDAO: org.apache.ambari.server.orm.entities.PrincipalEntity findById(java.lang.Long)>($r49)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r50 = virtualinvoke r18.<org.apache.ambari.server.orm.dao.PrincipalDAO: org.apache.ambari.server.orm.entities.PrincipalEntity findById(java.lang.Long)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r54 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r54 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r19 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r54
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r19 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r54 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r56 = virtualinvoke r19.<org.apache.ambari.server.orm.dao.PrivilegeDAO: java.util.List findByResourceId(java.lang.Long)>($r55)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r56 = virtualinvoke r19.<org.apache.ambari.server.orm.dao.PrivilegeDAO: java.util.List findByResourceId(java.lang.Long)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r56)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r58 = interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r58 = interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r60 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r60 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r60.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r60.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r61 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : $r61 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : specialinvoke $r61.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : specialinvoke $r61.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PrivilegeInfo/permission_name", "CLUSTER.OPERATOR")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PrivilegeInfo/permission_name", "CLUSTER.OPERATOR") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PrivilegeInfo/principal_name", r2)
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PrivilegeInfo/principal_name", r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PrivilegeInfo/principal_type", "USER")
org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PrivilegeInfo/principal_type", "USER") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterPrivilegeResourceProviderTest.updateResourcesTest : r21 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>($r61, null)
