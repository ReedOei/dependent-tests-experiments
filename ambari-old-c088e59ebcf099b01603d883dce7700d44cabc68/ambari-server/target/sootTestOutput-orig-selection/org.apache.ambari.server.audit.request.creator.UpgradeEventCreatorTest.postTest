org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase.beforeClass : $r0 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase.beforeClass : specialinvoke $r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1: void <init>()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase.beforeClass : specialinvoke $r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase.beforeClass : staticinvoke <org.springframework.security.core.context.SecurityContextHolder: void setContext(org.springframework.security.core.context.SecurityContext)>($r0)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase.beforeClass : staticinvoke <org.springframework.security.core.context.SecurityContextHolder: void setContext(org.springframework.security.core.context.SecurityContext)>($r0) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : $r4 = staticinvoke <org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper: org.apache.ambari.server.api.services.Request createRequest(org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map,java.util.Map,java.lang.String)>(r0, r1, r2, r3, "")
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : $r4 = staticinvoke <org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper: org.apache.ambari.server.api.services.Request createRequest(org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map,java.util.Map,java.lang.String)>(r0, r1, r2, r3, "") >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : $r5 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : $r5 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : specialinvoke $r5.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: void <init>(java.util.Map,org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,org.apache.ambari.server.api.services.Request$Type,java.util.Map)>(r3, r1, r4, r0, r2)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : specialinvoke $r5.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: void <init>(java.util.Map,org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,org.apache.ambari.server.api.services.Request$Type,java.util.Map)>(r3, r1, r4, r0, r2) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : return $r5
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : return $r5 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : return $r4
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createRequest : return $r4 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : $r1 = staticinvoke <org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper: org.apache.ambari.server.api.services.Result createResult(org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.util.TreeNode)>(r0, null)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : $r1 = staticinvoke <org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper: org.apache.ambari.server.api.services.Result createResult(org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.util.TreeNode)>(r0, null) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : $r2 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : $r2 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : specialinvoke $r2.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2: void <init>(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.services.ResultStatus)>(r1, r0)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : specialinvoke $r2.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2: void <init>(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.services.ResultStatus)>(r1, r0) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : return $r2
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : return $r2 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : return $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.createResult : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r7 = new java.util.HashSet
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r7 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r0)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;") >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : r4 = (org.apache.ambari.server.audit.AuditLogger) $r8
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : r4 = (org.apache.ambari.server.audit.AuditLogger) $r8 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $z1 = interfaceinvoke r4.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $z1 = interfaceinvoke r4.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : r5 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : r5 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r5)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r5) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r15 = (org.apache.ambari.server.audit.event.AuditEvent) $r14
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r15 = (org.apache.ambari.server.audit.event.AuditEvent) $r14 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke r4.<org.apache.ambari.server.audit.AuditLogger: void log(org.apache.ambari.server.audit.event.AuditEvent)>($r15)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke r4.<org.apache.ambari.server.audit.AuditLogger: void log(org.apache.ambari.server.audit.event.AuditEvent)>($r15) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r17[0] = r4
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r17[0] = r4 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r17)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r17) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r18 = new org.apache.ambari.server.audit.request.RequestAuditLoggerImpl
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r18 = new org.apache.ambari.server.audit.request.RequestAuditLoggerImpl >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : specialinvoke $r18.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: void <init>(org.apache.ambari.server.audit.AuditLogger,java.util.Set)>(r4, $r7)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : specialinvoke $r18.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: void <init>(org.apache.ambari.server.audit.AuditLogger,java.util.Set)>(r4, $r7) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke $r18.<org.apache.ambari.server.audit.request.RequestAuditLogger: void log(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : interfaceinvoke $r18.<org.apache.ambari.server.audit.request.RequestAuditLogger: void log(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r8 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r8 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.AuditLogger auditLogger> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $z0 = interfaceinvoke $r8.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $z0 = interfaceinvoke $r8.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if $z0 != 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if $z0 != 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getResource : $r1 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getResource : $r1 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getResource : specialinvoke $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1: void <init>(org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1)>(r0)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getResource : specialinvoke $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1: void <init>(org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1)>(r0) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getResource : return $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getResource : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1.getResourceDefinition : $r1 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1.getResourceDefinition : $r1 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1.getResourceDefinition : specialinvoke $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1: void <init>(org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1)>(r0)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1.getResourceDefinition : specialinvoke $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1: void <init>(org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1)>(r0) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1.getResourceDefinition : return $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1.getResourceDefinition : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r3 = interfaceinvoke $r10.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r3 = interfaceinvoke $r10.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : $r1 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1: org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1 this$1>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : $r1 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1: org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1 this$1> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : $r2 = $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1: org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1 this$0>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : $r2 = $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1: org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1 this$0> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : $r3 = $r2.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.controller.spi.Resource$Type val$resourceType>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : $r3 = $r2.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.controller.spi.Resource$Type val$resourceType> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : return $r3
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1$1$1.getType : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r4 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r4 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getRequestType : $r1 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.api.services.Request$Type val$requestType>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getRequestType : $r1 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.api.services.Request$Type val$requestType> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getRequestType : return $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getRequestType : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r5 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r5 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2.getStatus : $r1 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2: org.apache.ambari.server.api.services.ResultStatus val$status>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2.getStatus : $r1 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2: org.apache.ambari.server.api.services.ResultStatus val$status> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2.getStatus : return $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$2.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r6 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator selectCreator(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r3, r5, r4)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r6 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator selectCreator(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r3, r5, r4) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r9 = null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r9 = null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $r7 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: java.util.Set creators>
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $r7 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: java.util.Set creators> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : if $z0 == 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : if $z0 == 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r5 = (org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator) $r8
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r5 = (org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator) $r8 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r6 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: java.lang.Integer getPriority(org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r5, r1, r2, r3)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r6 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: java.lang.Integer getPriority(org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r5, r1, r2, r3) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $z0 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: boolean isIncompatible(org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r1, r2, r3, r4)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $z0 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: boolean isIncompatible(org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r5 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r5 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getRequestTypes : $r1 = r0.<org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator: java.util.Set requestTypes>
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getRequestTypes : $r1 = r0.<org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator: java.util.Set requestTypes> >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getRequestTypes : return $r1
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getRequestTypes : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $r5 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $r5 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r11 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r11 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $z2 == 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $z2 == 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r6 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResultStatuses()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r6 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResultStatuses()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getResultStatuses : return null
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getResultStatuses : return null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $r6 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $r6 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r7 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r7 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getResourceTypes : $r1 = r0.<org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator: java.util.Set resourceTypes>
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getResourceTypes : $r1 = r0.<org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator: java.util.Set resourceTypes> >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getResourceTypes : return $r1
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.getResourceTypes : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $r7 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $r7 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r8 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r8 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r2)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1
org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $z0 != 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : if $z0 != 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $z3 = 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $z3 = 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : return $z3
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : return $z3 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $z0 == 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $z0 == 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r5 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r5 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $r5 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $r5 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r9 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r9 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $z3 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $z3 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $z3 == 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $z3 == 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $b1 = 1
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $b1 = 1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : goto [?= $i2 = $i0 + $b1]
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : goto [?= $i2 = $i0 + $b1] >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i2 = $i0 + $b1
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i2 = $i0 + $b1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i3 = virtualinvoke r11.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i3 = virtualinvoke r11.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r12 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResultStatuses()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r12 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResultStatuses()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $r12 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $r12 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $b4 = 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $b4 = 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i5 = $i3 + $b4
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i5 = $i3 + $b4 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i6 = virtualinvoke r13.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i6 = virtualinvoke r13.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r14 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r14 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $r14 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $r14 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r6 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r6 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResourceTypes()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r2)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $z1 == 0
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : if $z1 == 0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $b7 = 4
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $b7 = 4 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : goto [?= $i8 = $i6 + $b7]
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : goto [?= $i8 = $i6 + $b7] >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i8 = $i6 + $b7
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i8 = $i6 + $b7 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : return r15
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : return r15 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : if r6 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : if r6 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $i1 = virtualinvoke r6.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $i1 = virtualinvoke r6.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : if $i0 >= $i1
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r10 = r6
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r10 = r6 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r9 = r5
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r9 = r5 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : return r9
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : return r9 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if r6 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if r6 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r7 = interfaceinvoke r6.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: org.apache.ambari.server.audit.event.AuditEvent createAuditEvent(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r7 = interfaceinvoke r6.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: org.apache.ambari.server.audit.event.AuditEvent createAuditEvent(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r3 = staticinvoke <org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder builder()>()
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r3 = staticinvoke <org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder builder()>() >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent.builder : $r0 = new org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent.builder : $r0 = new org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent.builder : specialinvoke $r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: void <init>()>()
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent.builder : specialinvoke $r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1.getAuthentication : $r1 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1.getAuthentication : $r1 = new org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1.getAuthentication : specialinvoke $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1: void <init>(org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1)>(r0)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1.getAuthentication : specialinvoke $r1.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1: void <init>(org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1)>(r0) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1.getAuthentication : return $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1.getAuthentication : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = interfaceinvoke r2.<org.springframework.security.core.Authentication: java.lang.String getName()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = interfaceinvoke r2.<org.springframework.security.core.Authentication: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1: java.lang.Object getPrincipal()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1: java.lang.Object getPrincipal()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : $r1 = new org.springframework.security.core.userdetails.User
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : $r1 = new org.springframework.security.core.userdetails.User >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : specialinvoke $r1.<org.springframework.security.core.userdetails.User: void <init>(java.lang.String,java.lang.String,java.util.Collection)>("testuser", "password", $r2)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : specialinvoke $r1.<org.springframework.security.core.userdetails.User: void <init>(java.lang.String,java.lang.String,java.util.Collection)>("testuser", "password", $r2) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : return $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : $r2 = (org.springframework.security.core.userdetails.User) $r1
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : $r2 = (org.springframework.security.core.userdetails.User) $r1 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : $r3 = virtualinvoke $r2.<org.springframework.security.core.userdetails.User: java.lang.String getUsername()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : $r3 = virtualinvoke $r2.<org.springframework.security.core.userdetails.User: java.lang.String getUsername()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : return $r3
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestBase$1$1.getName : return $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String operation> = r1
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String operation> = r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Class builderClass>
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Class builderClass> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0)
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r3 = (org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder) $r2
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r3 = (org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : return $r3
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : return $r3
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withOperation : return $r3 >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent.builder : return $r0
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent.builder : return $r0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r5 = virtualinvoke $r3.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder withTimestamp(java.lang.Long)>($r4)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r5 = virtualinvoke $r3.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder withTimestamp(java.lang.Long)>($r4) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> = r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> = r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : return $r2
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : return $r2 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r6 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r5
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r6 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r5 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r8 = virtualinvoke $r6.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withRequestType(org.apache.ambari.server.api.services.Request$Type)>($r7)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r8 = virtualinvoke $r6.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withRequestType(org.apache.ambari.server.api.services.Request$Type)>($r7) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.Request$Type requestType> = r1
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.Request$Type requestType> = r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : return $r3
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r9 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r8
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r9 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r8 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r10 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r10 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r11 = virtualinvoke $r9.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withResultStatus(org.apache.ambari.server.api.services.ResultStatus)>($r10)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r11 = virtualinvoke $r9.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withResultStatus(org.apache.ambari.server.api.services.ResultStatus)>($r10) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus> = r1
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus> = r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : return $r3
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withResultStatus : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r12 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r11
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r12 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r11 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getURI()>()
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getURI()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://example.com:8080/api/v1/test")
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://example.com:8080/api/v1/test") >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r3 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: java.lang.String val$queryString>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r3 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: java.lang.String val$queryString> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : return $r5
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getURI : return $r5 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r14 = virtualinvoke $r12.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withUrl(java.lang.String)>($r13)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r14 = virtualinvoke $r12.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withUrl(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String url> = r1
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String url> = r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : return $r3
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withUrl : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r15 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r14
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r15 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r14 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r16 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getRemoteAddress()>()
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r16 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getRemoteAddress()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getRemoteAddress : return "1.2.3.4"
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getRemoteAddress : return "1.2.3.4" >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r17 = virtualinvoke $r15.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withRemoteIp(java.lang.String)>($r16)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r17 = virtualinvoke $r15.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withRemoteIp(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> = r1
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> = r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : return $r3
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r18 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r17
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r18 = (org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder) $r17 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r19 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.lang.String getProperty(org.apache.ambari.server.api.services.Request,java.lang.String)>(r1, "Upgrade/repository_version_id")
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r19 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.lang.String getProperty(org.apache.ambari.server.api.services.Request,java.lang.String)>(r1, "Upgrade/repository_version_id") >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : r2 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.util.List getPropertyList(org.apache.ambari.server.api.services.Request,java.lang.String)>(r0, r1)
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : r2 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.util.List getPropertyList(org.apache.ambari.server.api.services.Request,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r5 = new java.util.LinkedList
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r5 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : specialinvoke $r5.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : specialinvoke $r5.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r6 = interfaceinvoke r0.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>()
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r6 = interfaceinvoke r0.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r2 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: java.util.Map val$properties>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r2 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: java.util.Map val$properties> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : if $r2 == null
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : if $r2 == null >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r4 = new org.apache.ambari.server.api.services.NamedPropertySet
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r4 = new org.apache.ambari.server.api.services.NamedPropertySet >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r5 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: java.util.Map val$properties>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r5 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: java.util.Map val$properties> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : specialinvoke $r4.<org.apache.ambari.server.api.services.NamedPropertySet: void <init>(java.lang.String,java.util.Map)>("", $r5)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : specialinvoke $r4.<org.apache.ambari.server.api.services.NamedPropertySet: void <init>(java.lang.String,java.util.Map)>("", $r5) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r6 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.api.services.RequestBody body>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r6 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.api.services.RequestBody body> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : virtualinvoke $r6.<org.apache.ambari.server.api.services.RequestBody: void addPropertySet(org.apache.ambari.server.api.services.NamedPropertySet)>($r4)
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : virtualinvoke $r6.<org.apache.ambari.server.api.services.RequestBody: void addPropertySet(org.apache.ambari.server.api.services.NamedPropertySet)>($r4) >>>>>>>> org.apache.ambari.server.api.services.RequestBody.addPropertySet : $r2 = r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Set m_propertySets>
org.apache.ambari.server.api.services.RequestBody.addPropertySet : $r2 = r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Set m_propertySets> >>>>>>>> org.apache.ambari.server.api.services.RequestBody.addPropertySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.api.services.RequestBody.addPropertySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r1 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name>
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r1 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r1 == null
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r4 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name>
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r4 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r2 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r2 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r2 == null
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r3 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r3 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i3 = interfaceinvoke $r3.<java.util.Map: int hashCode()>()
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i3 = interfaceinvoke $r3.<java.util.Map: int hashCode()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : return i4
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : return i4 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r3 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.api.services.RequestBody body>
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : $r3 = r0.<org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1: org.apache.ambari.server.api.services.RequestBody body> >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : return $r3
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper$1.getBody : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r7 = virtualinvoke $r6.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getPropertySets()>()
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r7 = virtualinvoke $r6.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getPropertySets()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : r1 = virtualinvoke r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getNamedPropertySets()>()
org.apache.ambari.server.api.services.RequestBody.getPropertySets : r1 = virtualinvoke r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getNamedPropertySets()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getNamedPropertySets : $r1 = r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Set m_propertySets>
org.apache.ambari.server.api.services.RequestBody.getNamedPropertySets : $r1 = r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Set m_propertySets> >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getNamedPropertySets : return $r1
org.apache.ambari.server.api.services.RequestBody.getNamedPropertySets : return $r1 >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : $r5 = new java.util.HashSet
org.apache.ambari.server.api.services.RequestBody.getPropertySets : $r5 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.api.services.RequestBody.getPropertySets : $i0 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : specialinvoke $r5.<java.util.HashSet: void <init>(int)>($i0)
org.apache.ambari.server.api.services.RequestBody.getPropertySets : specialinvoke $r5.<java.util.HashSet: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.services.RequestBody.getPropertySets : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.services.RequestBody.getPropertySets : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : if $z0 == 0
org.apache.ambari.server.api.services.RequestBody.getPropertySets : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.services.RequestBody.getPropertySets : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : r4 = (org.apache.ambari.server.api.services.NamedPropertySet) $r6
org.apache.ambari.server.api.services.RequestBody.getPropertySets : r4 = (org.apache.ambari.server.api.services.NamedPropertySet) $r6 >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : $r7 = virtualinvoke r4.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map getProperties()>()
org.apache.ambari.server.api.services.RequestBody.getPropertySets : $r7 = virtualinvoke r4.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.getProperties : $r1 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.getProperties : $r1 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.getProperties : return $r1
org.apache.ambari.server.api.services.NamedPropertySet.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.api.services.RequestBody.getPropertySets : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.services.RequestBody.getPropertySets : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getPropertySets : return $r5
org.apache.ambari.server.api.services.RequestBody.getPropertySets : return $r5 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : if $z0 == 0
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : r4 = (java.util.Map) $r8
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : r4 = (java.util.Map) $r8 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $z1 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $z1 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : if $z1 == 0
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : if $z1 == 0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r9 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r9 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9)
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : return $r5
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getPropertyList : return $r5 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : if $z0 == 0
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : if $z0 == 0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : $r4 = (java.lang.String) $r3
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : return $r4
org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper.getProperty : return $r4 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r20 = virtualinvoke $r18.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder withRepositoryVersionId(java.lang.String)>($r19)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r20 = virtualinvoke $r18.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder withRepositoryVersionId(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withRepositoryVersionId : r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String repositoryVersionId> = r1
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withRepositoryVersionId : r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String repositoryVersionId> = r1 >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withRepositoryVersionId : return r0
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withRepositoryVersionId : return r0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r21 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.lang.String getProperty(org.apache.ambari.server.api.services.Request,java.lang.String)>(r1, "Upgrade/upgrade_type")
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r21 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.lang.String getProperty(org.apache.ambari.server.api.services.Request,java.lang.String)>(r1, "Upgrade/upgrade_type") >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : if r0 != r1
org.apache.ambari.server.api.services.NamedPropertySet.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : if r1 == null
org.apache.ambari.server.api.services.NamedPropertySet.equals : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : if $r3 == $r4
org.apache.ambari.server.api.services.NamedPropertySet.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : r2 = (org.apache.ambari.server.api.services.NamedPropertySet) r1
org.apache.ambari.server.api.services.NamedPropertySet.equals : r2 = (org.apache.ambari.server.api.services.NamedPropertySet) r1 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r5 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r5 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : if $r5 != null
org.apache.ambari.server.api.services.NamedPropertySet.equals : if $r5 != null >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r7 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r7 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r6 = r2.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r6 = r2.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $z0 = interfaceinvoke $r7.<java.util.Map: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.api.services.NamedPropertySet.equals : $z0 = interfaceinvoke $r7.<java.util.Map: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : if $z0 == 0
org.apache.ambari.server.api.services.NamedPropertySet.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r8 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name>
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r8 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : if $r8 != null
org.apache.ambari.server.api.services.NamedPropertySet.equals : if $r8 != null >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r10 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name>
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r10 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $r9 = r2.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name>
org.apache.ambari.server.api.services.NamedPropertySet.equals : $r9 = r2.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9)
org.apache.ambari.server.api.services.NamedPropertySet.equals : $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : if $z1 == 0
org.apache.ambari.server.api.services.NamedPropertySet.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : $z2 = 1
org.apache.ambari.server.api.services.NamedPropertySet.equals : $z2 = 1 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : goto [?= return $z2]
org.apache.ambari.server.api.services.NamedPropertySet.equals : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.equals : return $z2
org.apache.ambari.server.api.services.NamedPropertySet.equals : return $z2 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r22 = virtualinvoke $r20.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder withUpgradeType(java.lang.String)>($r21)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r22 = virtualinvoke $r20.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder withUpgradeType(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withUpgradeType : r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String upgradeType> = r1
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withUpgradeType : r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String upgradeType> = r1 >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withUpgradeType : return r0
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withUpgradeType : return r0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r23 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.lang.String getProperty(org.apache.ambari.server.api.services.Request,java.lang.String)>(r1, "Upgrade/cluster_name")
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r23 = staticinvoke <org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreatorHelper: java.lang.String getProperty(org.apache.ambari.server.api.services.Request,java.lang.String)>(r1, "Upgrade/cluster_name") >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r24 = virtualinvoke $r22.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder withClusterName(java.lang.String)>($r23)
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r24 = virtualinvoke $r22.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder withClusterName(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withClusterName : r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String clusterName> = r1
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withClusterName : r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withClusterName : return r0
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.withClusterName : return r0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r25 = virtualinvoke $r24.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent build()>()
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : $r25 = virtualinvoke $r24.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent build()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>($r2)
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>($r2) >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r1) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : specialinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : specialinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r1) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User(")
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User(") >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r3 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String userName>
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r3 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String userName> >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), RemoteIp(")
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), RemoteIp(") >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r6 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp>
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r6 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r2 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String operation>
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r2 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String operation> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : if $r2 == null
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : if $r2 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Operation(")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Operation(") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r25 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String operation>
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r25 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String operation> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RequestType(")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RequestType(") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r4 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.Request$Type requestType>
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r4 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.Request$Type requestType> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), ")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), ") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url(")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url(") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r8 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String url>
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r8 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: java.lang.String url> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), ResultStatus(")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), ResultStatus(") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r11 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus>
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r11 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $i0 = virtualinvoke $r11.<org.apache.ambari.server.api.services.ResultStatus: int getStatusCode()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $i0 = virtualinvoke $r11.<org.apache.ambari.server.api.services.ResultStatus: int getStatusCode()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>()
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $i0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : return $i0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : return $i0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r14 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus>
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r14 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r15 = virtualinvoke $r14.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS getStatus()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r15 = virtualinvoke $r14.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1
org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.toString : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: java.lang.String getDescription()>()
org.apache.ambari.server.api.services.ResultStatus$STATUS.toString : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getDescription : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: java.lang.String m_desc>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getDescription : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: java.lang.String m_desc> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.getDescription : return $r1
org.apache.ambari.server.api.services.ResultStatus$STATUS.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.toString : return $r1
org.apache.ambari.server.api.services.ResultStatus$STATUS.toString : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r18 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus>
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $r18 = r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.ResultStatus resultStatus> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $z0 = virtualinvoke $r18.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : $z0 = virtualinvoke $r18.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>()
org.apache.ambari.server.api.services.ResultStatus.isErrorState : $z0 = virtualinvoke $r1.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState>
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : $z0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: boolean m_isErrorState> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus$STATUS.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0
org.apache.ambari.server.api.services.ResultStatus.isErrorState : return $z0 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : if $z0 == 0
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.buildAuditMessage : if $z0 == 0 >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Repository version ID(")
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Repository version ID(") >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r3 = r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String repositoryVersionId>
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r3 = r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String repositoryVersionId> >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Upgrade type(")
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Upgrade type(") >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r6 = r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String upgradeType>
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r6 = r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String upgradeType> >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Cluster name(")
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Cluster name(") >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r9 = r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String clusterName>
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r9 = r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.buildAuditMessage : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage> = $r3
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage> = $r3 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r4 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent newAuditEvent()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r4 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent newAuditEvent()>() >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : $r1 = virtualinvoke r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent newAuditEvent()>()
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : $r1 = virtualinvoke r0.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder: org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent newAuditEvent()>() >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : $r1 = new org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : $r1 = new org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : specialinvoke $r1.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent: void <init>(org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder)>(r0)
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : specialinvoke $r1.<org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent: void <init>(org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder)>(r0) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp>
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : return $r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage>
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : return $r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : return $r1
org.apache.ambari.server.audit.event.request.AddUpgradeRequestAuditEvent$AddUpgradeRequestAuditEventBuilder.newAuditEvent : return $r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : return $r4
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : return $r4 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : return $r25
org.apache.ambari.server.audit.request.eventcreator.UpgradeEventCreator.createAuditEvent : return $r25 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if r7 == null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if r7 == null >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r11 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r11 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.AuditLogger auditLogger> >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : interfaceinvoke $r11.<org.apache.ambari.server.audit.AuditLogger: void log(org.apache.ambari.server.audit.event.AuditEvent)>(r7)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : interfaceinvoke $r11.<org.apache.ambari.server.audit.AuditLogger: void log(org.apache.ambari.server.audit.event.AuditEvent)>(r7) >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r19 = virtualinvoke r5.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r19 = virtualinvoke r5.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r20 = (org.apache.ambari.server.audit.event.AuditEvent) $r19
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : $r20 = (org.apache.ambari.server.audit.event.AuditEvent) $r19 >>>>>>>> org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : return $r20
org.apache.ambari.server.audit.request.creator.AuditEventCreatorTestHelper.getEvent : return $r20 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent.getAuditMessage : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent: java.lang.String auditMessage>
org.apache.ambari.server.audit.event.AbstractAuditEvent.getAuditMessage : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent: java.lang.String auditMessage> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent.getAuditMessage : return $r1
