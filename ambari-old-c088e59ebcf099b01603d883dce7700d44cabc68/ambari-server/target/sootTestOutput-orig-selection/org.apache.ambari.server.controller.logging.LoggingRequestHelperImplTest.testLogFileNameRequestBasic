org.apache.ambari.server.controller.logging.LoggingCookieStore.getCookiesMap : $r1 = r0.<org.apache.ambari.server.controller.logging.LoggingCookieStore: java.util.Map cookiesMap> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingCookieStore.getCookiesMap : return $r1
org.apache.ambari.server.controller.logging.LoggingCookieStore.getCookiesMap : return $r1 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r6 = new java.util.HashMap
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r6 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_name", r2)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_name", r2) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("component_name", r1)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("component_name", r1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pageSize", "1")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pageSize", "1") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : r4 = virtualinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.controller.logging.LogQueryResponse sendQueryRequest(java.util.Map)>($r6)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : r4 = virtualinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.controller.logging.LogQueryResponse sendQueryRequest(java.util.Map)>($r6) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r6 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String protocol>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r6 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String protocol> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r22 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.net.URI createLogSearchQueryURI(java.lang.String,java.util.Map)>($r6, r1)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r22 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.net.URI createLogSearchQueryURI(java.lang.String,java.util.Map)>($r6, r1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : r3 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.http.client.utils.URIBuilder createBasicURI(java.lang.String)>(r1)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : r3 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.http.client.utils.URIBuilder createBasicURI(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r3 = new org.apache.http.client.utils.URIBuilder
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r3 = new org.apache.http.client.utils.URIBuilder >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : specialinvoke $r3.<org.apache.http.client.utils.URIBuilder: void <init>()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : specialinvoke $r3.<org.apache.http.client.utils.URIBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : virtualinvoke $r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>(r1)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : virtualinvoke $r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r5 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String hostName>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r5 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String hostName> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : virtualinvoke $r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>($r5)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : virtualinvoke $r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r7 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String portNumber>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r7 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String portNumber> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r7)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : virtualinvoke $r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPort(int)>($i0)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : virtualinvoke $r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPort(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : return $r3
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createBasicURI : return $r3 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/api/v1/service/logs")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/api/v1/service/logs") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r7 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r7 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r8 = interfaceinvoke $r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r8 = interfaceinvoke $r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String)>("clusters", $r8)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String)>("clusters", $r8) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r10 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r10 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : if $z0 == 0
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : r5 = (java.lang.String) $r12
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : r5 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r14 = (java.lang.String) $r13
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String)>(r5, $r14)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String)>(r5, $r14) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r11 = virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: java.net.URI build()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : $r11 = virtualinvoke r3.<org.apache.http.client.utils.URIBuilder: java.net.URI build()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : return $r11
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createLogSearchQueryURI : return $r11 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r7 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r7 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Attempting to connect to LogSearch server at {}", r22)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Attempting to connect to LogSearch server at {}", r22) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r8 = virtualinvoke r22.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r8 = virtualinvoke r22.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r9 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r9 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r2 = (java.net.HttpURLConnection) $r9
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r2 = (java.net.HttpURLConnection) $r9 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r10 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String protocol>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r10 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String protocol> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void secure(java.net.HttpURLConnection,java.lang.String)>(r2, $r10)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void secure(java.net.HttpURLConnection,java.lang.String)>(r2, $r10) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.secure : $r4 = "https"
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.secure : $r4 = "https" >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.secure : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.secure : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.secure : if $z0 == 0
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.secure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : virtualinvoke r2.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : virtualinvoke r2.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i0 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchConnectTimeoutInMilliseconds>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i0 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchConnectTimeoutInMilliseconds> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : virtualinvoke r2.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : virtualinvoke r2.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i1 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchReadTimeoutInMilliseconds>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i1 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchReadTimeoutInMilliseconds> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : virtualinvoke r2.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : virtualinvoke r2.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void addCookiesFromCookieStore(java.net.HttpURLConnection)>(r2)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void addCookiesFromCookieStore(java.net.HttpURLConnection)>(r2) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : $r5 = <org.apache.ambari.server.controller.logging.LoggingCookieStore: org.apache.ambari.server.controller.logging.LoggingCookieStore INSTANCE>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : $r5 = <org.apache.ambari.server.controller.logging.LoggingCookieStore: org.apache.ambari.server.controller.logging.LoggingCookieStore INSTANCE> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.logging.LoggingCookieStore: java.util.Map getCookiesMap()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.logging.LoggingCookieStore: java.util.Map getCookiesMap()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : $i0 = interfaceinvoke $r6.<java.util.Map: int size()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : $i0 = interfaceinvoke $r6.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : if $i0 <= 0
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesFromCookieStore : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r11 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r11 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i2 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchConnectTimeoutInMilliseconds>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i2 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchConnectTimeoutInMilliseconds> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i3 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchReadTimeoutInMilliseconds>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $i3 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: int logSearchReadTimeoutInMilliseconds> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Attempting request to LogSearch Portal Server, with connect timeout = {} milliseconds and read timeout = {} milliseconds", $r12, $r13)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Attempting request to LogSearch Portal Server, with connect timeout = {} milliseconds and read timeout = {} milliseconds", $r12, $r13) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void setupCredentials(java.net.HttpURLConnection)>(r2)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void setupCredentials(java.net.HttpURLConnection)>(r2) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : r2 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String getLogSearchAdminUser()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : r2 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String getLogSearchAdminUser()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r2 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r2 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : r1 = interfaceinvoke $r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-admin-json")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : r1 = interfaceinvoke $r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-admin-json") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : if r1 == null
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : if r1 == null >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch_admin_username")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch_admin_username") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r5 = (java.lang.String) $r4
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : return $r5
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminUser : return $r5 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : r3 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String getLogSearchAdminPassword()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : r3 = specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String getLogSearchAdminPassword()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r2 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r2 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : r1 = interfaceinvoke $r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-admin-json")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : r1 = interfaceinvoke $r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-admin-json") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : if r1 == null
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : if r1 == null >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch_admin_password")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch_admin_password") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r5 = (java.lang.String) $r4
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : return $r5
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.getLogSearchAdminPassword : return $r5 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : if r2 == null
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : if r2 == null >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : if r3 == null
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : if r3 == null >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : $r9 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : $r9 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("Credential found in config, will be used to connect to LogSearch")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("Credential found in config, will be used to connect to LogSearch") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : $r10 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection networkConnection>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : $r10 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection networkConnection> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : $r11 = staticinvoke <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String createEncodedCredentials(java.lang.String,java.lang.String)>(r2, r3)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : $r11 = staticinvoke <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: java.lang.String createEncodedCredentials(java.lang.String,java.lang.String)>(r2, r3) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r8 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r7)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : $r8 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r7) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : return $r8
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createEncodedCredentials : return $r8 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : interfaceinvoke $r10.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection: void setupBasicAuthentication(java.net.HttpURLConnection,java.lang.String)>(r1, $r11)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : interfaceinvoke $r10.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection: void setupBasicAuthentication(java.net.HttpURLConnection,java.lang.String)>(r1, $r11) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : goto [?= return]
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.setupCredentials : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r14 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection networkConnection>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r14 = r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection networkConnection> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r3 = interfaceinvoke $r14.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection: java.lang.StringBuffer readQueryResponseFromServer(java.net.HttpURLConnection)>(r2)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r3 = interfaceinvoke $r14.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl$NetworkConnection: java.lang.StringBuffer readQueryResponseFromServer(java.net.HttpURLConnection)>(r2) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void addCookiesToCookieStoreFromResponse(java.net.HttpURLConnection)>(r2)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke r0.<org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: void addCookiesToCookieStoreFromResponse(java.net.HttpURLConnection)>(r2) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Set-Cookie")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Set-Cookie") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : r3 = (java.util.List) $r7
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : r3 = (java.util.List) $r7 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : if r3 == null
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.addCookiesToCookieStoreFromResponse : if r3 == null >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r15 = new java.io.StringReader
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r15 = new java.io.StringReader >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r16 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r16 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke $r15.<java.io.StringReader: void <init>(java.lang.String)>($r16)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : specialinvoke $r15.<java.io.StringReader: void <init>(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r5 = staticinvoke <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.codehaus.jackson.map.ObjectReader createObjectReader(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/logging/LogQueryResponse;")
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : r5 = staticinvoke <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.codehaus.jackson.map.ObjectReader createObjectReader(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/logging/LogQueryResponse;") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createObjectReader : r1 = staticinvoke <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.codehaus.jackson.map.ObjectMapper createJSONObjectMapper()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createObjectReader : r1 = staticinvoke <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.codehaus.jackson.map.ObjectMapper createJSONObjectMapper()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r2 = new org.codehaus.jackson.map.ObjectMapper
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r2 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : specialinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: void <init>()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : specialinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r3 = new org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r3 = new org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : specialinvoke $r3.<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: void <init>()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : specialinvoke $r3.<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>($r3)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>($r3) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig getSerializationConfig()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig getSerializationConfig()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r6 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : $r6 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>($r6)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>($r6) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : return $r2
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createJSONObjectMapper : return $r2 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createObjectReader : $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(java.lang.Class)>(r0)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createObjectReader : $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(java.lang.Class)>(r0) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createObjectReader : return $r2
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.createObjectReader : return $r2 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r17 = virtualinvoke r5.<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.Reader)>($r15)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r17 = virtualinvoke r5.<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.Reader)>($r15) >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.setStartIndex : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String startIndex> = r1
org.apache.ambari.server.controller.logging.LogQueryResponse.setStartIndex : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String startIndex> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.setPageSize : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String pageSize> = r1
org.apache.ambari.server.controller.logging.LogQueryResponse.setPageSize : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String pageSize> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.setTotalCount : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String totalCount> = r1
org.apache.ambari.server.controller.logging.LogQueryResponse.setTotalCount : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String totalCount> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.setResultSize : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String resultSize> = r1
org.apache.ambari.server.controller.logging.LogQueryResponse.setResultSize : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String resultSize> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.setQueryTimeMS : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String queryTimeMS> = r1
org.apache.ambari.server.controller.logging.LogQueryResponse.setQueryTimeMS : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.lang.String queryTimeMS> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setClusterName : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String clusterName> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setClusterName : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setLogMethod : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logMethod> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setLogMethod : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logMethod> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setLogLevel : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logLevel> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setLogLevel : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logLevel> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setEventCount : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String eventCount> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setEventCount : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String eventCount> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setIpAddress : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String ipAddress> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setIpAddress : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String ipAddress> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setComponentType : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String componentType> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setComponentType : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String componentType> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setSequenceNumber : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String sequenceNumber> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setSequenceNumber : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String sequenceNumber> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setLogFilePath : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logFilePath> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setLogFilePath : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logFilePath> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setSourceFile : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String sourceFile> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setSourceFile : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String sourceFile> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setSourceFileLineNumber : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String sourceFileLineNumber> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setSourceFileLineNumber : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String sourceFileLineNumber> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setHostName : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String hostName> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setHostName : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String hostName> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setLogMessage : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logMessage> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setLogMessage : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logMessage> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setLoggerName : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String loggerName> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setLoggerName : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String loggerName> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setId : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String id> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setId : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String id> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setMessageMD5 : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String messageMD5> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setMessageMD5 : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String messageMD5> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setLogTime : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logTime> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setLogTime : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logTime> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setEventMD5 : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String eventMD5> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setEventMD5 : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String eventMD5> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setLogFileLineNumber : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logFileLineNumber> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setLogFileLineNumber : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logFileLineNumber> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setTtl : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String ttl> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setTtl : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String ttl> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setExpirationTime : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String expirationTime> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setExpirationTime : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String expirationTime> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.setVersion : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String version> = r1
org.apache.ambari.server.controller.logging.LogLineResult.setVersion : r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String version> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.setLogList : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List listOfResults> = r1
org.apache.ambari.server.controller.logging.LogQueryResponse.setLogList : r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List listOfResults> = r1 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r18 = (org.apache.ambari.server.controller.logging.LogQueryResponse) $r17
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : $r18 = (org.apache.ambari.server.controller.logging.LogQueryResponse) $r17 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : return $r18
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendQueryRequest : return $r18 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : if r4 == null
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : if r4 == null >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r10 = virtualinvoke r4.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List getListOfResults()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r10 = virtualinvoke r4.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List getListOfResults()>() >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.getListOfResults : $r1 = r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List listOfResults>
org.apache.ambari.server.controller.logging.LogQueryResponse.getListOfResults : $r1 = r0.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List listOfResults> >>>>>>>> org.apache.ambari.server.controller.logging.LogQueryResponse.getListOfResults : return $r1
org.apache.ambari.server.controller.logging.LogQueryResponse.getListOfResults : return $r1 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : if $r10 == null
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : if $r10 == null >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r11 = virtualinvoke r4.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List getListOfResults()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r11 = virtualinvoke r4.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List getListOfResults()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : if $z0 != 0
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r12 = virtualinvoke r4.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List getListOfResults()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r12 = virtualinvoke r4.<org.apache.ambari.server.controller.logging.LogQueryResponse: java.util.List getListOfResults()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : r5 = (org.apache.ambari.server.controller.logging.LogLineResult) $r13
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : r5 = (org.apache.ambari.server.controller.logging.LogLineResult) $r13 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r14 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r14 = <org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r15 = virtualinvoke r5.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFilePath()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r15 = virtualinvoke r5.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFilePath()>() >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.getLogFilePath : $r1 = r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logFilePath>
org.apache.ambari.server.controller.logging.LogLineResult.getLogFilePath : $r1 = r0.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String logFilePath> >>>>>>>> org.apache.ambari.server.controller.logging.LogLineResult.getLogFilePath : return $r1
org.apache.ambari.server.controller.logging.LogLineResult.getLogFilePath : return $r1 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("For componentName = {}, log file name is = {}", r1, $r15)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("For componentName = {}, log file name is = {}", r1, $r15) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r16 = virtualinvoke r5.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFilePath()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r16 = virtualinvoke r5.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFilePath()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r16)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImpl.sendGetLogFileNamesRequest : return $r17
