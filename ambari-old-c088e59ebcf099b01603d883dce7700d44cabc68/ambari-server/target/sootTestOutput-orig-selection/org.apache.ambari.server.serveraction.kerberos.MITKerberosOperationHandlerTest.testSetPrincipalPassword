org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[1] = class "Ljava/util/Map;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r0[2] = class "Lorg/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r4 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getExecutable", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.beforeKDCKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.reflect.Method methodGetExecutable> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r0 = newarray (java.lang.Class)[0]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r0 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isOpen", $r0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isOpen", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodIsOpen> = $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodIsOpen> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r5 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r5 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3 = newarray (java.lang.Class)[2]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3 = newarray (java.lang.Class)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r4 = <java.lang.Boolean: java.lang.Class TYPE>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r4 = <java.lang.Boolean: java.lang.Class TYPE> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[1] = $r4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r3[1] = $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("principalExists", $r3)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("principalExists", $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodPrincipalExists> = $r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodPrincipalExists> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r8 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r8 = class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7 = newarray (java.lang.Class)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7[0] = class "Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r7[0] = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("invokeKAdmin", $r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("invokeKAdmin", $r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodInvokeKAdmin> = $r9
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClassMITKerberosOperationHandlerTestC : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodInvokeKAdmin> = $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r18 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r18 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler) $r5
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : r2 = (org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : interfaceinvoke $r6.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : return r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMockedHandler : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setPrincipalPassword : $r3 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.Integer setPrincipalPassword(java.lang.String,java.lang.String,boolean)>(r1, r2, z0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setPrincipalPassword : $r3 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: java.lang.Integer setPrincipalPassword(java.lang.String,java.lang.String,boolean)>(r1, r2, z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean principalExists(java.lang.String,boolean)>(r1, z0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler: boolean principalExists(java.lang.String,boolean)>(r1, z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : if $z2 != 0
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : if $z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : return $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setPrincipalPassword : return $r3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setPrincipalPassword : return $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r4 = new org.apache.ambari.server.serveraction.kerberos.KerberosPrincipalDoesNotExistException
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r4 = new org.apache.ambari.server.serveraction.kerberos.KerberosPrincipalDoesNotExistException >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r5 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r5[0] = r1
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r5[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Principal does not exist while attempting to set its password: %s", $r5)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Principal does not exist while attempting to set its password: %s", $r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : specialinvoke $r4.<org.apache.ambari.server.serveraction.kerberos.KerberosPrincipalDoesNotExistException: void <init>(java.lang.String)>($r6)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : specialinvoke $r4.<org.apache.ambari.server.serveraction.kerberos.KerberosPrincipalDoesNotExistException: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandler.setPrincipalPassword : throw $r4
