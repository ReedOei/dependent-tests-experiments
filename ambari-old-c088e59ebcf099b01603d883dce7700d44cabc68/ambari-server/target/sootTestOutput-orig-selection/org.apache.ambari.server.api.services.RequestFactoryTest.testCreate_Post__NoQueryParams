org.apache.ambari.server.api.services.RequestFactory.createRequest : $r6 = <org.apache.ambari.server.api.services.RequestFactory$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type> >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : $i0 = virtualinvoke r4.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>()
org.apache.ambari.server.api.services.RequestFactory.createRequest : $i0 = virtualinvoke r4.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : $i1 = $r6[$i0]
org.apache.ambari.server.api.services.RequestFactory.createRequest : $i1 = $r6[$i0] >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : tableswitch($i1) {     case 1:
org.apache.ambari.server.api.services.RequestFactory.createRequest : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : $r8 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: org.apache.ambari.server.api.services.Request createPostRequest(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r5)
org.apache.ambari.server.api.services.RequestFactory.createRequest : $r8 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: org.apache.ambari.server.api.services.Request createPostRequest(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r5) >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $r5 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST>
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $r5 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST> >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $z1 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: boolean applyDirectives(org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>($r5, r2, r3, r4)
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $z1 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: boolean applyDirectives(org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>($r5, r2, r3, r4) >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : r5 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: java.util.Map getQueryParameters(javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.RequestBody)>(r3, r2)
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : r5 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: java.util.Map getQueryParameters(javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.RequestBody)>(r3, r2) >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r7 = new java.util.HashMap
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r8 = interfaceinvoke r1.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r8 = interfaceinvoke r1.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r9 = interfaceinvoke $r8.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r9 = interfaceinvoke $r8.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r19 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r19 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if $z0 == 0
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r21 = virtualinvoke r2.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r21 = virtualinvoke r2.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if r21 == null
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if r21 == null >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : return $r7
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : return $r7 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : z2 = 1
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : z2 = 1 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : if $z0 != 0
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : return z2
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : return z2 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : if $z1 != 0
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $z2 = 0
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $z2 = 0 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : if $z2 == 0
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : r8 = new org.apache.ambari.server.api.services.PostRequest
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : r8 = new org.apache.ambari.server.api.services.PostRequest >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $r6 = r8
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $r6 = r8 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : specialinvoke r8.<org.apache.ambari.server.api.services.PostRequest: void <init>(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r4)
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : specialinvoke r8.<org.apache.ambari.server.api.services.PostRequest: void <init>(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPostRequest : return $r6
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : return $r6 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : return $r8
org.apache.ambari.server.api.services.RequestFactory.createRequest : return $r8 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getResource : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.getResource : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getResource : return $r1
org.apache.ambari.server.api.services.BaseRequest.getResource : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getBody : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.getBody : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getBody : return $r1
org.apache.ambari.server.api.services.BaseRequest.getBody : return $r1 >>>>>>>> org.apache.ambari.server.api.services.PostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST>
org.apache.ambari.server.api.services.PostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST> >>>>>>>> org.apache.ambari.server.api.services.PostRequest.getRequestType : return $r1
