org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.controller.AmbariManagementController val$controller>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.controller.AmbariManagementController val$controller> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.state.Clusters val$clusters>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.state.Clusters val$clusters> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/google/gson/Gson;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/google/gson/Gson;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.gson.Gson val$gson>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.gson.Gson val$gson> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/WidgetDAO;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/WidgetDAO;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.orm.dao.WidgetDAO val$widgetDAO>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.orm.dao.WidgetDAO val$widgetDAO> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.api.services.AmbariMetaInfo val$metaInfo>
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9: org.apache.ambari.server.api.services.AmbariMetaInfo val$metaInfo> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18)
org.apache.ambari.server.upgrade.UpgradeCatalog260Test$9.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r2 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/configuration/Configuration;"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/configuration/Configuration;" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r1 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r5
