org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : if r3 != null >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r10 = null
org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r10 = null >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : goto [?= $r5 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r4, $r10)]
org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : goto [?= $r5 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r4, $r10)] >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r5 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r4, $r10)
org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r5 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r4, $r10) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r6 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r6 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r4 = virtualinvoke $r6.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getCurrentSessionId()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r4 = virtualinvoke $r6.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getCurrentSessionId()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r4 == null
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r4 == null >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r22 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r22 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r23 = virtualinvoke $r22.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getSessionCookie()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r23 = virtualinvoke $r22.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getSessionCookie()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r31 == null
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r31 == null >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z1 = interfaceinvoke r31.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z1 = interfaceinvoke r31.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z1 == 0
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r27 = new java.util.HashMap
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r27 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r27.<java.util.HashMap: void <init>(java.util.Map)>(r31)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r27.<java.util.HashMap: void <init>(java.util.Map)>(r31) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r31 = $r27
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r31 = $r27 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r28 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cookie")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r28 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cookie") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r33 = (java.lang.String) $r28
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r33 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r29 = staticinvoke <org.apache.ambari.server.controller.internal.URLStreamProvider: java.lang.String appendCookie(java.lang.String,java.lang.String)>(r33, r32)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r29 = staticinvoke <org.apache.ambari.server.controller.internal.URLStreamProvider: java.lang.String appendCookie(java.lang.String,java.lang.String)>(r33, r32) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if r0 == null
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if r0 == null >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $i0 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $i0 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if $i0 != 0
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ")
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ") >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : return $r6
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : return $r6 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", $r29)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", $r29) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r34 = new java.util.HashMap
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r34 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r34.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r34.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r36 = interfaceinvoke r31.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r36 = interfaceinvoke r31.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r37 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r37 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z2 == 0
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r16 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r16 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r5 = (java.util.Map$Entry) $r16
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r5 = (java.util.Map$Entry) $r16 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r19 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r18)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r19 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r19)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r19) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : goto [?= $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : goto [?= $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r7 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.internal.URLStreamProvider streamProvider>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r7 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.internal.URLStreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r8 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r8 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z0 == 0
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r38 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r38 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r12 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAmbariServerURI(java.lang.String)>($r38)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r12 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAmbariServerURI(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r13 = virtualinvoke $r7.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>($r12, r2, r3, $r34)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r13 = virtualinvoke $r7.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>($r12, r2, r3, $r34) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r14 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.net.HttpURLConnection)>($r13)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r14 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.net.HttpURLConnection)>($r13) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $i1 = <org.apache.ambari.server.proxy.ProxyService: int HTTP_ERROR_RANGE_START>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $i1 = <org.apache.ambari.server.proxy.ProxyService: int HTTP_ERROR_RANGE_START> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if i0 < $i1
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if i0 < $i1 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r2
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r14
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r14 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : return $r5
