org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r8 = <org.apache.ambari.server.bootstrap.BSHostStatusCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request directory ")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request directory ") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r10 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r10 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.io.File requestIdDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r12)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r13 = new java.util.ArrayList
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hostStatus> = $r13
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hostStatus> = $r13 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r14 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hosts>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r14 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hosts> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $r14 != null
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $r14 != null >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r16 = <org.apache.ambari.server.bootstrap.BSHostStatusCollector: org.slf4j.Logger LOG>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r16 = <org.apache.ambari.server.bootstrap.BSHostStatusCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HostList for polling on ")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HostList for polling on ") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r18 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hosts>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r18 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hosts> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>($r20)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r21 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hosts>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r21 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hosts> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r3 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r3 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z0 == 0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z0 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r22 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r22 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r4 = (java.lang.String) $r22
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r4 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r23 = new org.apache.ambari.server.bootstrap.BSHostStatus
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r23 = new org.apache.ambari.server.bootstrap.BSHostStatus >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setHostName(java.lang.String)>(r4)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setHostName(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.setHostName : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String hostName> = r1
org.apache.ambari.server.bootstrap.BSHostStatus.setHostName : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String hostName> = r1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r24 = new java.io.File
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r24 = new java.io.File >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r26 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r26 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.io.File requestIdDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r25 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r25 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".done")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".done") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, $r29)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, $r29) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r30 = new java.io.File
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r30 = new java.io.File >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r32 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r32 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.io.File requestIdDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r31 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".log")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".log") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r30.<java.io.File: void <init>(java.io.File,java.lang.String)>($r32, $r35)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r30.<java.io.File: void <init>(java.io.File,java.lang.String)>($r32, $r35) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r36 = <org.apache.ambari.server.bootstrap.BSHostStatusCollector: org.slf4j.Logger LOG>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r36 = <org.apache.ambari.server.bootstrap.BSHostStatusCollector: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z1 = interfaceinvoke $r36.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z1 = interfaceinvoke $r36.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z1 == 0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z1 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z2 = virtualinvoke $r24.<java.io.File: boolean exists()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z2 = virtualinvoke $r24.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z2 != 0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z2 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatus(java.lang.String)>("FAILED")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatus(java.lang.String)>("FAILED") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.setStatus : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String status> = r1
org.apache.ambari.server.bootstrap.BSHostStatus.setStatus : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r37 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r24)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r37 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r24) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r61 = virtualinvoke $r37.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r61 = virtualinvoke $r37.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z3 = virtualinvoke r61.<java.lang.String: boolean equals(java.lang.Object)>("0")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z3 = virtualinvoke r61.<java.lang.String: boolean equals(java.lang.Object)>("0") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z3 == 0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z3 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatus(java.lang.String)>("DONE")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatus(java.lang.String)>("DONE") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: void updateStatus(org.apache.ambari.server.bootstrap.BSHostStatus,java.lang.String)>($r23, r61)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: void updateStatus(org.apache.ambari.server.bootstrap.BSHostStatus,java.lang.String)>($r23, r61) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusCode(java.lang.String)>(r2)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusCode(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.setStatusCode : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String statusCode> = r1
org.apache.ambari.server.bootstrap.BSHostStatus.setStatusCode : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String statusCode> = r1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i3 = -1
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i3 = -1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= (branch)]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : lookupswitch(i3) {     case 2:
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : lookupswitch(i3) {     case 2: >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r3 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getLog()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r3 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getLog()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.getLog : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String log>
org.apache.ambari.server.bootstrap.BSHostStatus.getLog : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String log> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.getLog : return $r1
org.apache.ambari.server.bootstrap.BSHostStatus.getLog : return $r1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if null == $r3
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if null == $r3 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= $z8 = virtualinvoke $r30.<java.io.File: boolean exists()>()]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= $z8 = virtualinvoke $r30.<java.io.File: boolean exists()>()] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z8 = virtualinvoke $r30.<java.io.File: boolean exists()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z8 = virtualinvoke $r30.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z8 != 0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z8 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r62 = ""
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r62 = "" >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r63 = null
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r63 = null >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r38 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r38 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r39 = new java.io.BufferedReader
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r39 = new java.io.BufferedReader >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r40 = new java.io.FileReader
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r40 = new java.io.FileReader >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r40.<java.io.FileReader: void <init>(java.io.File)>($r30)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r40.<java.io.FileReader: void <init>(java.io.File)>($r30) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r39.<java.io.BufferedReader: void <init>(java.io.Reader)>($r40)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : specialinvoke $r39.<java.io.BufferedReader: void <init>(java.io.Reader)>($r40) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r63 = $r39
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r63 = $r39 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r65 = virtualinvoke $r39.<java.io.BufferedReader: java.lang.String readLine()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r65 = virtualinvoke $r39.<java.io.BufferedReader: java.lang.String readLine()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if null == $r65
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if null == $r65 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z4 = virtualinvoke $r65.<java.lang.String: boolean startsWith(java.lang.String)>("tcgetattr:")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z4 = virtualinvoke $r65.<java.lang.String: boolean startsWith(java.lang.String)>("tcgetattr:") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z4 != 0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z4 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z5 = virtualinvoke $r65.<java.lang.String: boolean startsWith(java.lang.String)>("tput:")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $z5 = virtualinvoke $r65.<java.lang.String: boolean startsWith(java.lang.String)>("tput:") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z5 == 0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if $z5 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $i0 = virtualinvoke $r38.<java.lang.StringBuilder: int length()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $i0 = virtualinvoke $r38.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if 0 != $i0
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if 0 != $i0 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $i1 = virtualinvoke $r65.<java.lang.String: int length()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $i1 = virtualinvoke $r65.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if 0 != $i1
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if 0 != $i1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $i2 = virtualinvoke $r65.<java.lang.String: int indexOf(java.lang.String)>("\\n")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $i2 = virtualinvoke $r65.<java.lang.String: int indexOf(java.lang.String)>("\\n") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if -1 == $i2
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : if -1 == $i2 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= $r65 = virtualinvoke $r39.<java.io.BufferedReader: java.lang.String readLine()>()]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= $r65 = virtualinvoke $r39.<java.io.BufferedReader: java.lang.String readLine()>()] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r62 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : r62 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>($r39)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>($r39) >>>>>>>> org.apache.ambari.server.utils.Closeables.closeSilently : staticinvoke <org.apache.ambari.server.utils.Closeables: void close(java.io.Closeable,org.slf4j.Logger)>(r0, null)
org.apache.ambari.server.utils.Closeables.closeSilently : staticinvoke <org.apache.ambari.server.utils.Closeables: void close(java.io.Closeable,org.slf4j.Logger)>(r0, null) >>>>>>>> org.apache.ambari.server.utils.Closeables.close : if r0 == null
org.apache.ambari.server.utils.Closeables.close : if r0 == null >>>>>>>> org.apache.ambari.server.utils.Closeables.close : interfaceinvoke r0.<java.io.Closeable: void close()>()
org.apache.ambari.server.utils.Closeables.close : interfaceinvoke r0.<java.io.Closeable: void close()>() >>>>>>>> org.apache.ambari.server.utils.Closeables.close : goto [?= return]
org.apache.ambari.server.utils.Closeables.close : goto [?= return] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setLog(java.lang.String)>(r62)]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setLog(java.lang.String)>(r62)] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setLog(java.lang.String)>(r62)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : virtualinvoke $r23.<org.apache.ambari.server.bootstrap.BSHostStatus: void setLog(java.lang.String)>(r62) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.setLog : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String log> = r1
org.apache.ambari.server.bootstrap.BSHostStatus.setLog : r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String log> = r1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r67 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hostStatus>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : $r67 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hostStatus> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : interfaceinvoke $r67.<java.util.List: boolean add(java.lang.Object)>($r23)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : interfaceinvoke $r67.<java.util.List: boolean add(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.run : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.getHostStatus : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hostStatus>
org.apache.ambari.server.bootstrap.BSHostStatusCollector.getHostStatus : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatusCollector: java.util.List hostStatus> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.getHostStatus : return $r1
org.apache.ambari.server.bootstrap.BSHostStatusCollector.getHostStatus : return $r1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.getHostName : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String hostName>
org.apache.ambari.server.bootstrap.BSHostStatus.getHostName : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String hostName> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.getHostName : return $r1
org.apache.ambari.server.bootstrap.BSHostStatus.getHostName : return $r1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.getStatus : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String status>
org.apache.ambari.server.bootstrap.BSHostStatus.getStatus : $r1 = r0.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String status> >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatus.getStatus : return $r1
