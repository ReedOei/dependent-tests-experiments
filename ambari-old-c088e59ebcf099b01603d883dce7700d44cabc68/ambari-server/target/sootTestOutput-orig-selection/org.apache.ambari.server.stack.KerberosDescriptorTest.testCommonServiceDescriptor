org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r32 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.access$000 : $r0 = <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewDirectoryWatcher.access$000 : $r0 = <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.access$000 : return $r0
org.apache.ambari.server.view.ViewDirectoryWatcher.access$000 : return $r0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Cancelling the directory watcher", $r31)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Cancelling the directory watcher", $r31) >>>>>>>> org.apache.ambari.server.stack.StackManagerTest.initStack : $r0 = staticinvoke <org.apache.ambari.server.stack.StackManagerTest: org.apache.ambari.server.stack.StackManager createTestStackManager()>()
org.apache.ambari.server.stack.StackManagerTest.initStack : $r0 = staticinvoke <org.apache.ambari.server.stack.StackManagerTest: org.apache.ambari.server.stack.StackManager createTestStackManager()>() >>>>>>>> org.apache.ambari.server.stack.StackManagerTest.createTestStackManager : $r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()
org.apache.ambari.server.stack.StackManagerTest.createTestStackManager : $r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>() >>>>>>>> org.apache.ambari.server.stack.StackManagerTest.createTestStackManager : $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("stacks")
org.apache.ambari.server.stack.StackManagerTest.createTestStackManager : $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("stacks") >>>>>>>> org.apache.ambari.server.stack.StackManagerTest.createTestStackManager : r0 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackManagerTest.createTestStackManager : r0 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r2 = class "Lorg/apache/ambari/server/stack/KerberosDescriptorTest;"
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r2 = class "Lorg/apache/ambari/server/stack/KerberosDescriptorTest;" >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : r0 = virtualinvoke $r2.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/")
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : r0 = virtualinvoke $r2.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r3 = new java.io.File
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r3 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r4 = new java.io.File
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r4 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r5 = virtualinvoke r0.<java.net.URL: java.lang.String getFile()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r5 = virtualinvoke r0.<java.net.URL: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r6 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r6 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r7 = virtualinvoke $r6.<java.io.File: java.io.File getParentFile()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r7 = virtualinvoke $r6.<java.io.File: java.io.File getParentFile()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "src/main/resources")
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "src/main/resources") >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r3)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $z0 = virtualinvoke $r3.<java.io.File: boolean canRead()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $z0 = virtualinvoke $r3.<java.io.File: boolean canRead()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r8 = new java.io.File
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r8 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "stacks")
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "stacks") >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File stacksDirectory> = $r8
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File stacksDirectory> = $r8 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r9 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File stacksDirectory>
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r9 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File stacksDirectory> >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r9)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r10 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File stacksDirectory>
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r10 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File stacksDirectory> >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $z1 = virtualinvoke $r10.<java.io.File: boolean canRead()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $z1 = virtualinvoke $r10.<java.io.File: boolean canRead()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z1)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r11 = new java.io.File
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r11 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "common-services")
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "common-services") >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File commonServicesDirectory> = $r11
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File commonServicesDirectory> = $r11 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r12 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File commonServicesDirectory>
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r12 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File commonServicesDirectory> >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r12)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r13 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File commonServicesDirectory>
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $r13 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.io.File commonServicesDirectory> >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $z2 = virtualinvoke $r13.<java.io.File: boolean canRead()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : $z2 = virtualinvoke $r13.<java.io.File: boolean canRead()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z2)
org.apache.ambari.server.stack.KerberosDescriptorTest.beforeClass : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : $r4 = new com.networknt.schema.JsonSchemaFactory
org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : $r4 = new com.networknt.schema.JsonSchemaFactory >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : specialinvoke $r4.<com.networknt.schema.JsonSchemaFactory: void <init>()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : specialinvoke $r4.<com.networknt.schema.JsonSchemaFactory: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : $r6 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : $r6 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : r3 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1)
org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : r3 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.getJsonSchemaFromPath : $r7 = virtualinvoke $r4.<com.networknt.schema.JsonSchemaFactory: com.networknt.schema.JsonSchema getSchema(java.io.InputStream)>(r3)
