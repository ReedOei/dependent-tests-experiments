org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManagerFactory;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r2 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.stack.StackManagerFactory val$mockStackManagerFactory>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r2 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.stack.StackManagerFactory val$mockStackManagerFactory> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r4 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: javax.persistence.EntityManager val$mockEntityManager>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r4 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: javax.persistence.EntityManager val$mockEntityManager> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r6 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r6 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r8 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.Clusters val$mockClusters>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r8 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.Clusters val$mockClusters> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r10 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.stack.OsFamily val$mockOSFamily>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r10 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.stack.OsFamily val$mockOSFamily> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> = r0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> = r0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void closeConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void closeConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r1 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r1 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : if $r1 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : if $r1 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r2 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r2 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : interfaceinvoke $r2.<java.sql.Connection: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : interfaceinvoke $r2.<java.sql.Connection: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.dao.MetainfoDAO metainfoDAO> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.dao.MetainfoDAO metainfoDAO> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setConnection : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = r0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setConnection : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = r0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $r4 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $r4 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Checking for more than 1 configuration of the same type being enabled.")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Checking for more than 1 configuration of the same type being enabled.") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r1 = staticinvoke <com.google.common.collect.HashMultimap: com.google.common.collect.HashMultimap create()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r1 = staticinvoke <com.google.common.collect.HashMultimap: com.google.common.collect.HashMultimap create()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r28 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r28 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r29 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r29 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.ensureConnection : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.ensureConnection : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.ensureConnection : if $r0 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.ensureConnection : if $r0 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r29 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r29 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r28 = interfaceinvoke r29.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select c.cluster_name, cc.type_name from clusterconfig cc join clusters c on cc.cluster_id=c.cluster_id group by c.cluster_name, cc.type_name having sum(selected) > 1")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r28 = interfaceinvoke r29.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select c.cluster_name, cc.type_name from clusterconfig cc join clusters c on cc.cluster_id=c.cluster_id group by c.cluster_name, cc.type_name having sum(selected) > 1") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if r28 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $r6 = interfaceinvoke r1.<com.google.common.collect.Multimap: java.util.Set keySet()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $r6 = interfaceinvoke r1.<com.google.common.collect.Multimap: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r30 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : r30 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if $z1 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : interfaceinvoke r28.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : interfaceinvoke r28.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : interfaceinvoke r29.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : interfaceinvoke r29.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForConfigsSelectedMoreThanOnce : goto [?= return]
