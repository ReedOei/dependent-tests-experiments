org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[2]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0 = newarray (java.lang.Class)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[0] = class "Ljava/util/Properties;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[0] = class "Ljava/util/Properties;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[1] = class "[Ljavax/naming/ldap/Control;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r0[1] = class "[Ljavax/naming/ldap/Control;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createInitialLdapContext", $r0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createInitialLdapContext", $r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext> = $r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.reflect.Method methodCreateInitialLdapContext> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getInjector : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getInjector : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getInjector : return $r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getInjector : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : return $r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r6 = (java.lang.String) $r5
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r6
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r7 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = (java.lang.String) $r9
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r10
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r11 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r11 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = new javax.naming.ldap.LdapName
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = new javax.naming.ldap.LdapName >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r13 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r13 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r12.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r13)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r12.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r12
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r12 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r3 = new java.util.Properties
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r3 = new java.util.Properties >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r3.<java.util.Properties: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r3.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r5)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r7 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r7 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r9 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r9 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r10)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r15 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r15 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z1 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration: boolean validateKerberosOperationSSLCertTrust()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $z1 = virtualinvoke $r15.<org.apache.ambari.server.configuration.Configuration: boolean validateKerberosOperationSSLCertTrust()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r16 = class "Lorg/apache/ambari/server/security/InternalSSLSocketFactoryTrusting;"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r16 = class "Lorg/apache/ambari/server/security/InternalSSLSocketFactoryTrusting;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r17)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r43 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r3, null)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r43 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r3, null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r43
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r43 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r14
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r14 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10: javax.naming.directory.SearchControls answer()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10: javax.naming.directory.SearchControls answer()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/naming/directory/SearchControls;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/naming/directory/SearchControls;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : r1 = (javax.naming.directory.SearchControls) $r3
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : r1 = (javax.naming.directory.SearchControls) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r4 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r4[0] = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : $r4[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r4)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : return r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : return r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : return $r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$10.answer : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r15
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r17 = (java.lang.String) $r16
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r17
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r17 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r2 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean principalExists(java.lang.String,boolean)>(r1, z0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean principalExists(java.lang.String,boolean)>(r1, z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String getDefaultRealm()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String getDefaultRealm()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal valueOf(java.lang.String,java.lang.String)>(r1, $r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal valueOf(java.lang.String,java.lang.String)>(r1, $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r0 != null
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r0 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r5 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r5 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r2 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r2 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r10 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r10 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r10 == null
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r10 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r10 = r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r10 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r11 = new org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r11 = new org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : specialinvoke $r11.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r3, r4, r10)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : specialinvoke $r11.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r3, r4, r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : return $r11
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : return $r11 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : return $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r4 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r4 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String normalizedPrincipal>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String normalizedPrincipal> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r5 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String findPrincipalDN(java.lang.String)>($r4)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r5 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String findPrincipalDN(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r13 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r13 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r1 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r14 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r14 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r4 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r4[0] = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r4[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(userPrincipalName=%s)", $r4)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(userPrincipalName=%s)", $r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r14 = interfaceinvoke $r5.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>($r6, $r7, $r8)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r14 = interfaceinvoke $r5.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>($r6, $r7, $r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r14 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r14 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : goto [?= return r13]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : goto [?= return r13] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : return r13
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : return r13 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $r5 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $r5 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z2 = 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z2 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : return $z2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : return $z2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r72 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getRealm()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r72 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getRealm()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String realm>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String realm> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r72 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r72 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r10 = new java.util.HashMap
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r10 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r10.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r10.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r11 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r11 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("normalized_principal", $r11)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("normalized_principal", $r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r13 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r13 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String principalName>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String principalName> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_name", $r13)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_name", $r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r15 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrimary()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r15 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrimary()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String primary>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String primary> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_primary", $r15)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_primary", $r15) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r17 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getInstance()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r17 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getInstance()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String instance>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String instance> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_instance", $r17)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_instance", $r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm", r72)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm", r72) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r20 = virtualinvoke r72.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r20 = virtualinvoke r72.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm_lowercase", $r20)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm_lowercase", $r20) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("password", r2)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("password", r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("is_service", $r23)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("is_service", $r23) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r25 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r25 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("container_dn", $r25)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("container_dn", $r25) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r27 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r27 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r28 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha1Hex(java.lang.String)>($r27)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r28 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha1Hex(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest", $r28)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest", $r28) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r30 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r30 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r31 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha256Hex(java.lang.String)>($r30)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r31 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha256Hex(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_256", $r31)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_256", $r31) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r33 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r33 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r34 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha512Hex(java.lang.String)>($r33)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r34 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha512Hex(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_512", $r34)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_512", $r34) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Map processCreateTemplate(java.util.Map)>($r10)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Map processCreateTemplate(java.util.Map)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $r4 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $r4 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r18 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r18 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r5 = new java.io.StringWriter
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r5 = new java.io.StringWriter >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r5.<java.io.StringWriter: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r5.<java.io.StringWriter: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r6)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r19 = "{\"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\"cn\": \"$principal_name\",#if( $is_service )  \"servicePrincipalName\": \"$principal_name\",#end\"userPrincipalName\": \"$normalized_principal\",\"unicodePwd\": \"$password\",\"accountExpires\": \"0\",\"userAccountControl\": \"66048\"}"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r19 = "{\"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\"cn\": \"$principal_name\",#if( $is_service )  \"servicePrincipalName\": \"$principal_name\",#end\"userPrincipalName\": \"$normalized_principal\",\"unicodePwd\": \"$password\",\"accountExpires\": \"0\",\"userAccountControl\": \"66048\"}" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : goto [?= $r7 = new org.apache.velocity.VelocityContext]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : goto [?= $r7 = new org.apache.velocity.VelocityContext] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r7 = new org.apache.velocity.VelocityContext
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r7 = new org.apache.velocity.VelocityContext >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r7.<org.apache.velocity.VelocityContext: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r7.<org.apache.velocity.VelocityContext: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z1 = staticinvoke <org.apache.velocity.app.Velocity: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.lang.String)>($r7, $r5, "Active Directory principal create template", r19)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z1 = staticinvoke <org.apache.velocity.app.Velocity: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.lang.String)>($r7, $r5, "Active Directory principal create template", r19) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r20 = virtualinvoke $r5.<java.io.StringWriter: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r20 = virtualinvoke $r5.<java.io.StringWriter: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r8 = new org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r8 = new org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1: void <init>(org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler)>(r0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1: void <init>(org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r3 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1: java.lang.reflect.Type getType()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r3 = virtualinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r10 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r20, r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r10 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r20, r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r18 = (java.util.Map) $r10
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r18 = (java.util.Map) $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : goto [?= return r18]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : goto [?= return r18] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : return r18
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : return r18 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r36 = new javax.naming.directory.BasicAttributes
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r36 = new javax.naming.directory.BasicAttributes >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r36.<javax.naming.directory.BasicAttributes: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r36.<javax.naming.directory.BasicAttributes: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r73 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r73 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r5 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r5 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r45 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r45 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r74 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r74 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z3 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z3 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z3 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z3 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r46 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r46 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r75 = (java.util.Map$Entry) $r46
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r75 = (java.util.Map$Entry) $r46 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r47 = interfaceinvoke r75.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r47 = interfaceinvoke r75.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r7 = (java.lang.String) $r47
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r7 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r76 = interfaceinvoke r75.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r76 = interfaceinvoke r75.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r48 = "unicodePwd"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r48 = "unicodePwd" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z4 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z4 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z4 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r49 = new javax.naming.directory.BasicAttribute
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r49 = new javax.naming.directory.BasicAttribute >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r49.<javax.naming.directory.BasicAttribute: void <init>(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r49.<javax.naming.directory.BasicAttribute: void <init>(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z5 = r76 instanceof java.util.Collection
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z5 = r76 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z5 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z5 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r54 = (java.util.Collection) r76
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r54 = (java.util.Collection) r76 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r8 = interfaceinvoke $r54.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r8 = interfaceinvoke $r54.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z9 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z9 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z9 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z9 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r49.<javax.naming.directory.Attribute: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r49.<javax.naming.directory.Attribute: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= $z9 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= $z9 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= interfaceinvoke $r36.<javax.naming.directory.Attributes: javax.naming.directory.Attribute put(javax.naming.directory.Attribute)>($r49)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= interfaceinvoke $r36.<javax.naming.directory.Attributes: javax.naming.directory.Attribute put(javax.naming.directory.Attribute)>($r49)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r36.<javax.naming.directory.Attributes: javax.naming.directory.Attribute put(javax.naming.directory.Attribute)>($r49)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r36.<javax.naming.directory.Attributes: javax.naming.directory.Attribute put(javax.naming.directory.Attribute)>($r49) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= $z3 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= $z3 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r50 = "cn"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r50 = "cn" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z6 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z6 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z6 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z6 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r76 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r76 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r73 = virtualinvoke r76.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r73 = virtualinvoke r76.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= interfaceinvoke $r49.<javax.naming.directory.Attribute: boolean add(java.lang.Object)>(r76)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= interfaceinvoke $r49.<javax.naming.directory.Attribute: boolean add(java.lang.Object)>(r76)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r49.<javax.naming.directory.Attribute: boolean add(java.lang.Object)>(r76)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r49.<javax.naming.directory.Attribute: boolean add(java.lang.Object)>(r76) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r51 = "sAMAccountName"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r51 = "sAMAccountName" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z7 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z7 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z7 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z7 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z11 = r76 instanceof java.lang.String
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z11 = r76 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z11 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z11 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r55 = new javax.naming.directory.BasicAttribute
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r55 = new javax.naming.directory.BasicAttribute >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r56 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r56 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r56[0] = r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r56[0] = r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r57 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\"%s\"", $r56)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r57 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\"%s\"", $r56) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r58 = virtualinvoke $r57.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16LE")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r58 = virtualinvoke $r57.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16LE") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r55.<javax.naming.directory.BasicAttribute: void <init>(java.lang.String,java.lang.Object)>("unicodePwd", $r58)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r55.<javax.naming.directory.BasicAttribute: void <init>(java.lang.String,java.lang.Object)>("unicodePwd", $r58) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r36.<javax.naming.directory.Attributes: javax.naming.directory.Attribute put(javax.naming.directory.Attribute)>($r55)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r36.<javax.naming.directory.Attributes: javax.naming.directory.Attribute put(javax.naming.directory.Attribute)>($r55) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r73 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r73 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r37 = new javax.naming.ldap.Rdn
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r37 = new javax.naming.ldap.Rdn >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r37.<javax.naming.ldap.Rdn: void <init>(java.lang.String,java.lang.Object)>("cn", r73)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r37.<javax.naming.ldap.Rdn: void <init>(java.lang.String,java.lang.Object)>("cn", r73) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r38 = new javax.naming.ldap.LdapName
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r38 = new javax.naming.ldap.LdapName >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r39 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r39 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r40 = virtualinvoke $r39.<javax.naming.ldap.LdapName: java.util.List getRdns()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r40 = virtualinvoke $r39.<javax.naming.ldap.LdapName: java.util.List getRdns()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r38.<javax.naming.ldap.LdapName: void <init>(java.util.List)>($r40)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r38.<javax.naming.ldap.LdapName: void <init>(java.util.List)>($r40) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $i0 = virtualinvoke $r38.<javax.naming.ldap.LdapName: int size()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $i0 = virtualinvoke $r38.<javax.naming.ldap.LdapName: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : virtualinvoke $r38.<javax.naming.ldap.LdapName: javax.naming.Name add(int,javax.naming.ldap.Rdn)>($i0, $r37)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : virtualinvoke $r38.<javax.naming.ldap.LdapName: javax.naming.Name add(int,javax.naming.ldap.Rdn)>($i0, $r37) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r42 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r42 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r42.<javax.naming.ldap.LdapContext: javax.naming.directory.DirContext createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)>($r38, $r36)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke $r42.<javax.naming.ldap.LdapContext: javax.naming.directory.DirContext createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)>($r38, $r36) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : goto [?= $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : return $r44
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : return $r44 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : if $r3 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : if $r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : interfaceinvoke $r4.<javax.naming.ldap.LdapContext: void close()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : interfaceinvoke $r4.<javax.naming.ldap.LdapContext: void close()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(0)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(0)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(0)
