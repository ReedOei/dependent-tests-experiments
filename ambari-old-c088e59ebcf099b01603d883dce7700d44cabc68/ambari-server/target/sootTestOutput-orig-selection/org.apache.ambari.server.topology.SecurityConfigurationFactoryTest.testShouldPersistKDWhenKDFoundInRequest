org.apache.ambari.server.topology.SecurityConfigurationFactoryTest.testKDReqPropertyMap : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactoryTest.testKDReqPropertyMap : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SecurityConfigurationFactoryTest.testKDReqPropertyMap : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactoryTest.testKDReqPropertyMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("test", "{\"test\":\"test json\"}")
org.apache.ambari.server.topology.SecurityConfigurationFactoryTest.testKDReqPropertyMap : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("test", "{\"test\":\"test json\"}") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactoryTest.testKDReqPropertyMap : return $r2
org.apache.ambari.server.topology.SecurityConfigurationFactoryTest.testKDReqPropertyMap : return $r2 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r6 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r6 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating security configuration from properties: {}", r1)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating security configuration from properties: {}", r1) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("security")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("security") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r2 = (java.util.Map) $r7
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r2 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r2 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r2 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("type")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("type") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r9 = (java.lang.String) $r8
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r3 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r9)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r3 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r3 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r3 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r10 = staticinvoke <com.google.common.base.Enums: com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/SecurityType;", r3)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r10 = staticinvoke <com.google.common.base.Enums: com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/SecurityType;", r3) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r11 = virtualinvoke $r10.<com.google.common.base.Optional: java.lang.Object orNull()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r11 = virtualinvoke $r10.<com.google.common.base.Optional: java.lang.Object orNull()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r4 = (org.apache.ambari.server.state.SecurityType) $r11
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r4 = (org.apache.ambari.server.state.SecurityType) $r11 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r12 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r12 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != $r12
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != $r12 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor_reference")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor_reference") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r17 = (java.lang.String) $r16
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r17)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r22 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r22 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found embedded descriptor: {}", r5)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found embedded descriptor: {}", r5) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r23 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: com.google.gson.Gson jsonSerializer>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r23 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: com.google.gson.Gson jsonSerializer> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r38 = virtualinvoke $r23.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r5, class "Ljava/util/Map;")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r38 = virtualinvoke $r23.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r5, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if z0 == 0
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = specialinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: java.lang.String persistKerberosDescriptor(java.lang.String)>(r38)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = specialinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: java.lang.String persistKerberosDescriptor(java.lang.String)>(r38) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r4 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r4 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Generating new kerberos descriptor reference ...")
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Generating new kerberos descriptor reference ...") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : r2 = specialinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: java.lang.String generateKerberosDescriptorReference()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : r2 = specialinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: java.lang.String generateKerberosDescriptorReference()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : r1 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : r1 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : $r3 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : $r3 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Generated new kerberos descriptor reference: {}", r1)
org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Generated new kerberos descriptor reference: {}", r1) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : return r1
org.apache.ambari.server.topology.SecurityConfigurationFactory.generateKerberosDescriptorReference : return r1 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r5 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.topology.KerberosDescriptorFactory kerberosDescriptorFactory>
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r5 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.topology.KerberosDescriptorFactory kerberosDescriptorFactory> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : r3 = virtualinvoke $r5.<org.apache.ambari.server.topology.KerberosDescriptorFactory: org.apache.ambari.server.topology.KerberosDescriptor createKerberosDescriptor(java.lang.String,java.lang.String)>(r2, r1)
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : r3 = virtualinvoke $r5.<org.apache.ambari.server.topology.KerberosDescriptorFactory: org.apache.ambari.server.topology.KerberosDescriptor createKerberosDescriptor(java.lang.String,java.lang.String)>(r2, r1) >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorFactory.createKerberosDescriptor : $r4 = new org.apache.ambari.server.topology.KerberosDescriptorImpl
org.apache.ambari.server.topology.KerberosDescriptorFactory.createKerberosDescriptor : $r4 = new org.apache.ambari.server.topology.KerberosDescriptorImpl >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorFactory.createKerberosDescriptor : specialinvoke $r4.<org.apache.ambari.server.topology.KerberosDescriptorImpl: void <init>(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.topology.KerberosDescriptorFactory.createKerberosDescriptor : specialinvoke $r4.<org.apache.ambari.server.topology.KerberosDescriptorImpl: void <init>(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorFactory.createKerberosDescriptor : return $r4
org.apache.ambari.server.topology.KerberosDescriptorFactory.createKerberosDescriptor : return $r4 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r6 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r6 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>("Persisting kerberos descriptor ...")
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>("Persisting kerberos descriptor ...") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r7 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.orm.dao.KerberosDescriptorDAO kerberosDescriptorDAO>
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r7 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.orm.dao.KerberosDescriptorDAO kerberosDescriptorDAO> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r8 = interfaceinvoke r3.<org.apache.ambari.server.topology.KerberosDescriptor: org.apache.ambari.server.orm.entities.KerberosDescriptorEntity toEntity()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : $r8 = interfaceinvoke r3.<org.apache.ambari.server.topology.KerberosDescriptor: org.apache.ambari.server.orm.entities.KerberosDescriptorEntity toEntity()>() >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : $r2 = new org.apache.ambari.server.orm.entities.KerberosDescriptorEntity
org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : $r2 = new org.apache.ambari.server.orm.entities.KerberosDescriptorEntity >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void <init>()>()
org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String getName()>()
org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.getName : $r1 = r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String name>
org.apache.ambari.server.topology.KerberosDescriptorImpl.getName : $r1 = r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String name> >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.getName : return $r1
org.apache.ambari.server.topology.KerberosDescriptorImpl.getName : return $r1 >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void setName(java.lang.String)>($r3)
org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void setName(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String getDescriptor()>()
org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String getDescriptor()>() >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.getDescriptor : $r1 = r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String descriptor>
org.apache.ambari.server.topology.KerberosDescriptorImpl.getDescriptor : $r1 = r0.<org.apache.ambari.server.topology.KerberosDescriptorImpl: java.lang.String descriptor> >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.getDescriptor : return $r1
org.apache.ambari.server.topology.KerberosDescriptorImpl.getDescriptor : return $r1 >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void setKerberosDescriptorText(java.lang.String)>($r4)
org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void setKerberosDescriptorText(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.setKerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_set_kerberosDescriptorText(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.setKerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_set_kerberosDescriptorText(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetchedForSet(java.lang.String)>("kerberosDescriptorText")
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetchedForSet(java.lang.String)>("kerberosDescriptorText") >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : $r2 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String kerberosDescriptorText>
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : $r2 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String kerberosDescriptorText> >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("kerberosDescriptorText", $r2, r1)
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("kerberosDescriptorText", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String kerberosDescriptorText> = r1
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_set_kerberosDescriptorText : r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String kerberosDescriptorText> = r1 >>>>>>>> org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : return $r2
org.apache.ambari.server.topology.KerberosDescriptorImpl.toEntity : return $r2 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : virtualinvoke $r7.<org.apache.ambari.server.orm.dao.KerberosDescriptorDAO: void create(org.apache.ambari.server.orm.entities.KerberosDescriptorEntity)>($r8)
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : virtualinvoke $r7.<org.apache.ambari.server.orm.dao.KerberosDescriptorDAO: void create(org.apache.ambari.server.orm.entities.KerberosDescriptorEntity)>($r8) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : return r2
org.apache.ambari.server.topology.SecurityConfigurationFactory.persistKerberosDescriptor : return r2 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r24 = new org.apache.ambari.server.topology.SecurityConfiguration
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r24 = new org.apache.ambari.server.topology.SecurityConfiguration >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r25 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r25 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r24.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType,java.lang.String,java.lang.String)>($r25, r37, r38)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r24.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType,java.lang.String,java.lang.String)>($r25, r37, r38) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r24
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r24 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= (branch)]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r39]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r39] >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : return r39
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : return r39 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.getKerberosDescriptorText : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String _persistence_get_kerberosDescriptorText()>()
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.getKerberosDescriptorText : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String _persistence_get_kerberosDescriptorText()>() >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_kerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetched(java.lang.String)>("kerberosDescriptorText")
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_kerberosDescriptorText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetched(java.lang.String)>("kerberosDescriptorText") >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_kerberosDescriptorText : $r1 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String kerberosDescriptorText>
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_kerberosDescriptorText : $r1 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String kerberosDescriptorText> >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_kerberosDescriptorText : return $r1
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_kerberosDescriptorText : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.getKerberosDescriptorText : return $r1
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.getKerberosDescriptorText : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.KerberosDescriptorEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.KerberosDescriptorEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.KerberosDescriptorEntity.getName : return $r1
