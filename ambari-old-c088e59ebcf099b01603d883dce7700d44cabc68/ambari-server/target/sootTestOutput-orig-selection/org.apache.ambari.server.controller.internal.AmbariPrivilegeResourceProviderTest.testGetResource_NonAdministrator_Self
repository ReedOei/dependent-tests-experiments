org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createClusterAdministratorGrantedAuthority(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createClusterAdministratorGrantedAuthority(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createClusterAdministratorPrivilegeEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createClusterAdministratorPrivilegeEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createClusterAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createClusterAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38]
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r34
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r34 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r35
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r35 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r36
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r36 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r37
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r37 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r38
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r38 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r39
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r39 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r40
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r40 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r41
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r41 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r42
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r42 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r43
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r43 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r44
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r44 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r45
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r45 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r47 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r46, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r47 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r46, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r47)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r47) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createPrivilegeEntity(org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity,org.apache.ambari.server.orm.entities.PrincipalEntity)>($r1, $r2, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r2 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: com.google.inject.Injector createInjector()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r1 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r2 = new org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r2 = new org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : specialinvoke $r2.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: void <init>(org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest)>(r0)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : specialinvoke $r2.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: void <init>(org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r1[0] = $r2
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r2 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r2 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r5 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r5 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r8 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r8 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r14 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r14 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r15 = virtualinvoke $r14.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r17 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r17 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r18 = virtualinvoke $r17.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r20 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r20 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r23 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r23 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r24 = virtualinvoke $r23.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r24 = virtualinvoke $r23.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r26 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r26 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r27 = virtualinvoke $r26.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r28 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r29 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r29 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r30 = virtualinvoke $r29.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r30 = virtualinvoke $r29.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r28.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r31 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r32 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r32 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r34 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r34 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r35 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r35 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r38 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r38 = r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1: org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r39 = virtualinvoke $r38.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : $r39 = virtualinvoke $r38.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest$1.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : return $r3
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createInjector : return $r3 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r20 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createMockPrincipalTypeEntity(java.lang.String)>("USER")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r20 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createMockPrincipalTypeEntity(java.lang.String)>("USER") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalTypeEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalTypeEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : r2 = (org.apache.ambari.server.orm.entities.PrincipalTypeEntity) $r3
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : r2 = (org.apache.ambari.server.orm.entities.PrincipalTypeEntity) $r3 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : $r6 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : return r2
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalTypeEntity : return r2 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r4 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalEntity createMockPrincipalEntity(java.lang.Long,org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r19, $r20)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r4 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalEntity createMockPrincipalEntity(java.lang.Long,org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r19, $r20) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : r3 = (org.apache.ambari.server.orm.entities.PrincipalEntity) $r4
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : r3 = (org.apache.ambari.server.orm.entities.PrincipalEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity getPrincipalType()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity getPrincipalType()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : return r3
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrincipalEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r22 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createMockPrincipalTypeEntity(java.lang.String)>("USER")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r22 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createMockPrincipalTypeEntity(java.lang.String)>("USER") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r5 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalEntity createMockPrincipalEntity(java.lang.Long,org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r21, $r22)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r5 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrincipalEntity createMockPrincipalEntity(java.lang.Long,org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r21, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r23 = new java.util.LinkedList
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r23 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r23.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r23.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r24 = new java.util.LinkedList
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r24 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r24.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r24.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r25 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.UserEntity createMockUserEntity(org.apache.ambari.server.orm.entities.PrincipalEntity,java.lang.String)>(r4, r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r25 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.UserEntity createMockUserEntity(org.apache.ambari.server.orm.entities.PrincipalEntity,java.lang.String)>(r4, r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/UserEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/UserEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : r3 = (org.apache.ambari.server.orm.entities.UserEntity) $r4
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : r3 = (org.apache.ambari.server.orm.entities.UserEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : return r3
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockUserEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r30 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.UserEntity createMockUserEntity(org.apache.ambari.server.orm.entities.PrincipalEntity,java.lang.String)>(r5, $r29)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r30 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.UserEntity createMockUserEntity(org.apache.ambari.server.orm.entities.PrincipalEntity,java.lang.String)>(r5, $r29) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r31 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r31 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceTypeEntity createMockResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r31)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceTypeEntity createMockResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceTypeEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceTypeEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : r2 = (org.apache.ambari.server.orm.entities.ResourceTypeEntity) $r3
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : r2 = (org.apache.ambari.server.orm.entities.ResourceTypeEntity) $r3 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer getId()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $i0 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $i0 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r11 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r11 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : return r2
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceTypeEntity : return r2 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceEntity createMockResourceEntity(java.lang.Long,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r32, r8)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ResourceEntity createMockResourceEntity(java.lang.Long,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r32, r8) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ResourceEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : r3 = (org.apache.ambari.server.orm.entities.ResourceEntity) $r4
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : r3 = (org.apache.ambari.server.orm.entities.ResourceEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : return r3
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockResourceEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PermissionEntity createMockPermissionEntity(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>("CLUSTER.OPERATOR", "Cluster Operator", r8)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PermissionEntity createMockPermissionEntity(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>("CLUSTER.OPERATOR", "Cluster Operator", r8) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PermissionEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PermissionEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : r4 = (org.apache.ambari.server.orm.entities.PermissionEntity) $r5
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : r4 = (org.apache.ambari.server.orm.entities.PermissionEntity) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionName()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionName()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionLabel()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionLabel()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r14 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : return r4
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPermissionEntity : return r4 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r33 = new java.util.LinkedList
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r33 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r33.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r33.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r35 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrivilegeEntity createMockPrivilegeEntity(java.lang.Integer,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>($r34, r9, r4, r10)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r35 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrivilegeEntity createMockPrivilegeEntity(java.lang.Integer,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>($r34, r9, r4, r10) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrivilegeEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/PrivilegeEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : r5 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) $r6
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : r5 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) $r6 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r7 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer getId()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r7 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r9 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r9 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r13 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r13 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r15 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r19 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r19 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : $r21 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : return r5
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockPrivilegeEntity : return r5 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r35)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r37 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrivilegeEntity createMockPrivilegeEntity(java.lang.Integer,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>($r36, r9, r5, r10)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r37 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.PrivilegeEntity createMockPrivilegeEntity(java.lang.Integer,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>($r36, r9, r5, r10) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r37)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r38 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r38 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r12 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r38
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r12 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r39 = virtualinvoke r12.<org.apache.ambari.server.orm.dao.PrivilegeDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r39 = virtualinvoke r12.<org.apache.ambari.server.orm.dao.PrivilegeDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r43 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r43 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r13 = (org.apache.ambari.server.orm.dao.UserDAO) $r43
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r13 = (org.apache.ambari.server.orm.dao.UserDAO) $r43 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r44 = virtualinvoke r13.<org.apache.ambari.server.orm.dao.UserDAO: java.util.List findUsersByPrincipal(java.util.List)>($r23)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r44 = virtualinvoke r13.<org.apache.ambari.server.orm.dao.UserDAO: java.util.List findUsersByPrincipal(java.util.List)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r48 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r48 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r48.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : specialinvoke $r48.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r49 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ClusterEntity createMockClusterEntity(java.lang.String,org.apache.ambari.server.orm.entities.ResourceEntity)>("c1", r9)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r49 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.orm.entities.ClusterEntity createMockClusterEntity(java.lang.String,org.apache.ambari.server.orm.entities.ResourceEntity)>("c1", r9) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ClusterEntity;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ClusterEntity;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : r3 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r4
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : r3 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : return r3
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.createMockClusterEntity : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r50 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r50 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r15 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r50
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r15 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r50 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r51 = virtualinvoke r15.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r51 = virtualinvoke r15.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : virtualinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r55 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : $r55 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r55.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : interfaceinvoke $r55.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(com.google.inject.Injector)>(r3)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceTest : r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(com.google.inject.Injector)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r2 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r2 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r3 = (org.apache.ambari.server.orm.dao.ViewDAO) $r2
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r3 = (org.apache.ambari.server.orm.dao.ViewDAO) $r2 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r4 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r4 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ViewInstanceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r5 = (org.apache.ambari.server.orm.dao.ViewInstanceDAO) $r4
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r5 = (org.apache.ambari.server.orm.dao.ViewInstanceDAO) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r6 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r6 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r7 = (org.apache.ambari.server.orm.dao.UserDAO) $r6
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r7 = (org.apache.ambari.server.orm.dao.UserDAO) $r6 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/MemberDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r9 = (org.apache.ambari.server.orm.dao.MemberDAO) $r8
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r9 = (org.apache.ambari.server.orm.dao.MemberDAO) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r11 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r10
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r11 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r12 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r12 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r13 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r12
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r13 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r14 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r14 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r15 = (org.apache.ambari.server.orm.dao.ResourceDAO) $r14
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r15 = (org.apache.ambari.server.orm.dao.ResourceDAO) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r16 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceTypeDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r16 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceTypeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r17 = (org.apache.ambari.server.orm.dao.ResourceTypeDAO) $r16
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r17 = (org.apache.ambari.server.orm.dao.ResourceTypeDAO) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r18 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r18 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurityHelper;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r19 = (org.apache.ambari.server.security.SecurityHelper) $r18
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r19 = (org.apache.ambari.server.security.SecurityHelper) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r20 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r20 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/view/ViewInstanceHandlerList;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r21 = (org.apache.ambari.server.view.ViewInstanceHandlerList) $r20
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r21 = (org.apache.ambari.server.view.ViewInstanceHandlerList) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r22 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo)>($r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, null, null, null)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r22 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo)>($r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, null, null, null) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r13 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.view.ViewInstanceOperationHandler,org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>(null, r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, null)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r13 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.view.ViewInstanceOperationHandler,org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>(null, r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, null) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/events/publishers/AmbariEventPublisher;")
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/events/publishers/AmbariEventPublisher;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r13
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r13 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : staticinvoke <org.apache.ambari.server.view.ViewRegistry: void initInstance(org.apache.ambari.server.view.ViewRegistry)>($r22)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : staticinvoke <org.apache.ambari.server.view.ViewRegistry: void initInstance(org.apache.ambari.server.view.ViewRegistry)>($r22) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0
org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r23 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r23 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrivilegeDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r24 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r23
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r24 = (org.apache.ambari.server.orm.dao.PrivilegeDAO) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r25 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r25 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r26 = (org.apache.ambari.server.orm.dao.UserDAO) $r25
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r26 = (org.apache.ambari.server.orm.dao.UserDAO) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r27 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r27 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/GroupDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r28 = (org.apache.ambari.server.orm.dao.GroupDAO) $r27
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r28 = (org.apache.ambari.server.orm.dao.GroupDAO) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r29 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r29 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PrincipalDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r30 = (org.apache.ambari.server.orm.dao.PrincipalDAO) $r29
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r30 = (org.apache.ambari.server.orm.dao.PrincipalDAO) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r31 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r31 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/PermissionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r32 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r31
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r32 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r33 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r33 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ResourceDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r34 = (org.apache.ambari.server.orm.dao.ResourceDAO) $r33
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r34 = (org.apache.ambari.server.orm.dao.ResourceDAO) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : staticinvoke <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: void init(org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.GroupDAO,org.apache.ambari.server.orm.dao.PrincipalDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO)>($r24, $r26, $r28, $r30, $r32, $r34)
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : staticinvoke <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: void init(org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.GroupDAO,org.apache.ambari.server.orm.dao.PrincipalDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO)>($r24, $r26, $r28, $r30, $r32, $r34) >>>>>>>> org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r0
org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r0 >>>>>>>> org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r1
org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.GroupDAO groupDAO> = r2
org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.GroupDAO groupDAO> = r2 >>>>>>>> org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.PrincipalDAO principalDAO> = r3
org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.PrincipalDAO principalDAO> = r3 >>>>>>>> org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r4
org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r4 >>>>>>>> org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r5
org.apache.ambari.server.controller.internal.PrivilegeResourceProvider.init : <org.apache.ambari.server.controller.internal.PrivilegeResourceProvider: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r5 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r35 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r35 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r36 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r35
org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : $r36 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProviderTest.getResourceProvider : staticinvoke <org.apache.ambari.server.controller.internal.AmbariPrivilegeResourceProvider: void init(org.apache.ambari.server.orm.dao.ClusterDAO)>($r36)
