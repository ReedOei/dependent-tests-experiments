org.apache.ambari.server.controller.StackResponse.setStackName : r0.<org.apache.ambari.server.controller.StackResponse: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackResponse.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.controller.StackResponse: java.lang.String getStackName()>()
org.apache.ambari.server.controller.StackResponse.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.controller.StackResponse: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.StackResponse.getStackName : $r1 = r0.<org.apache.ambari.server.controller.StackResponse: java.lang.String stackName>
org.apache.ambari.server.controller.StackResponse.getStackName : $r1 = r0.<org.apache.ambari.server.controller.StackResponse: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.controller.StackResponse.getStackName : return $r1
org.apache.ambari.server.controller.StackResponse.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackResponse.hashCode : $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.StackResponse.hashCode : $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.StackResponse.hashCode : i1 = 31 + $i0
org.apache.ambari.server.controller.StackResponse.hashCode : i1 = 31 + $i0 >>>>>>>> org.apache.ambari.server.controller.StackResponse.hashCode : return i1
org.apache.ambari.server.controller.StackResponse.hashCode : return i1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>()
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES>
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2
org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0]
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i0 = virtualinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i0 = virtualinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i1 = $r2[$i0]
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $i1 = $r2[$i0] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : tableswitch($i1) {     case 1:
org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider.getResourceProvider : $r53 = new org.apache.ambari.server.controller.internal.StackResourceProvider
