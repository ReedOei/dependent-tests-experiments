org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r3 = new org.apache.ambari.server.state.kerberos.KerberosDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: java.util.Map parseJSON(java.lang.String)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: java.util.Map parseJSON(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r4 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r4.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r5 = new org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : specialinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: void <init>(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r6 = virtualinvoke $r5.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory$2: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r7 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : $r8 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorFactory.parseJSON : return $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : specialinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: void <init>(java.util.Map)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> = $r5 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: void removeIdentity(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : r3 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if $r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r4 = r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if $r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : specialinvoke $r9.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> = $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r3 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : goto [?= return] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : virtualinvoke $r3.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r3
org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory.createInstance : return $r3 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_")
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_") >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.lang.Object createMock(java.lang.String,java.lang.Class)>($r14, class "Lorg/apache/ambari/server/state/Service;")
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.lang.Object createMock(java.lang.String,java.lang.Class)>($r14, class "Lorg/apache/ambari/server/state/Service;") >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r4 = (org.apache.ambari.server.state.Service) $r15
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r4 = (org.apache.ambari.server.state.Service) $r15 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.lang.Object createMock(java.lang.String,java.lang.Class)>(r2, class "Lorg/apache/ambari/server/state/ServiceComponent;")
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.lang.Object createMock(java.lang.String,java.lang.Class)>(r2, class "Lorg/apache/ambari/server/state/ServiceComponent;") >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r5 = (org.apache.ambari.server.state.ServiceComponent) $r16
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r5 = (org.apache.ambari.server.state.ServiceComponent) $r16 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r17 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r17 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r21 = new java.util.HashMap
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r21 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r22 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r22 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : i0 = lengthof r3
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : i1 = 0
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : if i1 >= i0
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r8 = r3[i1]
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r8 = r3[i1] >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.lang.Object createMock(java.lang.String,java.lang.Class)>(r8, class "Lorg/apache/ambari/server/state/ServiceComponentHost;")
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.lang.Object createMock(java.lang.String,java.lang.Class)>(r8, class "Lorg/apache/ambari/server/state/ServiceComponentHost;") >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r9 = (org.apache.ambari.server.state.ServiceComponentHost) $r37
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : r9 = (org.apache.ambari.server.state.ServiceComponentHost) $r37 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r38 = interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r38 = interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : i1 = i1 + 1
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r26 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.util.Map installedServices>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r26 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: java.util.Map installedServices> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r28 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r28 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r30 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r30 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r32 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r32 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r34 = new org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest$1
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r34 = new org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest$1 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : specialinvoke $r34.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest$1: void <init>(org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest,java.lang.String,org.apache.ambari.server.state.ServiceComponent)>(r0, r2, r5)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : specialinvoke $r34.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest$1: void <init>(org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest,java.lang.String,org.apache.ambari.server.state.ServiceComponent)>(r0, r2, r5) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r35 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r34)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : $r35 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.installComponent : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r1 = newarray (org.apache.ambari.server.serveraction.kerberos.Component)[2]
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r1 = newarray (org.apache.ambari.server.serveraction.kerberos.Component)[2] >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r2 = new org.apache.ambari.server.serveraction.kerberos.Component
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r2 = new org.apache.ambari.server.serveraction.kerberos.Component >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.Component: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>("c6401", "HDFS", "NAMENODE", $r3)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : specialinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.Component: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>("c6401", "HDFS", "NAMENODE", $r3) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r1[0] = $r2
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r4 = new org.apache.ambari.server.serveraction.kerberos.Component
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r4 = new org.apache.ambari.server.serveraction.kerberos.Component >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : specialinvoke $r4.<org.apache.ambari.server.serveraction.kerberos.Component: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>("c6401", "HDFS", "DATANODE", $r5)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : specialinvoke $r4.<org.apache.ambari.server.serveraction.kerberos.Component: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>("c6401", "HDFS", "DATANODE", $r5) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r1[1] = $r4
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r1[1] = $r4 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r1)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : $r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : return $r6
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.hdfsComponents : return $r6 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : $r4 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner kerberosIdentityCleaner>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : $r4 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest: org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner kerberosIdentityCleaner> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : $r3 = new org.apache.ambari.server.events.ServiceRemovedEvent
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : $r3 = new org.apache.ambari.server.events.ServiceRemovedEvent >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : specialinvoke $r3.<org.apache.ambari.server.events.ServiceRemovedEvent: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)>(1L, "any", "any", r1, r2)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : specialinvoke $r3.<org.apache.ambari.server.events.ServiceRemovedEvent: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)>(1L, "any", "any", r1, r2) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : virtualinvoke $r4.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: void serviceRemoved(org.apache.ambari.server.events.ServiceRemovedEvent)>($r3)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleanerTest.uninstallService : virtualinvoke $r4.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: void serviceRemoved(org.apache.ambari.server.events.ServiceRemovedEvent)>($r3) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r3 = <org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r3 = <org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removing identities after {}", r1)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removing identities after {}", r1) >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServiceRemovedEvent{")
org.apache.ambari.server.events.ServiceRemovedEvent.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServiceRemovedEvent{") >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cluserId=")
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cluserId=") >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $l0 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: long m_clusterId>
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $l0 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: long m_clusterId> >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackName=")
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackName=") >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r6 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String m_stackName>
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r6 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String m_stackName> >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackVersion=")
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackVersion=") >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r9 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String m_stackVersion>
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r9 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String m_stackVersion> >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r12 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String m_serviceName>
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r12 = r0.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String m_serviceName> >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.events.ServiceRemovedEvent.toString : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.events.ServiceRemovedEvent.toString : $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.events.ServiceRemovedEvent.toString : return $r15
org.apache.ambari.server.events.ServiceRemovedEvent.toString : return $r15 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r4 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r4 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $l0 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceRemovedEvent: long getClusterId()>()
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $l0 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceRemovedEvent: long getClusterId()>() >>>>>>>> org.apache.ambari.server.events.ClusterEvent.getClusterId : $l0 = r0.<org.apache.ambari.server.events.ClusterEvent: long m_clusterId>
org.apache.ambari.server.events.ClusterEvent.getClusterId : $l0 = r0.<org.apache.ambari.server.events.ClusterEvent: long m_clusterId> >>>>>>>> org.apache.ambari.server.events.ClusterEvent.getClusterId : return $l0
org.apache.ambari.server.events.ClusterEvent.getClusterId : return $l0 >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r6 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>($r5)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r6 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r7 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r7 = r0.<org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r8 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.RemovableIdentities ofService(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.events.ServiceRemovedEvent,org.apache.ambari.server.controller.KerberosHelper)>($r6, r1, $r7)
org.apache.ambari.server.controller.utilities.KerberosIdentityCleaner.serviceRemoved : $r8 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.RemovableIdentities ofService(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.events.ServiceRemovedEvent,org.apache.ambari.server.controller.KerberosHelper)>($r6, r1, $r7) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r5 = interfaceinvoke r0.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r5 = interfaceinvoke r0.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r6 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r6 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : if $r5 == $r6
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : if $r5 == $r6 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r7 = interfaceinvoke r2.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.state.kerberos.KerberosDescriptor getKerberosDescriptor(org.apache.ambari.server.state.Cluster,boolean)>(r0, 0)
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r7 = interfaceinvoke r2.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.state.kerberos.KerberosDescriptor getKerberosDescriptor(org.apache.ambari.server.state.Cluster,boolean)>(r0, 0) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r8 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r8 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.events.ServiceEvent.getServiceName : $r1 = r0.<org.apache.ambari.server.events.ServiceEvent: java.lang.String m_serviceName>
org.apache.ambari.server.events.ServiceEvent.getServiceName : $r1 = r0.<org.apache.ambari.server.events.ServiceEvent: java.lang.String m_serviceName> >>>>>>>> org.apache.ambari.server.events.ServiceEvent.getServiceName : return $r1
org.apache.ambari.server.events.ServiceEvent.getServiceName : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : r3 = virtualinvoke $r7.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>($r8)
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : r3 = virtualinvoke $r7.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if $r2 != null
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : if $r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r4
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : $r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : return $r5
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getService : return $r5 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : if r3 != null
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : if r3 != null >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r9 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r9 = virtualinvoke r1.<org.apache.ambari.server.events.ServiceRemovedEvent: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r10 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude excludeService(java.lang.String)>($r9)
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r10 = staticinvoke <org.apache.ambari.server.controller.utilities.RemovableIdentities: org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude excludeService(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.excludeService : $r1 = dynamicinvoke "shouldExclude" <org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude (java.lang.String)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/String;)Z", handle: <org.apache.ambari.server.controller.utilities.RemovableIdentities: boolean lambda$excludeService$0(java.lang.String,java.lang.String)>, class "(Ljava/lang/String;)Z")
org.apache.ambari.server.controller.utilities.RemovableIdentities.excludeService : $r1 = dynamicinvoke "shouldExclude" <org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude (java.lang.String)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/String;)Z", handle: <org.apache.ambari.server.controller.utilities.RemovableIdentities: boolean lambda$excludeService$0(java.lang.String,java.lang.String)>, class "(Ljava/lang/String;)Z") >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.excludeService : return $r1
org.apache.ambari.server.controller.utilities.RemovableIdentities.excludeService : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r11 = <org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude: org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude NONE>
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : $r11 = <org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude: org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude NONE> >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : r4 = staticinvoke <org.apache.ambari.server.controller.utilities.UsedIdentities: org.apache.ambari.server.controller.utilities.UsedIdentities populate(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude,org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude,org.apache.ambari.server.controller.KerberosHelper)>(r0, $r10, $r11, r2)
org.apache.ambari.server.controller.utilities.RemovableIdentities.ofService : r4 = staticinvoke <org.apache.ambari.server.controller.utilities.UsedIdentities: org.apache.ambari.server.controller.utilities.UsedIdentities populate(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude,org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude,org.apache.ambari.server.controller.KerberosHelper)>(r0, $r10, $r11, r2) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r9 = new java.util.ArrayList
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r9 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r5 = interfaceinvoke r3.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.state.kerberos.KerberosDescriptor getKerberosDescriptor(org.apache.ambari.server.state.Cluster,boolean)>(r0, 0)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r5 = interfaceinvoke r3.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.state.kerberos.KerberosDescriptor getKerberosDescriptor(org.apache.ambari.server.state.Cluster,boolean)>(r0, 0) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r10 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.List getIdentities()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r10 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.List getIdentities()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List getIdentities(boolean,java.util.Map)>(0, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List getIdentities(boolean,java.util.Map)>(0, null) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if $r5 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : return $r2 >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r11 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.List nullToEmpty(java.util.List)>($r10)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r11 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.List nullToEmpty(java.util.List)>($r10) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : if r0 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : if r0 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : goto [?= return $r1]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : goto [?= return $r1] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.nullToEmpty : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r11)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r12 = interfaceinvoke r0.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r12 = interfaceinvoke r0.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : if $z4 == 0
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r7 = (org.apache.ambari.server.state.Service) $r15
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r7 = (org.apache.ambari.server.state.Service) $r15 >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r16 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r16 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $z1 = interfaceinvoke r1.<org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude: boolean shouldExclude(java.lang.String)>($r16)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $z1 = interfaceinvoke r1.<org.apache.ambari.server.controller.utilities.UsedIdentities$ServiceExclude: boolean shouldExclude(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.lambda$excludeService$0 : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.controller.utilities.RemovableIdentities.lambda$excludeService$0 : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.utilities.RemovableIdentities.lambda$excludeService$0 : return $z0
org.apache.ambari.server.controller.utilities.RemovableIdentities.lambda$excludeService$0 : return $z0 >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : if $z1 == 0
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r8 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>($r17)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : r8 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor getService(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : if r8 == null
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : if r8 == null >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.List getIdentities()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.List getIdentities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r19 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.List nullToEmpty(java.util.List)>($r18)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r19 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.List nullToEmpty(java.util.List)>($r18) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r19)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r19) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r20 = staticinvoke <org.apache.ambari.server.controller.utilities.UsedIdentities: java.util.List componentIdentities(org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor,org.apache.ambari.server.state.Service,org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude)>(r8, r7, r2)
org.apache.ambari.server.controller.utilities.UsedIdentities.populate : $r20 = staticinvoke <org.apache.ambari.server.controller.utilities.UsedIdentities: java.util.List componentIdentities(org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor,org.apache.ambari.server.state.Service,org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude)>(r8, r7, r2) >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.componentIdentities : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.componentIdentities : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.componentIdentities : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.componentIdentities : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.componentIdentities : $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.stream.Stream stream()>()
org.apache.ambari.server.controller.utilities.UsedIdentities.componentIdentities : $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.stream.Stream stream()>() >>>>>>>> org.apache.ambari.server.controller.utilities.UsedIdentities.componentIdentities : $r6 = dynamicinvoke "test" <java.util.function.Predicate (org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude,org.apache.ambari.server.state.Service)>(r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Z", handle: <org.apache.ambari.server.controller.utilities.UsedIdentities: boolean lambda$componentIdentities$0(org.apache.ambari.server.state.Service,org.apache.ambari.server.controller.utilities.UsedIdentities$ComponentExclude,org.apache.ambari.server.state.ServiceComponent)>, class "(Lorg/apache/ambari/server/state/ServiceComponent;)Z")
