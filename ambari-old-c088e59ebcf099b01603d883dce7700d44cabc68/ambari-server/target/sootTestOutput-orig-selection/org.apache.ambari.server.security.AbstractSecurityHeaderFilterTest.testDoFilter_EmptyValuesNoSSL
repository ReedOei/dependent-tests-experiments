org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_KSTR_DIR_NAME>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_KSTR_DIR_NAME> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getParent()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getParent()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r4, $r6)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r4, $r6) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_CRT_PASS_FILE_NAME>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_CRT_PASS_FILE_NAME> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r10 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r10 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r9, $r11)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r9, $r11) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CHARSET>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CHARSET> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CHARSET>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CHARSET> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r19 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r19 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r20 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r19)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r20 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r19) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : $r1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map propertyNameMap>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : $r1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map propertyNameMap> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : return $r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("Strict-Transport-Security")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("Strict-Transport-Security") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r22 = (java.lang.String) $r21
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r22 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r24 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r24 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r25 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r24)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r25 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r24) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Frame-Options")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Frame-Options") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r27 = (java.lang.String) $r26
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r27, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r27, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r29 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r29 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r30 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r29)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r30 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r29) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-XSS-Protection")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-XSS-Protection") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r32 = (java.lang.String) $r31
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r32 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r32, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r32, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r34 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r34 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r35 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r34)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r35 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r34) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Content-Type-Options")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Content-Type-Options") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r37 = (java.lang.String) $r36
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r37, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r37, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r39 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r39 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r40 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r39)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r40 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r39) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r41 = interfaceinvoke $r40.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cache-Control")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r41 = interfaceinvoke $r40.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cache-Control") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r42 = (java.lang.String) $r41
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r44 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r44 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r45 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r44)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r45 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r44) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("Pragma")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("Pragma") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r47 = (java.lang.String) $r46
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r47 = (java.lang.String) $r46 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r47, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r47, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r49 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r49 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r50 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r50 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r52 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r52 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r53 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r53 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r53.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r53.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r52.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r53)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r52.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("deny.header.overrides.flag")
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("deny.header.overrides.flag") >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : $r3 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r2)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : $r3 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : interfaceinvoke $r3.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : interfaceinvoke $r3.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r2 = <org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r2 = <org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Initializing {}", $r4)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Initializing {}", $r4) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : if $r5 != null
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : if $r5 != null >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void processConfig(org.apache.ambari.server.configuration.Configuration)>($r6)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void processConfig(org.apache.ambari.server.configuration.Configuration)>($r6) >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $z0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: boolean getApiSSLAuthentication()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $z0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: boolean getApiSSLAuthentication()>() >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setSslEnabled(boolean)>($z0)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setSslEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setSslEnabled : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled> = z0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setSslEnabled : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled> = z0 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getStrictTransportSecurityHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getStrictTransportSecurityHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getStrictTransportSecurityHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_STRICT_TRANSPORT_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getStrictTransportSecurityHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_STRICT_TRANSPORT_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getStrictTransportSecurityHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getStrictTransportSecurityHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getStrictTransportSecurityHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getStrictTransportSecurityHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setStrictTransportSecurity(java.lang.String)>($r2)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setStrictTransportSecurity(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setStrictTransportSecurity : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String strictTransportSecurity> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setStrictTransportSecurity : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String strictTransportSecurity> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getXFrameOptionsHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getXFrameOptionsHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXFrameOptionsHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_X_FRAME_OPTIONS_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getXFrameOptionsHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_X_FRAME_OPTIONS_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXFrameOptionsHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getXFrameOptionsHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXFrameOptionsHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getXFrameOptionsHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setxFrameOptionsHeader(java.lang.String)>($r3)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setxFrameOptionsHeader(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxFrameOptionsHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxFrameOptionsHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getXXSSProtectionHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getXXSSProtectionHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXXSSProtectionHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_X_XSS_PROTECTION_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getXXSSProtectionHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_X_XSS_PROTECTION_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXXSSProtectionHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getXXSSProtectionHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXXSSProtectionHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getXXSSProtectionHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setxXSSProtectionHeader(java.lang.String)>($r4)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setxXSSProtectionHeader(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxXSSProtectionHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxXSSProtectionHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r5 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getXContentTypeHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r5 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getXContentTypeHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXContentTypeHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_X_CONTENT_TYPE_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getXContentTypeHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_X_CONTENT_TYPE_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXContentTypeHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getXContentTypeHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getXContentTypeHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getXContentTypeHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setXContentTypeHeader(java.lang.String)>($r5)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setXContentTypeHeader(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setXContentTypeHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setXContentTypeHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getCacheControlHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getCacheControlHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCacheControlHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CACHE_CONTROL_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getCacheControlHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CACHE_CONTROL_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCacheControlHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getCacheControlHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCacheControlHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getCacheControlHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setCacheControlHeader(java.lang.String)>($r6)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setCacheControlHeader(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCacheControlHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCacheControlHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r7 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getPragmaHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r7 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getPragmaHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getPragmaHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_PRAGMA_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getPragmaHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_PRAGMA_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getPragmaHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getPragmaHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getPragmaHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getPragmaHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setPragmaHeader(java.lang.String)>($r7)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setPragmaHeader(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setPragmaHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setPragmaHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r8 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getCharsetHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : $r8 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getCharsetHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCharsetHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CHARSET>
org.apache.ambari.server.configuration.Configuration.getCharsetHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CHARSET> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCharsetHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getCharsetHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getCharsetHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getCharsetHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setCharset(java.lang.String)>($r8)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter: void setCharset(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCharset : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCharset : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset> = r1 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean checkPrerequisites(javax.servlet.ServletRequest)>(r1)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean checkPrerequisites(javax.servlet.ServletRequest)>(r1) >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : z0 = 0
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : z0 = 0 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : $r2 = interfaceinvoke r1.<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>("deny.header.overrides.flag")
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : $r2 = interfaceinvoke r1.<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>("deny.header.overrides.flag") >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : if null != $r2
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : if null != $r2 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : z0 = 1
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : z0 = 1 >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : goto [?= return z0]
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : goto [?= return z0] >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : return z0
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilter.checkPrerequisites : return z0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : if $z0 == 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : specialinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : specialinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z0 = r2 instanceof javax.servlet.http.HttpServletResponse
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z0 = r2 instanceof javax.servlet.http.HttpServletResponse >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z0 == 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : r3 = (javax.servlet.http.HttpServletResponse) r2
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : r3 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z1 == 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r17 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r17 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r17)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z8 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r4 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r4 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r4)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z2 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r5)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z3 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z3 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r6)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z4 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r7 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r7 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r7)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z5 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r8 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r8 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r8)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z6 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_KSTR_DIR_NAME>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_KSTR_DIR_NAME> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getParent()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getParent()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r4, $r6)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r4, $r6) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_CRT_PASS_FILE_NAME>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_API_SSL_CRT_PASS_FILE_NAME> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r10 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r10 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: java.io.File val$httpPassFile> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r9, $r11)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r9, $r11) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CHARSET>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty HTTP_CHARSET> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CHARSET>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CHARSET> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r19 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r19 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r20 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r19)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r20 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r19) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : $r1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map propertyNameMap>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : $r1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map propertyNameMap> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : return $r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("Strict-Transport-Security")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("Strict-Transport-Security") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r22 = (java.lang.String) $r21
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r22 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r24 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r24 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r25 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r24)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r25 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r24) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Frame-Options")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Frame-Options") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r27 = (java.lang.String) $r26
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r27, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r27, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r29 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r29 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r30 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r29)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r30 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r29) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-XSS-Protection")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-XSS-Protection") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r32 = (java.lang.String) $r31
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r32 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r32, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r32, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r34 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r34 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r35 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r34)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r35 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r34) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Content-Type-Options")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("X-Content-Type-Options") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r37 = (java.lang.String) $r36
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r37, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r37, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r39 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r39 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r40 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r39)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r40 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r39) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r41 = interfaceinvoke $r40.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cache-Control")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r41 = interfaceinvoke $r40.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cache-Control") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r42 = (java.lang.String) $r41
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r42, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r44 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r44 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r45 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r44)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r45 = staticinvoke <org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.util.Map access$000(org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest)>($r44) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("Pragma")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("Pragma") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r47 = (java.lang.String) $r46
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r47 = (java.lang.String) $r46 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r47, "")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r47, "") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r49 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r49 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r50 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0>
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r50 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest this$0> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r52 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r52 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r53 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : $r53 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r53.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : specialinvoke $r53.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r52.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r53)
org.apache.ambari.server.security.AbstractSecurityHeaderFilterTest$5.configure : interfaceinvoke $r52.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilterTest.expectHttpServletRequestMock : interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("deny.header.overrides.flag", "true")
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilterTest.expectHttpServletRequestMock : interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("deny.header.overrides.flag", "true") >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilterTest.expectHttpServletRequestMock : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilterTest.expectHttpServletRequestMock : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r2 = <org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r2 = <org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Initializing {}", $r4)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Initializing {}", $r4) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : if $r5 != null
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : if $r5 != null >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void processConfig(org.apache.ambari.server.configuration.Configuration)>($r6)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void processConfig(org.apache.ambari.server.configuration.Configuration)>($r6) >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $z0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: boolean getApiSSLAuthentication()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $z0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: boolean getApiSSLAuthentication()>() >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setSslEnabled(boolean)>($z0)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setSslEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setSslEnabled : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled> = z0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setSslEnabled : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled> = z0 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsStrictTransportSecurityHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsStrictTransportSecurityHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsStrictTransportSecurityHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_STRICT_TRANSPORT_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getViewsStrictTransportSecurityHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_STRICT_TRANSPORT_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsStrictTransportSecurityHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getViewsStrictTransportSecurityHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsStrictTransportSecurityHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getViewsStrictTransportSecurityHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setStrictTransportSecurity(java.lang.String)>($r2)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setStrictTransportSecurity(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setStrictTransportSecurity : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String strictTransportSecurity> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setStrictTransportSecurity : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String strictTransportSecurity> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsXFrameOptionsHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsXFrameOptionsHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXFrameOptionsHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_X_FRAME_OPTIONS_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getViewsXFrameOptionsHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_X_FRAME_OPTIONS_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXFrameOptionsHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getViewsXFrameOptionsHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXFrameOptionsHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getViewsXFrameOptionsHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setxFrameOptionsHeader(java.lang.String)>($r3)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setxFrameOptionsHeader(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxFrameOptionsHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxFrameOptionsHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsXXSSProtectionHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsXXSSProtectionHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXXSSProtectionHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_X_XSS_PROTECTION_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getViewsXXSSProtectionHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_X_XSS_PROTECTION_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXXSSProtectionHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getViewsXXSSProtectionHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXXSSProtectionHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getViewsXXSSProtectionHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setxXSSProtectionHeader(java.lang.String)>($r4)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setxXSSProtectionHeader(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxXSSProtectionHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setxXSSProtectionHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r5 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsXContentTypeHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r5 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsXContentTypeHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXContentTypeHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_X_CONTENT_TYPE_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getViewsXContentTypeHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_X_CONTENT_TYPE_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXContentTypeHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getViewsXContentTypeHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsXContentTypeHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getViewsXContentTypeHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setXContentTypeHeader(java.lang.String)>($r5)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setXContentTypeHeader(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setXContentTypeHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setXContentTypeHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsCacheControlHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsCacheControlHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsCacheControlHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CACHE_CONTROL_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getViewsCacheControlHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CACHE_CONTROL_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsCacheControlHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getViewsCacheControlHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsCacheControlHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getViewsCacheControlHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setCacheControlHeader(java.lang.String)>($r6)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setCacheControlHeader(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCacheControlHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCacheControlHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r7 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsPragmaHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r7 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsPragmaHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsPragmaHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_PRAGMA_HEADER_VALUE>
org.apache.ambari.server.configuration.Configuration.getViewsPragmaHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_PRAGMA_HEADER_VALUE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsPragmaHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getViewsPragmaHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsPragmaHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getViewsPragmaHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setPragmaHeader(java.lang.String)>($r7)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setPragmaHeader(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setPragmaHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setPragmaHeader : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader> = r1 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r8 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsCharsetHTTPResponseHeader()>()
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : $r8 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getViewsCharsetHTTPResponseHeader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsCharsetHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CHARSET>
org.apache.ambari.server.configuration.Configuration.getViewsCharsetHTTPResponseHeader : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty VIEWS_HTTP_CHARSET> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsCharsetHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getViewsCharsetHTTPResponseHeader : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getViewsCharsetHTTPResponseHeader : return $r2
org.apache.ambari.server.configuration.Configuration.getViewsCharsetHTTPResponseHeader : return $r2 >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setCharset(java.lang.String)>($r8)
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.processConfig : virtualinvoke r0.<org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter: void setCharset(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCharset : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset> = r1
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.setCharset : r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset> = r1 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean checkPrerequisites(javax.servlet.ServletRequest)>(r1)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean checkPrerequisites(javax.servlet.ServletRequest)>(r1) >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.checkPrerequisites : interfaceinvoke r1.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("deny.header.overrides.flag", "true")
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.checkPrerequisites : interfaceinvoke r1.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("deny.header.overrides.flag", "true") >>>>>>>> org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.checkPrerequisites : return 1
org.apache.ambari.server.security.AmbariViewsSecurityHeaderFilter.checkPrerequisites : return 1 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : if $z0 == 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : specialinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : specialinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z0 = r2 instanceof javax.servlet.http.HttpServletResponse
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z0 = r2 instanceof javax.servlet.http.HttpServletResponse >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z0 == 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : r3 = (javax.servlet.http.HttpServletResponse) r2
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : r3 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z1 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: boolean sslEnabled> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z1 == 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r17 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r17 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xFrameOptionsHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r17)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z8 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r4 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r4 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xXSSProtectionHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r4)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z2 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String xContentTypeHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r5)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z3 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z3 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r6 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String cacheControlHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r6)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z4 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r7 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r7 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String pragmaHeader> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r7)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z5 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r8 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $r8 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: java.lang.String charset> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r8)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z6 != 0
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilterInternal : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
