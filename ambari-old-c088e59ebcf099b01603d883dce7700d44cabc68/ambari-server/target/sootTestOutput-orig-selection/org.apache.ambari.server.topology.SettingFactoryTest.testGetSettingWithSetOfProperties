org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r7 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r8 = new java.util.HashSet
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r9 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "true")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "true") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r11 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r11 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r11.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r11.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "HDFS")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "HDFS") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r14 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r14 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r14.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r14.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "TEZ")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "TEZ") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r17 = new java.util.ArrayList
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r18 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_settings", $r7)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_settings", $r7) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r20 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_settings", $r8)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_settings", $r8) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : return $r17
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithSetOfProperties : return $r17 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r9 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactory.getSetting : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r10 = new org.apache.ambari.server.topology.Setting
org.apache.ambari.server.topology.SettingFactory.getSetting : $r10 = new org.apache.ambari.server.topology.Setting >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r10.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>($r9)
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r10.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>($r9) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null
org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z0 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r4 = (java.util.Map) $r11
org.apache.ambari.server.topology.SettingFactory.getSetting : r4 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z1 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r6 = (java.util.Map$Entry) $r13
org.apache.ambari.server.topology.SettingFactory.getSetting : r6 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r15 = (java.lang.String) $r14
org.apache.ambari.server.topology.SettingFactory.getSetting : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r7 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.ambari.server.topology.SettingFactory.getSetting : r7 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r16 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r16 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z2 = $r16 instanceof java.util.Set
org.apache.ambari.server.topology.SettingFactory.getSetting : $z2 = $r16 instanceof java.util.Set >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z2 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r34 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r34 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r35 = (java.util.HashSet) $r34
org.apache.ambari.server.topology.SettingFactory.getSetting : r35 = (java.util.HashSet) $r34 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r31 = r7[0]]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r31 = r7[0]] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r31 = r7[0]
org.apache.ambari.server.topology.SettingFactory.getSetting : $r31 = r7[0] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r35)
org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r35) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : return $r10
org.apache.ambari.server.topology.SettingFactory.getSetting : return $r10 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r2 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties>
org.apache.ambari.server.topology.Setting.getSettingValue : $r2 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Setting.getSettingValue : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : if $z0 == 0
org.apache.ambari.server.topology.Setting.getSettingValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r4 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties>
org.apache.ambari.server.topology.Setting.getSettingValue : $r4 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Setting.getSettingValue : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r6 = (java.util.Set) $r5
org.apache.ambari.server.topology.Setting.getSettingValue : $r6 = (java.util.Set) $r5 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : return $r6
