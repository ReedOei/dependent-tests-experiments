org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/events/publishers/AmbariEventPublisher;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20[0] = r15 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21 = new org.apache.ambari.server.view.ViewRegistry >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r21.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r11 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r29 = new org.apache.ambari.server.view.ViewExtractor >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r29.<org.apache.ambari.server.view.ViewExtractor: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r29 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r12 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r30 = new org.apache.ambari.server.view.ViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r30.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r30 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r23 = $r21.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r23 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = new org.apache.ambari.server.view.ViewRegistryTest$2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r25.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r25 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = new org.apache.ambari.server.view.ViewRegistryTest$3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r26.<org.apache.ambari.server.view.ViewRegistryTest$3: void <init>(org.apache.ambari.server.state.Clusters)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r21.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r26 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return $r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0
org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r2 = new org.apache.ambari.server.orm.entities.PrincipalEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setId(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalTypeEntity createPrincipalTypeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrincipalTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE")
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void setName(java.lang.String)>("ROLE") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalTypeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: void setPrincipalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createPrincipalEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38]
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r34
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r34 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r35
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r35 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r36
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r36 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r37
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r37 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r38
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r38 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r39
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r39 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r40
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r40 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r41
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r41 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r42
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r42 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r43
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r43 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r44
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r44 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r45
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r45 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r47 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r46, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r47 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r46, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r47)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r47) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : r3 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : $r5 = staticinvoke <org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r2 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : virtualinvoke $r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2
org.apache.ambari.server.orm.entities.PermissionEntity.createRoleAuthorizationEntity : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorization(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorization : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.entities.PermissionEntity.addAuthorizations : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[32]
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[32] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[26] = $r34
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[26] = $r34 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[27] = $r35
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[27] = $r35 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[28] = $r36
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[28] = $r36 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[29] = $r37
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[29] = $r37 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[30] = $r38
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[30] = $r38 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[31] = $r39
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r7[31] = $r39 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r41 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r40, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : $r41 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r40, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r41)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r41) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterOperatorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26]
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[26] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[16] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[17] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[18] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[19] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[20] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[21] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[22] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[23] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[24] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r7[25] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : $r35 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r34, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r35) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceAdministratorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[16]
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[16] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[12] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[12] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[13] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[13] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[14] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[14] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[15] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r7[15] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r25 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r24, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : $r25 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r24, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r25)
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r25) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createServiceOperatorPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(6L)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(6L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[12]
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[12] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[0] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[1] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[1] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[2] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[2] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[3] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[3] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[4] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[4] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[5] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[5] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[6] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[6] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[7] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[7] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[8] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[8] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[9] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[9] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[10] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[10] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[11] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r7[11] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r21 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r20, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : $r21 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r20, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r21)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r21) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterUserPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r1 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(7L)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(7L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrincipalEntity createPrincipalEntity(java.lang.Long)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r7 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization VIEW_USE>
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r7 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization VIEW_USE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r8 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : $r8 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r8)
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : virtualinvoke $r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void addAuthorizations(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createViewUserPermission : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r5 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r5 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>() >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml>
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1]
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;"
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;" >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getInstances()>()
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getInstances()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances>
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances>
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : return $r2 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : return $r1
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : r0 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r6
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : r0 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r6 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions>
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY")
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version>
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build>
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker>
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system>
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal>
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;"
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;" >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>()
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r7 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r7 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : specialinvoke $r7.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r1, r0)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : specialinvoke $r7.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r1, r0) >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton>
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton> >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.InstanceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getName : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : $z0 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: boolean visible>
org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : $z0 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: boolean visible> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : return $z0
org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : return $z0 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r8 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r8 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : specialinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : specialinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r9)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r9) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r10 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r10 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r10)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r8)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r11 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r11 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : specialinvoke $r11.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : specialinvoke $r11.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(20L)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(20L) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r11.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r12)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r11.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r12) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r11.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r8)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r11.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r11)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r11) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : return $r7
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntity : return $r7 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_resource : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_resource : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getResource : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getResource : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.PermissionEntity.getPrincipal : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_principal : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_principal : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getPrincipal : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : $r4 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : specialinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4
org.apache.ambari.server.security.TestAuthenticationFactory.createPrivilegeEntity : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getInstance : $r0 = <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton>
org.apache.ambari.server.view.ViewRegistry.getInstance : $r0 = <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getInstance : return $r0
org.apache.ambari.server.view.ViewRegistry.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r2 == null
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if $z0 != 0
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r9 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO>
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r9 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r3 = virtualinvoke $r9.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findViewUsePermission()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r3 = virtualinvoke $r9.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findViewUsePermission()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r24 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r24 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if null != r24
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if null != r24 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r3 != null
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r3 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r5 = (java.lang.String) $r10
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r5 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r11 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO>
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r11 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r6 = virtualinvoke $r11.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findByName(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r6 = virtualinvoke $r11.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findByName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r6 != null
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r6 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r7 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : r7 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r7 != null
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if r7 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r12 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO>
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r12 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $z2 = virtualinvoke $r12.<org.apache.ambari.server.orm.dao.PrivilegeDAO: boolean exists(org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>(r7, r24, r3)
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $z2 = virtualinvoke $r12.<org.apache.ambari.server.orm.dao.PrivilegeDAO: boolean exists(org.apache.ambari.server.orm.entities.PrincipalEntity,org.apache.ambari.server.orm.entities.ResourceEntity,org.apache.ambari.server.orm.entities.PermissionEntity)>(r7, r24, r3) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.equals : if r0 != r1
org.apache.ambari.server.orm.entities.ResourceEntity.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.equals : return 1
org.apache.ambari.server.orm.entities.ResourceEntity.equals : return 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.equals : if r0 != r1
org.apache.ambari.server.orm.entities.PermissionEntity.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.equals : return 1
org.apache.ambari.server.orm.entities.PermissionEntity.equals : return 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistryTest$1: java.lang.Boolean answer()>()
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistryTest$1: java.lang.Boolean answer()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object[] getCurrentArguments()>()
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r1 = staticinvoke <org.easymock.EasyMock: java.lang.Object[] getCurrentArguments()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r3 = $r1[0]
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r3 = $r1[0] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$1: java.util.Map val$permissions>
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$1: java.util.Map val$permissions> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("CLUSTER.ADMINISTRATOR")
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("CLUSTER.ADMINISTRATOR") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r5 = (org.apache.ambari.server.orm.entities.PermissionEntity) $r4
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r5 = (org.apache.ambari.server.orm.entities.PermissionEntity) $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>()
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.PrincipalEntity getPrincipal()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : if $r3 != $r6
org.apache.ambari.server.view.ViewRegistryTest$1.answer : if $r3 != $r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $z0 = 0
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $z0 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : return $r7
org.apache.ambari.server.view.ViewRegistryTest$1.answer : return $r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : return $r1
org.apache.ambari.server.view.ViewRegistryTest$1.answer : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if $z2 != 0
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r13 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r13 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : specialinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : specialinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r3)
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r7)
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r24)
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r24) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r14 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO>
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : $r14 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r14.<org.apache.ambari.server.orm.dao.PrivilegeDAO: void create(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r13)
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : virtualinvoke $r14.<org.apache.ambari.server.orm.dao.PrivilegeDAO: void create(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistry.setViewInstanceRoleAccess : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : $z0 = 1
org.apache.ambari.server.view.ViewRegistryTest$1.answer : $z0 = 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.answer : goto [?= $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)]
org.apache.ambari.server.view.ViewRegistryTest$1.answer : goto [?= $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1 = newarray (java.lang.Object)[4]
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[0] = $r2
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[1] = $r3
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[1] = $r3 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[2] = $r4
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[2] = $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[3] = $r5
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1[3] = $r5 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r12 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r12 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i5 = virtualinvoke $r12.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i5 = virtualinvoke $r12.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= $i0 = 31 * $i5]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= $i0 = 31 * $i5] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i0 = 31 * $i5
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i0 = 31 * $i5 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionName")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionName") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i7 = 0
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i7 = 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i8 = $i0 + $i7
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i8 = $i0 + $i7 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i1 = 31 * i8
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i1 = 31 * i8 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionLabel()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionLabel()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionLabel")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionLabel") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionLabel>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionLabel> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r3 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i9 = 0
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i9 = 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i10 = $i1 + $i9
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i10 = $i1 + $i9 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i2 = 31 * i10
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i2 = 31 * i10 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r9 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r9 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i11 = virtualinvoke $r9.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i11 = virtualinvoke $r9.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i12 = $i2 + $i11]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i12 = $i2 + $i11] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i12 = $i2 + $i11
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i12 = $i2 + $i11 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i3 = 31 * i12
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i3 = 31 * i12 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("sortOrder")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("sortOrder") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer sortOrder>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer sortOrder> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r5 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i13 = virtualinvoke $r8.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i13 = virtualinvoke $r8.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i14 = $i3 + $i13]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i14 = $i3 + $i13] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i14 = $i3 + $i13
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i14 = $i3 + $i13 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i4 = 31 * i14
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i4 = 31 * i14 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r6 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r6 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Set _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i15 = interfaceinvoke $r7.<java.util.Set: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i15 = interfaceinvoke $r7.<java.util.Set: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i16 = $i4 + $i15]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i16 = $i4 + $i15] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i16 = $i4 + $i15
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i16 = $i4 + $i15 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : return i16
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : return i16 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.Long: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i1 = virtualinvoke $r4.<java.lang.Long: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= $i0 = 31 * $i1]
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= $i0 = 31 * $i1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i0 = 31 * $i1
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i0 = 31 * $i1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i3 = virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i3 = virtualinvoke $r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= i4 = $i0 + $i3]
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= i4 = $i0 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : i4 = $i0 + $i3
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : i4 = $i0 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i1 = virtualinvoke $r1.<java.lang.Long: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i1 = virtualinvoke $r1.<java.lang.Long: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i0 = 31 * i1
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i0 = 31 * i1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i2 = virtualinvoke $r3.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i2 = virtualinvoke $r3.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i1 = virtualinvoke $r1.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i1 = virtualinvoke $r1.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i0 = 31 * i1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i0 = 31 * i1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : goto [?= i3 = $i0 + $i2]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : goto [?= i3 = $i0 + $i2] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i3 = $i0 + $i2
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i3 = $i0 + $i2 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : return i3
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : return i3 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : goto [?= i3 = $i0 + $i2]
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : goto [?= i3 = $i0 + $i2] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i3 = $i0 + $i2
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i3 = $i0 + $i2 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : return i3
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : return i3 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : return $i0
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : return $i0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if r0 != r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if r1 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $r3 == $r4
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : r2 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : r2 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6)
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z0 == 0
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r8 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r8 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8)
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z1 == 0
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r9 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r9 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r10 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r10 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r9, $r10)
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if r0 != r1
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if r1 == null
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if $r3 == $r4
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : r2 = (org.apache.ambari.server.orm.entities.PrincipalEntity) r1
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : r2 = (org.apache.ambari.server.orm.entities.PrincipalEntity) r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $z0 = virtualinvoke $r5.<java.lang.Long: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $z0 = virtualinvoke $r5.<java.lang.Long: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if $z0 == 0
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $z2 = 0
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : $z2 = 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.equals : return $z2
org.apache.ambari.server.orm.entities.PrincipalEntity.equals : return $z2 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z2 == 0
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z4 = 0
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z4 = 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : return $z4
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : return $z4 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r11 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z3 == 0
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z4 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : $z4 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.equals : goto [?= return $z4]
