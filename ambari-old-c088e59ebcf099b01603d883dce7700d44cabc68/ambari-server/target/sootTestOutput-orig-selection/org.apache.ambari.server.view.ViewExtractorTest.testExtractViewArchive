org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml>
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r4 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1]
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;"
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "Lorg/apache/ambari/server/view/configuration/ViewConfig;" >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = virtualinvoke r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>($r4) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r8 = new java.util.Properties >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r8.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r8.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7)
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r4, r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r5
org.apache.ambari.server.configuration.Configuration.getProperty : return $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r19 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r18) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r19 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, $r12, "view.jar") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions>
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r8 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY")
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version>
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build>
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker>
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system>
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal>
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;"
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "Lorg/apache/ambari/server/orm/entities/ViewEntityTest;" >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r16) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l1 = 20L >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>()
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r13 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r8 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File viewArchive>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r8 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File viewArchive> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r9 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r9 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration>
org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r8, $r9)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r8, $r9) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r10 = new java.util.HashMap
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r10 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r10.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r10.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $z0 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $z0 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : if $z0 == 0
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r12 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File extractedArchiveDir>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r12 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File extractedArchiveDir> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", $r12)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", $r12) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r14 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File archiveDir>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r14 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File archiveDir> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", $r14)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", $r14) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r16 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File entryFile>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r16 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File entryFile> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", $r16)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", $r16) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r18 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File classesDir>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r18 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File classesDir> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", $r18)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", $r18) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r20 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File libDir>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r20 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File libDir> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", $r20)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", $r20) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r22 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File metaInfDir>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r22 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File metaInfDir> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", $r22)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", $r22) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r24 = new java.util.HashMap
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r24 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r24.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r24.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r26 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File entryFile>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r26 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File entryFile> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r25 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.FileOutputStream fos>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r25 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.FileOutputStream fos> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r25)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r25) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r28 = new java.util.HashMap
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r30 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File viewArchive>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r30 = <org.apache.ambari.server.view.ViewExtractorTest: java.io.File viewArchive> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r29 = <org.apache.ambari.server.view.ViewExtractorTest: java.util.jar.JarInputStream viewJarFile>
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r29 = <org.apache.ambari.server.view.ViewExtractorTest: java.util.jar.JarInputStream viewJarFile> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r29)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r29) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r32 = new org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r32 = new org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r32.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map)>(r2, $r10, $r24, $r28)
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r32.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map)>(r2, $r10, $r24, $r28) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r33 = new org.apache.ambari.server.view.ViewExtractor
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r33 = new org.apache.ambari.server.view.ViewExtractor >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r33.<org.apache.ambari.server.view.ViewExtractor: void <init>()>()
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : specialinvoke $r33.<org.apache.ambari.server.view.ViewExtractor: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r33.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r32
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : $r33.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r32 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : return $r33
org.apache.ambari.server.view.ViewExtractorTest.getViewExtractor : return $r33 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z0 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z5 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z5 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z5 != 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z5 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating archive folder ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating archive folder ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r74 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r74 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r74)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r74) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setStatusDetail : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String statusDetail> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setStatusDetail : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String statusDetail> = r1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r20 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r20 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>(r74)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>(r74) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z1 = virtualinvoke r3.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z1 = virtualinvoke r3.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z1 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r27 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r27 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r75 = virtualinvoke $r27.<org.apache.ambari.server.view.ViewArchiveUtility: java.util.jar.JarInputStream getJarFileStream(java.io.File)>(r2)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r75 = virtualinvoke $r27.<org.apache.ambari.server.view.ViewArchiveUtility: java.util.jar.JarInputStream getJarFileStream(java.io.File)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : $r2 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map jarFiles>
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : $r2 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map jarFiles> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : $r4 = (java.util.jar.JarInputStream) $r3
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : $r4 = (java.util.jar.JarInputStream) $r3 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : return $r4
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getJarFileStream : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting files from ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting files from ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r30 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r30 = virtualinvoke r2.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r76 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r76 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r76)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r76) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r33 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r33 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>(r76)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>(r76) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r35 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r35 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r34 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r34 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r37 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r37 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r5 = virtualinvoke $r35.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>($r40)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r5 = virtualinvoke $r35.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : $r2 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map files>
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : $r2 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map files> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : $r4 = (java.io.File) $r3
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : $r4 = (java.io.File) $r3 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : return $r4
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFile : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z2 = virtualinvoke r5.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z2 = virtualinvoke r5.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z2 != 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $r41 == null
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $r41 == null >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r42 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r42 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r44 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r44 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r46 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r46 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r7 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r7 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r48 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r48 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Extracting {}", r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Extracting {}", r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r49 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r49 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r8 = virtualinvoke $r49.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r8 = virtualinvoke $r49.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z3 = virtualinvoke $r41.<java.util.jar.JarEntry: boolean isDirectory()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z3 = virtualinvoke $r41.<java.util.jar.JarEntry: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z3 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r50 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r50 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r9 = virtualinvoke $r50.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.FileOutputStream getFileOutputStream(java.io.File)>(r8)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r9 = virtualinvoke $r50.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.FileOutputStream getFileOutputStream(java.io.File)>(r8) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : $r2 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map outputStreams>
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : $r2 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map outputStreams> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : $r4 = (java.io.FileOutputStream) $r3
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : $r4 = (java.io.FileOutputStream) $r3 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : return $r4
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getFileOutputStream : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r51 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r51 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r52 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r52 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Begin copying from {} to {}", $r52, r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Begin copying from {} to {}", $r52, r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r10 = newarray (byte)[1024]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r10 = newarray (byte)[1024] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $i1 <= -1
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $i1 <= -1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void write(byte[],int,int)>(r10, 0, $i1)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void write(byte[],int,int)>(r10, 0, $i1) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10)]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $i1 = virtualinvoke r75.<java.util.jar.JarInputStream: int read(byte[])>(r10)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r53 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r53 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r54 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r54 = virtualinvoke $r41.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r53.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Finish copying from {} to {}", $r54, r7)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r53.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Finish copying from {} to {}", $r54, r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void flush()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void close()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r9.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>()]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>()] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void closeEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= (branch)]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r41 = virtualinvoke r75.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void close()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r75.<java.util.jar.JarInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r14 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r80 = virtualinvoke $r14.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r4, 0)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r80 = virtualinvoke $r14.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r4, 0) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r4 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r4 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z1 == 0
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r3 = (java.io.File) $r6
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r3 = (java.io.File) $r6 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r7 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r7 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z2 == 0
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r8 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r8 = r0.<org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r10 = (org.apache.ambari.server.view.configuration.ViewConfig) $r9
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r10 = (org.apache.ambari.server.view.configuration.ViewConfig) $r9 >>>>>>>> org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : return $r10
org.apache.ambari.server.view.ViewExtractorTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : return $r10 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r15 = specialinvoke r0.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader getArchiveClassLoader(org.apache.ambari.server.view.configuration.ViewConfig,java.io.File)>(r80, r3)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r15 = specialinvoke r0.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader getArchiveClassLoader(org.apache.ambari.server.view.configuration.ViewConfig,java.io.File)>(r80, r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r12 = new java.util.LinkedList
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r12 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r12.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r12.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r15 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r15 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/classes")
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/classes") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r18 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r18 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r6 = virtualinvoke $r18.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r6 = virtualinvoke $r18.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z0 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z0 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z0 == 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r27 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r27 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r28 = virtualinvoke $r27.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r28 = virtualinvoke $r27.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r28)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r21 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r21 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/lib")
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/lib") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r7 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r7 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r24 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r24 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r8 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r8 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z1 = virtualinvoke r8.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z1 = virtualinvoke r8.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z1 == 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r9 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r9 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if r9 == null
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if r9 == null >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i0 = lengthof r9
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i0 = lengthof r9 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if i1 >= i0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if i1 >= i0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r11 = r9[i1]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r11 = r9[i1] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z3 = virtualinvoke r11.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z3 = virtualinvoke r11.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z3 != 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r25 = virtualinvoke r11.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r25 = virtualinvoke r11.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r26 = virtualinvoke $r25.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r26 = virtualinvoke $r25.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r26)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = i1 + 1
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : goto [?= (branch)]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r29 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r29 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r30 = virtualinvoke $r29.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r30 = virtualinvoke $r29.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r30)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r31 = new org.apache.ambari.server.view.ViewClassLoader
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r31 = new org.apache.ambari.server.view.ViewClassLoader >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $i2 = interfaceinvoke $r12.<java.util.List: int size()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $i2 = interfaceinvoke $r12.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r32 = newarray (java.net.URL)[$i2]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r32 = newarray (java.net.URL)[$i2] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r33 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r33 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r34 = (java.net.URL[]) $r33
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r34 = (java.net.URL[]) $r33 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r31.<org.apache.ambari.server.view.ViewClassLoader: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,java.net.URL[])>(r1, $r34)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r31.<org.apache.ambari.server.view.ViewClassLoader: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,java.net.URL[])>(r1, $r34) >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : $r3 = new org.eclipse.jetty.webapp.WebAppContext
org.apache.ambari.server.view.ViewClassLoader.getInitContext : $r3 = new org.eclipse.jetty.webapp.WebAppContext >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : specialinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void <init>()>()
org.apache.ambari.server.view.ViewClassLoader.getInitContext : specialinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.server.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.server.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.view.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.view.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.google.inject.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.google.inject.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.slf4j.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.slf4j.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.sun.jersey.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.sun.jersey.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.velocity.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke $r3.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.velocity.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r0 == null
org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r0 == null >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : r2 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getExtraClasspath()>()
org.apache.ambari.server.view.ViewClassLoader.getInitContext : r2 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getExtraClasspath()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List classpath>
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List classpath> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r3 = null
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r3 = null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : goto [?= return $r3]
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : return $r3
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : return $r3 >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r2 == null
org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : return $r3
org.apache.ambari.server.view.ViewClassLoader.getInitContext : return $r3 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : return $r31
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : return $r31 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : return $r15
