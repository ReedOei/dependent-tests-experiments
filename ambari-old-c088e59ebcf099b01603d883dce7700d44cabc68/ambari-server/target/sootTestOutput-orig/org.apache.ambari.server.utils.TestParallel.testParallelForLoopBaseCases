org.apache.ambari.server.utils.Parallel.forLoop : $i0 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.ambari.server.utils.Parallel.forLoop : if r0 == null goto $r41 = new org.apache.ambari.server.utils.ParallelLoopResult
org.apache.ambari.server.utils.Parallel.forLoop : if i1 < 0 goto $r5 = new java.lang.IndexOutOfBoundsException
org.apache.ambari.server.utils.Parallel.forLoop : $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.utils.Parallel.forLoop : if i0 <= i1 goto $i4 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.ambari.server.utils.Parallel.forLoop : if r0 == null goto $r2 = new org.apache.ambari.server.utils.ParallelLoopResult
org.apache.ambari.server.utils.Parallel.forLoop : $i4 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.ambari.server.utils.Parallel.forLoop : if i0 < 0 goto $r4 = new java.lang.IndexOutOfBoundsException
org.apache.ambari.server.utils.Parallel.forLoop : $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.utils.Parallel.forLoop : $i2 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.ambari.server.utils.Parallel.forLoop : $i3 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.ambari.server.utils.Parallel.initExecutor : virtualinvoke $r3.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1)
org.apache.ambari.server.utils.Parallel.initExecutor : $r3 = new java.util.concurrent.ThreadPoolExecutor
org.apache.ambari.server.utils.Parallel.initExecutor : $r7 = newarray (java.lang.Object)[4]
org.apache.ambari.server.utils.Parallel.initExecutor : return $r3
org.apache.ambari.server.utils.Parallel.initExecutor : $r2 = new java.util.concurrent.SynchronousQueue
org.apache.ambari.server.utils.Parallel.initExecutor : $r8 = <org.apache.ambari.server.utils.Parallel: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.TestParallel$3.run : $r2 = (java.lang.Integer) r1
org.apache.ambari.server.utils.TestParallel$3.run : return r1
org.apache.ambari.server.utils.ParallelLoopResult.getResult : $r1 = r0.<org.apache.ambari.server.utils.ParallelLoopResult: java.util.List result>
org.apache.ambari.server.utils.ParallelLoopResult.getIsCompleted : $z0 = r0.<org.apache.ambari.server.utils.ParallelLoopResult: boolean isCompleted>
