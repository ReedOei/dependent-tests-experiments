org.apache.ambari.server.security.authorization.UserName.toString : $r1 = r0.<org.apache.ambari.server.security.authorization.UserName: java.lang.String userName>
org.apache.ambari.server.security.authorization.AuthorizationHelper.resolveLoginAliasToUserName : if r1 == null goto return r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.resolveLoginAliasToUserName : $r2 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.resolveLoginAliasToUserName : $r3 = virtualinvoke r1.<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>(r0, 1)
org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator.getGrantedAuthorities : $r10 = r0.<org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator.getGrantedAuthorities : if r2 != null goto $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Boolean getActive()>()
org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator.getGrantedAuthorities : r24 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String resolveLoginAliasToUserName(java.lang.String)>(r23)
org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator.getGrantedAuthorities : $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Boolean getActive()>()
org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator.getGrantedAuthorities : $r5 = <org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator: org.slf4j.Logger log>
org.apache.ambari.server.security.authorization.AmbariLdapAuthoritiesPopulator.getGrantedAuthorities : $r15 = new org.apache.ambari.server.security.authorization.InvalidUsernamePasswordCombinationException
org.apache.ambari.server.orm.entities.UserEntity.setUserPassword : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userPassword(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.UserEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.UserEntity.setUserName : $r2 = virtualinvoke r1.<org.apache.ambari.server.security.authorization.UserName: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.UserEntity.getActive : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer _persistence_get_active()>()
org.apache.ambari.server.orm.entities.UserEntity.setUserId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.UserEntity: void _persistence_set_userId(java.lang.Integer)>(r1)
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : $r3 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1)
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : i0 = lengthof r1
org.apache.ambari.server.security.authorization.UserName.rejectIfContainsAnyOf : c1 = r1[i2]
org.apache.ambari.server.orm.entities.UserEntity.setActive : $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.orm.entities.UserEntity.setActive : if r1 != null goto $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.orm.entities.UserEntity.setActive : $b0 = 1
org.apache.ambari.server.security.authorization.UserName.fromString : $r1 = new org.apache.ambari.server.security.authorization.UserName
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r4 = new org.apache.ambari.server.orm.entities.PrincipalEntity
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r5 = new org.apache.ambari.server.orm.entities.UserEntity
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : virtualinvoke $r5.<org.apache.ambari.server.orm.entities.UserEntity: void setPrincipal(org.apache.ambari.server.orm.entities.PrincipalEntity)>($r4)
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r15 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r8 = staticinvoke <org.apache.ambari.server.security.authorization.UserName: org.apache.ambari.server.security.authorization.UserName fromString(java.lang.String)>(r1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r9 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest: org.springframework.security.crypto.password.PasswordEncoder encoder>
org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest.createUser : $r11 = r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationProviderDisableUserTest: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.security.authorization.UserName.validated : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0)
org.apache.ambari.server.security.authorization.UserName.validated : $r1 = <org.apache.ambari.server.security.authorization.UserName: char[] FORBIDDEN_CHARS>
org.apache.ambari.server.security.authorization.UserName.validated : return r0
