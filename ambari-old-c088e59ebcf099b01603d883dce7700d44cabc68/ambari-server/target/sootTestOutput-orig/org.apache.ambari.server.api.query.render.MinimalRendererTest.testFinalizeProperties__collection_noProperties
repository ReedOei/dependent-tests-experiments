org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.api.query.render.BaseRenderer.init : r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory> = r1
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : $r8 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Map m_originalProperties>
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : $r11 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : $r7 = virtualinvoke r2.<org.apache.ambari.server.api.query.QueryInfo: org.apache.ambari.server.api.resources.ResourceDefinition getResource()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : if r16 != null goto $r10 = virtualinvoke r2.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set getProperties()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : $r13 = new java.util.HashSet
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : $r14 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Map m_originalProperties>
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : $r10 = virtualinvoke r2.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set getProperties()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processRequestedProperties : if r2 == null goto return
org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r1 == null goto return 0
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1 goto (branch)
org.apache.ambari.server.controller.spi.Resource$Type.equals : $i1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.spi.Resource$Type.equals : r2 = (org.apache.ambari.server.controller.spi.Resource$Type) r1
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null goto $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : r6 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r5)
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : r4 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type[] values()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : r5 = r4[i1]
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : if r6 == null goto i1 = i1 + 1
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : r3 = virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r1)
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.QueryInfo.getProperties : $r1 = r0.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set m_properties>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addKeys(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>(r2, r3)
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if z0 == 0 goto $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.String getName()>()
org.apache.ambari.server.controller.spi.Resource$Type.valueOf : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.valueOf : if r1 != null goto return r1
org.apache.ambari.server.controller.spi.Resource$Type.valueOf : return r1
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.controller.spi.Resource$Type.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type>
org.apache.ambari.server.api.query.QueryInfo.getResource : $r1 = r0.<org.apache.ambari.server.api.query.QueryInfo: org.apache.ambari.server.api.resources.ResourceDefinition m_resource>
org.apache.ambari.server.api.query.render.BaseRenderer.getSchema : $r2 = r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory>
org.apache.ambari.server.api.util.TreeNodeImpl.getName : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.String m_name>
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void ensureRequiredProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>($r5, z2)
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : $r8 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : $r4 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : $r6 = virtualinvoke r2.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set getProperties()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : $r5 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void copyPropertiesToResult(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.util.TreeNode)>(r1, $r5)
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : z2 = 1
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : if z0 != 0 goto specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void processRequestedProperties(org.apache.ambari.server.api.util.TreeNode)>(r1)
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void processRequestedProperties(org.apache.ambari.server.api.util.TreeNode)>(r1)
org.apache.ambari.server.api.query.render.MinimalRenderer.finalizeProperties : r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean m_isCollection> = z0
