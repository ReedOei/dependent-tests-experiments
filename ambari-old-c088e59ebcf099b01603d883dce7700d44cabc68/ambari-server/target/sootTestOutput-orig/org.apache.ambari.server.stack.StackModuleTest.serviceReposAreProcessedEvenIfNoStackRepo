org.apache.ambari.server.state.RepositoryInfo.access$000 : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName>
org.apache.ambari.server.stack.ServiceModule.getId : $r1 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.state.StackInfo.getServices : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.util.Collection services>
org.apache.ambari.server.state.StackInfo.getServices : $r3 = new java.util.ArrayList
org.apache.ambari.server.state.RepositoryInfo$3.apply : $r2 = (org.apache.ambari.server.state.RepositoryInfo) r1
org.apache.ambari.server.state.RepositoryInfo$3.apply : $r2 = staticinvoke <org.apache.ambari.server.state.RepositoryInfo: java.lang.String access$200(org.apache.ambari.server.state.RepositoryInfo)>(r1)
org.apache.ambari.server.state.StackInfo.setName : r0.<org.apache.ambari.server.state.StackInfo: java.lang.String name> = r1
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.stack.RepositoryXml: java.lang.String getLatestURI()>()
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : r4 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ServiceDirectory getServiceDirectory()>()
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : $z1 = r4 instanceof org.apache.ambari.server.stack.StackServiceDirectory
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : $r11 = virtualinvoke r6.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>()
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : if null == r6 goto (branch)
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : $r7 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : r5 = (org.apache.ambari.server.stack.StackServiceDirectory) r4
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : $r8 = r0.<org.apache.ambari.server.stack.StackModule: java.util.Map serviceModules>
org.apache.ambari.server.stack.StackModule.getAllServiceRepos : r6 = virtualinvoke r5.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>()
org.apache.ambari.server.stack.StackModule.addServices : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.addServices : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.addServices : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.addServices : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void addService(org.apache.ambari.server.stack.ServiceModule)>(r3)
org.apache.ambari.server.state.RepositoryInfo.access$100 : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoId>
org.apache.ambari.server.state.StackInfo.getParentStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.lang.String parentStackVersion>
org.apache.ambari.server.stack.ServiceModule.getModuleInfo : $r1 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r15 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getStackDirName()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : i0 = lengthof r3
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r39 = virtualinvoke r7.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r6 = r3[i1]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r45 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/ServiceMetainfoXml;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r11 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackDirectory;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z0 = virtualinvoke r2.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r24)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackContext;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r12 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.util.Collection getServiceDirectories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r37 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackServiceDirectory;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z2 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isValid()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r65 = virtualinvoke r7.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml getMetaInfoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r18 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.io.File getDirectory()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r60 = virtualinvoke r9.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r55 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r27 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z1 = virtualinvoke r9.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: boolean isValid()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24 = newarray (java.lang.Object)[2]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r42 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r38 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r23 = new org.apache.ambari.server.stack.StackModule
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r50 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceInfo;")
org.apache.ambari.server.stack.StackModule.findDuplicates : r2 = staticinvoke <com.google.common.collect.Multimaps: com.google.common.collect.ImmutableListMultimap index(java.lang.Iterable,com.google.common.base.Function)>(r0, r1)
org.apache.ambari.server.stack.StackModule.findDuplicates : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.findDuplicates : $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.stack.StackModule.findDuplicates : $r7 = new java.util.HashSet
org.apache.ambari.server.stack.StackModule.findDuplicates : $r8 = interfaceinvoke r2.<com.google.common.collect.ListMultimap: java.util.Map asMap()>()
org.apache.ambari.server.stack.StackModule.findDuplicates : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModuleTest.repoInfo : virtualinvoke $r6.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>(r3)
org.apache.ambari.server.stack.StackModuleTest.repoInfo : return $r6
org.apache.ambari.server.stack.StackModuleTest.repoInfo : $r4 = specialinvoke r0.<org.apache.ambari.server.stack.StackModuleTest: org.apache.ambari.server.state.RepositoryInfo repoInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, "centos6")
org.apache.ambari.server.stack.StackModuleTest.repoInfo : virtualinvoke $r6.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>(r1)
org.apache.ambari.server.stack.StackModuleTest.repoInfo : virtualinvoke $r6.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>(r4)
org.apache.ambari.server.stack.StackModuleTest.repoInfo : $r6 = new org.apache.ambari.server.state.RepositoryInfo
org.apache.ambari.server.stack.StackModuleTest.repoInfo : $r7 = newarray (java.lang.Object)[2]
org.apache.ambari.server.stack.StackModule.populateService : r3 = virtualinvoke r1.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml getMetaInfoFile()>()
org.apache.ambari.server.stack.StackModule.populateService : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.populateService : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.stack.StackModule.populateService : r4 = virtualinvoke r3.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>()
org.apache.ambari.server.stack.StackModule.populateService : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.populateService : $r10 = new org.apache.ambari.server.stack.ServiceModule
org.apache.ambari.server.stack.StackModule.populateService : $r8 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.populateService : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.populateService : $z3 = virtualinvoke $r10.<org.apache.ambari.server.stack.ServiceModule: boolean isValid()>()
org.apache.ambari.server.stack.StackModule.populateService : $z0 = virtualinvoke r3.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: boolean isValid()>()
org.apache.ambari.server.stack.StackModule.populateService : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void addServices(java.util.Collection)>($r8)
org.apache.ambari.server.state.RepositoryInfo.hashCode : $z0 = r0.<org.apache.ambari.server.state.RepositoryInfo: boolean ambariManagedRepositories>
org.apache.ambari.server.state.RepositoryInfo.hashCode : $r1 = newarray (java.lang.Object)[9]
org.apache.ambari.server.stack.StackModule.populateStackInfo : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void populateServices()>()
org.apache.ambari.server.stack.StackModule.populateStackInfo : $r71 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.stack.StackDirectory stackDirectory>
org.apache.ambari.server.stack.StackModule.populateStackInfo : if r1 == null goto $r71 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.stack.StackDirectory stackDirectory>
org.apache.ambari.server.stack.StackModule.populateStackInfo : $r20 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.stack.StackDirectory stackDirectory>
org.apache.ambari.server.stack.StackModule.populateStackInfo : $r4 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.populateStackInfo : $r7 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.populateStackInfo : $r9 = newarray (java.lang.Object)[2]
org.apache.ambari.server.stack.StackModule.populateStackInfo : if r72 == null goto specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void populateServices()>()
org.apache.ambari.server.stack.StackModule.populateStackInfo : $r16 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.populateStackInfo : $r73 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r20 = new java.util.ArrayList
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r7 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r25 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r23 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r18 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r43 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.state.RepositoryInfo.setRepoName : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName> = r1
org.apache.ambari.server.state.StackInfo.getProperties : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.util.List properties>
org.apache.ambari.server.state.StackInfo.getProperties : $r3 = new java.util.ArrayList
org.apache.ambari.server.state.RepositoryInfo.setBaseUrl : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String baseUrl> = r1
org.apache.ambari.server.stack.StackModule.getModuleInfo : $r1 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.state.RepositoryInfo.setRepoId : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoId> = r1
org.apache.ambari.server.state.StackInfo.getRepositories : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.util.List repositories>
org.apache.ambari.server.state.StackInfo.getRepositories : $r3 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r19 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r13 = virtualinvoke r61.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r12 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r16 = new java.util.HashMap
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r8 = r0.<org.apache.ambari.server.stack.StackModule: java.util.Map serviceModules>
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r17 = virtualinvoke r47.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r5 = new java.util.HashMap
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r15 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r10 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.processPropertyDependencies : $r6 = r0.<org.apache.ambari.server.stack.StackModule: java.util.Map serviceModules>
org.apache.ambari.server.state.StackInfo.getRefreshCommandConfiguration : $r1 = r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.RefreshCommandConfiguration refreshCommandConfiguration>
org.apache.ambari.server.stack.ServiceModule.populateComponentModules : $r3 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.StackModule.populateServices : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void populateService(org.apache.ambari.server.stack.ServiceDirectory)>(r2)
org.apache.ambari.server.stack.StackModule.populateServices : $r3 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.stack.StackDirectory stackDirectory>
org.apache.ambari.server.stack.StackModule.populateServices : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.populateServices : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.RepositoryInfo$1.apply : $r2 = staticinvoke <org.apache.ambari.server.state.RepositoryInfo: java.lang.String access$000(org.apache.ambari.server.state.RepositoryInfo)>(r1)
org.apache.ambari.server.state.RepositoryInfo$1.apply : $r2 = (org.apache.ambari.server.state.RepositoryInfo) r1
org.apache.ambari.server.state.RepositoryInfo.getBaseUrl : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String baseUrl>
org.apache.ambari.server.stack.StackModule.validateBulkCommandComponents : $r13 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.validateBulkCommandComponents : $r14 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackModule.validateBulkCommandComponents : $r24 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.stack.StackModule.validateBulkCommandComponents : $r23 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.validateBulkCommandComponents : if null == r3 goto return
org.apache.ambari.server.state.StackInfo.getUpgradePacks : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.util.Map upgradePacks>
org.apache.ambari.server.state.RepositoryInfo.access$200 : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String baseUrl>
org.apache.ambari.server.stack.StackModule.processUpgradePacks : $r4 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.state.RepositoryInfo$2.apply : $r2 = staticinvoke <org.apache.ambari.server.state.RepositoryInfo: java.lang.String access$100(org.apache.ambari.server.state.RepositoryInfo)>(r1)
org.apache.ambari.server.state.RepositoryInfo$2.apply : $r2 = (org.apache.ambari.server.state.RepositoryInfo) r1
org.apache.ambari.server.state.RepositoryInfo.getRepoName : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName>
org.apache.ambari.server.stack.StackModule.addService : r2 = virtualinvoke r1.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackModule.addService : $r6 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.addService : if r3 != null goto return
org.apache.ambari.server.stack.StackModule.addService : $r4 = r0.<org.apache.ambari.server.stack.StackModule: java.util.Map serviceModules>
org.apache.ambari.server.state.StackInfo.isValid : $z0 = r0.<org.apache.ambari.server.state.StackInfo: boolean valid>
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : if r1 == null goto return
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r4 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ServiceDirectory serviceDirectory>
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : r1 = virtualinvoke $r4.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.stack.ConfigurationDirectory getConfigurationDirectory(java.lang.String,java.lang.String)>($r5, "properties")
org.apache.ambari.server.state.StackInfo.getName : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.lang.String name>
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r29 = virtualinvoke r15.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getBaseUrl()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r16 = <org.apache.ambari.server.state.RepositoryInfo: com.google.common.base.Function GET_OSTYPE_FUNCTION>
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r15)
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r30 = virtualinvoke r15.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getRepoName()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r19 = virtualinvoke r3.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableSet keySet()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r23 = <org.apache.ambari.server.state.RepositoryInfo: com.google.common.base.Function SAFE_GET_BASE_URL_FUNCTION>
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r28 = virtualinvoke r15.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getBaseUrl()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r21 = <org.apache.ambari.server.state.RepositoryInfo: com.google.common.base.Function GET_REPO_NAME_FUNCTION>
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r27 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r18 = new java.util.HashSet
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : r2 = specialinvoke r0.<org.apache.ambari.server.stack.StackModule: java.util.List getAllServiceRepos()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r26 = <org.apache.ambari.server.state.RepositoryInfo: com.google.common.base.Function SAFE_GET_BASE_URL_FUNCTION>
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : r14 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r25 = <org.apache.ambari.server.state.RepositoryInfo: com.google.common.base.Function GET_REPO_NAME_FUNCTION>
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $r17 = <org.apache.ambari.server.state.RepositoryInfo: com.google.common.base.Function GET_OSTYPE_FUNCTION>
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : r9 = virtualinvoke r3.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList get(java.lang.Object)>(r7)
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : $z1 = virtualinvoke r4.<com.google.common.collect.ImmutableListMultimap: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.stack.StackModule.getUniqueServiceRepos : goto [?= $z6 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.resolve : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void processPropertyDependencies()>()
org.apache.ambari.server.stack.StackModule.resolve : $r21 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState RESOLVED>
org.apache.ambari.server.stack.StackModule.resolve : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void processUpgradePacks()>()
org.apache.ambari.server.stack.StackModule.resolve : $r19 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.resolve : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void mergeServicesWithExplicitParent(java.util.Map,java.util.Map,java.util.Map)>(r2, r3, r4)
org.apache.ambari.server.stack.StackModule.resolve : $r13 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.resolve : $r18 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.resolve : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void addExtensionServices()>()
org.apache.ambari.server.stack.StackModule.resolve : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void validateBulkCommandComponents(java.util.Map)>(r2)
org.apache.ambari.server.stack.StackModule.resolve : $r10 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED>
org.apache.ambari.server.stack.StackModule.resolve : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void processRepositories()>()
org.apache.ambari.server.stack.StackModule.resolve : if r5 == null goto $r19 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.ServiceModule.validateServiceInfo : $r1 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r17 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r6 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r34 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r19 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ServiceModule.getServiceDirectory : $r1 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ServiceDirectory serviceDirectory>
org.apache.ambari.server.state.RefreshCommandConfiguration.addRefreshCommands : $r3 = r0.<org.apache.ambari.server.state.RefreshCommandConfiguration: java.util.Map propertyComponentCommandMap>
org.apache.ambari.server.state.RefreshCommandConfiguration.addRefreshCommands : $r2 = r0.<org.apache.ambari.server.state.RefreshCommandConfiguration: java.util.Map propertyComponentCommandMap>
org.apache.ambari.server.state.RefreshCommandConfiguration.addRefreshCommands : $r4 = new java.util.HashMap
org.apache.ambari.server.state.RepositoryInfo.access$300 : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType>
org.apache.ambari.server.stack.StackModule.addDependedByProperties : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.StackInfo.getExtensions : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.util.Collection extensions>
org.apache.ambari.server.state.StackInfo.getExtensions : $r3 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.mergeServicesWithExplicitParent : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeServicesWithExplicitParent : if r7 == null goto (branch)
org.apache.ambari.server.stack.StackModule.mergeServicesWithExplicitParent : r7 = virtualinvoke r6.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getParent()>()
org.apache.ambari.server.stack.StackModule.mergeServicesWithExplicitParent : r6 = virtualinvoke r5.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackModule.mergeServicesWithExplicitParent : $r8 = r0.<org.apache.ambari.server.stack.StackModule: java.util.Map serviceModules>
org.apache.ambari.server.stack.StackModule.mergeServicesWithExplicitParent : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.processRepositories : $r3 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.stack.StackDirectory stackDirectory>
org.apache.ambari.server.stack.StackModule.processRepositories : if null == r1 goto $r4 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.processRepositories : if null == r1 goto return
org.apache.ambari.server.stack.StackModule.processRepositories : $r4 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.processRepositories : $r5 = r0.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo stackInfo>
org.apache.ambari.server.stack.StackModule.processRepositories : r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.stack.StackModule.processRepositories : r2 = specialinvoke r0.<org.apache.ambari.server.stack.StackModule: java.util.Set getUniqueServiceRepos(java.util.List)>(r19)
org.apache.ambari.server.state.RepositoryInfo.setOsType : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType> = r1
org.apache.ambari.server.state.StackInfo.setVersion : r0.<org.apache.ambari.server.state.StackInfo: java.lang.String version> = r1
org.apache.ambari.server.stack.StackModule.addExtensionServices : $r5 = r0.<org.apache.ambari.server.stack.StackModule: java.util.Map extensionModules>
org.apache.ambari.server.stack.StackModuleTest.getIds : $r2 = <org.apache.ambari.server.state.RepositoryInfo: com.google.common.base.Function GET_REPO_ID_FUNCTION>
org.apache.ambari.server.state.RepositoryInfo$4.apply : $r2 = staticinvoke <org.apache.ambari.server.state.RepositoryInfo: java.lang.String access$300(org.apache.ambari.server.state.RepositoryInfo)>(r1)
org.apache.ambari.server.state.RepositoryInfo$4.apply : $r2 = (org.apache.ambari.server.state.RepositoryInfo) r1
org.apache.ambari.server.state.StackInfo.getVersion : $r1 = r0.<org.apache.ambari.server.state.StackInfo: java.lang.String version>
org.apache.ambari.server.stack.ServiceModule.isValid : $z0 = r0.<org.apache.ambari.server.stack.ServiceModule: boolean valid>
