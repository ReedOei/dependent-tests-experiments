org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.audit.request.AbstractBaseCreator$1.getAuditMessage : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : r5 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: java.util.Map getQueryParameters(javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.RequestBody)>(r3, r2)
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : z2 = 1
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if r0 == null goto $z1 = 1
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r6 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getResultStatuses()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r11 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.isIncompatible : $r5 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>()
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap>
org.apache.ambari.server.audit.request.PutHostComponentCreator.getRequestTypes : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type PUT>
org.apache.ambari.server.audit.request.AllGetCreator.getRequestTypes : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null goto $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.audit.request.DefaultEventCreatorTest$2.getHeader : return null
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.testCreator : r6 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerTest: org.apache.ambari.server.api.services.Request createRequest(org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.api.services.Request$Type)>(r3, r2)
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.testCreator : $r12 = <org.apache.ambari.server.audit.request.RequestAuditLoggerTest: org.apache.ambari.server.audit.request.RequestAuditLogger requestAuditLogger>
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.testCreator : $r10 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.testCreator : r8 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerTest: org.easymock.Capture createCapture()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.testCreator : $r13 = virtualinvoke r8.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.testCreator : r9 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerTest: java.lang.String createExpectedMessage(java.lang.Class,org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>(r1, r2, r4, r5)
org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.audit.request.AllPostAndPutCreator.getResourceTypes : return null
org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : if r0 == null goto $z0 = 0
org.apache.ambari.server.api.services.BaseRequest.getResource : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type>
org.apache.ambari.server.audit.request.AllPostAndPutCreator.getRequestTypes : $r1 = new java.util.HashSet
org.apache.ambari.server.api.services.RequestFactory.createPostRequest : $r5 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST>
org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : $r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition>
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return r5
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r5 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteAddr()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z3 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r5)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r5 = null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r3 = <org.apache.ambari.server.utils.RequestUtils: java.util.Set headersToCheck>
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z1 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r5)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r5 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(r2)
org.apache.ambari.server.audit.request.RequestAuditLogModule.configure : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLogModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.audit.request.RequestAuditLogModule.configure : $r5 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.audit.request.RequestAuditLogModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLogModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/request/RequestAuditLogger;")
org.apache.ambari.server.audit.request.RequestAuditLogModule.configure : $r3 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.audit.request.RequestAuditLogModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLogModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.audit.request.RequestAuditLogModule.configure : $r7 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : return null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $z0 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: boolean isIncompatible(org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r1, r2, r3, r4)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $r9 = interfaceinvoke r1.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: java.util.Set getRequestTypes()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.getPriority : $b1 = 1
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $r6 = new com.sun.jersey.core.util.MultivaluedMapImpl
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $r5 = r0.<org.apache.ambari.server.api.services.LocalUriInfo: java.net.URI uri>
org.apache.ambari.server.audit.request.AllPostAndPutCreator.getResultStatuses : return null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r4 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r8 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r6 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator selectCreator(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r3, r5, r4)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if r6 == null goto return
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r7 = interfaceinvoke r6.<org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator: org.apache.ambari.server.audit.event.AuditEvent createAuditEvent(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : r5 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : if r7 == null goto return
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r11 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.log : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createCapture : $r2 = <org.apache.ambari.server.audit.request.RequestAuditLoggerTest: org.apache.ambari.server.audit.AuditLogger mockAuditLogger>
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createCapture : r1 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createCapture : $r12 = newarray (java.lang.Object)[1]
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createCapture : return r1
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createCapture : $r8 = <org.apache.ambari.server.audit.request.RequestAuditLoggerTest: org.apache.ambari.server.audit.AuditLogger mockAuditLogger>
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createCapture : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.audit.request.AbstractBaseCreator.getPrefix : $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.api.services.PostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST>
org.apache.ambari.server.api.services.ResultStatus.getStatusCode : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r6 = specialinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: java.lang.Integer getPriority(org.apache.ambari.server.audit.request.eventcreator.RequestAuditEventCreator,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.api.services.ResultStatus,org.apache.ambari.server.api.services.Request$Type)>(r5, r1, r2, r3)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r9 = null
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r9 = r5
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $r7 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerImpl: java.util.Set creators>
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : if r6 == null goto (branch)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r10 = r6
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)
org.apache.ambari.server.audit.request.RequestAuditLoggerImpl.selectCreator : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r2 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r1 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus$STATUS.getStatus : $i0 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: int m_code>
org.apache.ambari.server.api.services.LocalUriInfo.getRequestUri : $r1 = r0.<org.apache.ambari.server.api.services.LocalUriInfo: java.net.URI uri>
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createRequest : $r7 = r0.<org.apache.ambari.server.audit.request.RequestAuditLoggerTest: org.apache.ambari.server.api.services.RequestFactory requestFactory>
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createRequest : $r4 = new org.apache.ambari.server.api.query.QueryImpl
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.createExpectedMessage : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.RequestBody.getQueryString : $r1 = r0.<org.apache.ambari.server.api.services.RequestBody: java.lang.String m_query>
org.apache.ambari.server.audit.request.AbstractBaseCreator.createAuditEvent : $r3 = new org.apache.ambari.server.audit.request.AbstractBaseCreator$1
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.beforeClass : $r1 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.beforeClass : $r5 = interfaceinvoke r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.audit.request.RequestAuditLoggerTest.beforeClass : $r3 = interfaceinvoke r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/request/RequestAuditLogger;")
org.apache.ambari.server.api.services.ResultStatus$STATUS.getDescription : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: java.lang.String m_desc>
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r8 = interfaceinvoke r1.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r7 = new java.util.HashMap
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if r21 == null goto return $r7
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r21 = virtualinvoke r2.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.audit.request.DefaultEventCreatorTest$2.getRemoteAddr : return "1.2.3.4"
org.apache.ambari.server.api.services.RequestFactory.createRequest : $r6 = <org.apache.ambari.server.api.services.RequestFactory$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type>
org.apache.ambari.server.api.services.RequestFactory.createRequest : $r8 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: org.apache.ambari.server.api.services.Request createPostRequest(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r5)
org.apache.ambari.server.api.services.ResultStatus$STATUS.toString : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.services.ResultStatus$STATUS: java.lang.String getDescription()>()
