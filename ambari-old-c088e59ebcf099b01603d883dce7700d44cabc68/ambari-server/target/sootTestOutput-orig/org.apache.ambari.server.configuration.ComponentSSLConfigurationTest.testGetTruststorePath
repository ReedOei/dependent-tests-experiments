org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : goto [?= return r7]
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r7 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : return r7
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBKDF2WithHmacSHA1")
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : $r2 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: byte[] salt>
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r7 = null
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : $r4 = new javax.crypto.spec.PBEKeySpec
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.agent.HeartbeatTestHelper$1.configure : specialinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void configure()>()
org.apache.ambari.server.H2DatabaseCleaner.clearDatabaseAndStopPersistenceService : $r1 = interfaceinvoke r0.<com.google.inject.Injector: com.google.inject.Provider getProvider(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null goto r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = ""
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 goto $r3 = new java.lang.RuntimeException
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : if r3 != null goto $r6 = r3
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromStore(java.lang.String)>(r2)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.ldap.LdapModule.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapFacade;")
org.apache.ambari.server.ldap.LdapModule.configure : $r24 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/domain/AmbariLdapConfiguration;")
org.apache.ambari.server.ldap.LdapModule.configure : $r18 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConfigurationService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r23 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("GroupAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapConnectionConfigService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r15 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("UserAttributesDetectors")
org.apache.ambari.server.ldap.LdapModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/LdapAttributeDetectionService;")
org.apache.ambari.server.ldap.LdapModule.configure : $r26 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r20 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.ldap.LdapModule.configure : virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/ldap/service/ads/detectors/AttributeDetectorFactory;")
org.apache.ambari.server.ldap.LdapModule.configure : $r28 = virtualinvoke r2.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.ldap.LdapModule.configure : $r22 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : if r1 == null goto $r3 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_KSTR_DIR>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r5 = specialinvoke r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String getPassword(org.apache.ambari.server.configuration.Configuration)>(r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.state.stack.OsFamily.init : $r5 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : r23 = null
org.apache.ambari.server.state.stack.OsFamily.init : $r19 = <org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r14 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = new java.lang.RuntimeException
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r4 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : r34 = null
org.apache.ambari.server.controller.HostsMap.setupMap : if r34 == null goto return
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = staticinvoke <java.lang.System: java.util.Map getenv()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("AMBARI_SECURITY_MASTER_KEY")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r19 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r19 == null goto $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null goto return r19
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null goto return r19
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : r1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : if r1 == null goto $z1 = 0
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r14 = null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r14
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r37 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r7 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r10 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r73 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r4 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r13 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = new org.apache.ambari.server.ldap.LdapModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r72 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r16 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r71 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized> = 1
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r12 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r7 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z0 = r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r2 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> = null
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r9 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r7 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : return r12
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r6 = new java.util.Properties
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : return $r21
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r18 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r20 = new org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$TestConfiguration
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r21 = new org.apache.ambari.server.configuration.ComponentSSLConfiguration
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke $r21.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void init(org.apache.ambari.server.configuration.Configuration)>($r20)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r9 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Value of {} is not set, using {}", $r10, $r11)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r7 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : return r12
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.agent.HeartbeatTestHelper.getTestModule : $r0 = new org.apache.ambari.server.agent.HeartbeatTestHelper$1
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststorePath : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePath>
