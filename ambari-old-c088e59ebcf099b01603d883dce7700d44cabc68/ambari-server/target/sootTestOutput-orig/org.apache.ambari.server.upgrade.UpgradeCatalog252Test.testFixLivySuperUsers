org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null goto r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r11 == null goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r58 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r34 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r11)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r72 goto $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r15 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $z2 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r27 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null goto return
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r31 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r71 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r68, r69)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i1 = interfaceinvoke r9.<com.google.common.collect.Multimap: int size()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r68, r3, z0, r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null goto r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= $r71 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r68, r69)]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r1, r2, r3, null, z0, z1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.state.stack.OsFamily osFamily>
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null goto r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = ""
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 goto $r3 = new java.lang.RuntimeException
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r0 != null goto $r5 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r5 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r10 == null goto r10 = r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r10 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String principalName>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$2.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$2.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$2.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$2.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$2.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog252Test$2.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r7)
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: void updateListValues(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.util.Set,java.util.Set)>(r4, "livy-conf", "livy.superusers", $r21, $r22)
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : if r5 == null goto (branch)
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("zeppelin-env")
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $r23 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r9)
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : r9 = virtualinvoke r8.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrincipalName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : if r2 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $r15 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("zeppelin.server.kerberos.principal")
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $r13 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : if r1 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : if r6 == null goto (branch)
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $r21 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r9)
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252: void updateListValues(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.util.Set,java.util.Set)>(r4, "livy2-conf", "livy.superusers", $r23, $r24)
org.apache.ambari.server.upgrade.UpgradeCatalog252.fixLivySuperusers : r8 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal valueOf(java.lang.String,java.lang.String)>(r7, "EXAMPLE.COM")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.UpgradeCatalog252.getSourceVersion : return "2.5.1"
org.apache.ambari.server.state.StackId.equals : return 1
org.apache.ambari.server.state.StackId.equals : $z0 = r1 instanceof org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.StackId.equals : if r0 != r1 goto r2 = (org.apache.ambari.server.state.StackId) r1
org.apache.ambari.server.upgrade.UpgradeCatalog252.getTargetVersion : return "2.5.2"
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog252Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog252Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r18 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType ADDED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if z0 == 0 goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r14 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType UPDATED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : r15 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r4, 44)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : if r6 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : if r7 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : z3 = 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : if z2 != 0 goto r15 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r11, 44)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : $r11 = new java.util.TreeSet
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : r15 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r11, 44)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : if r4 == null goto $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r15)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : if r4 == null goto (branch)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : if r5 == null goto z3 = 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : r15 = null
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : z3 = interfaceinvoke $r11.<java.util.Set: boolean addAll(java.util.Collection)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : z2 = 0
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r8)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : z2 = interfaceinvoke $r11.<java.util.Set: boolean removeAll(java.util.Collection)>(r5)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : $r10 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog252.updateListValues : $r14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, r15)
