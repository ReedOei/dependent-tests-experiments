org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i2 = i3
org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke $r7.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void validateEndState()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i1 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r9 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryLexer: java.util.List parseStringTokens(java.lang.String)>(r1)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : z1 = 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r16 = <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Map TOKEN_HANDLERS>
org.apache.ambari.server.api.predicate.QueryLexer.tokens : i3 = 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z1 != 0 goto (branch)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r7 = new org.apache.ambari.server.api.predicate.QueryLexer$ScanContext
org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke $r7.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void addPropertiesToIgnore(java.util.Collection)>(r2)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r8 = <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Set SET_IGNORE>
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.setTokenType : r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token$TYPE m_previousTokenType> = r1
org.apache.ambari.server.api.predicate.expressions.RelationalExpression.toPredicate : $r2 = (org.apache.ambari.server.api.predicate.operators.RelationalOperator) $r1
org.apache.ambari.server.api.predicate.expressions.RelationalExpression.toPredicate : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.predicate.expressions.RelationalExpression: org.apache.ambari.server.api.predicate.operators.Operator getOperator()>()
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler.getType : $r1 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE PROPERTY_OPERAND>
org.apache.ambari.server.topology.HostGroupInfo.setPredicate : $r2 = <org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.api.predicate.PredicateCompiler predicateCompiler>
org.apache.ambari.server.topology.HostGroupInfo.setPredicate : r0.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String predicateString> = r1
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.addPropertiesToIgnore : if r1 == null goto return
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.addPropertiesToIgnore : $r2 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.Set m_propertiesToIgnore>
org.apache.ambari.server.api.predicate.QueryLexer$RelationalOperatorTokenHandler._handleToken : $r3 = new org.apache.ambari.server.api.predicate.Token
org.apache.ambari.server.api.predicate.QueryLexer$RelationalOperatorTokenHandler._handleToken : $r5 = new org.apache.ambari.server.api.predicate.Token
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.getLastTokenType : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: org.apache.ambari.server.api.predicate.Token$TYPE m_lastType>
org.apache.ambari.server.api.predicate.QueryParser$PropertyOperandTokenHandler._handleToken : $r4 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.expressions.Expression getPrecedingExpression()>()
org.apache.ambari.server.api.predicate.QueryParser$PropertyOperandTokenHandler._handleToken : return 1
org.apache.ambari.server.api.predicate.QueryParser$PropertyOperandTokenHandler._handleToken : $r3 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token[] getTokens()>()
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.addToken : $r2 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: org.apache.ambari.server.api.predicate.Token$TYPE m_ignoreSegmentEndToken>
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.addToken : $r5 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List m_listTokens>
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getExpressions : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: java.util.List m_listExpressions>
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler.handles : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("[^!&\\|<=|>=|!=|=|<|>\\(\\)]+")
org.apache.ambari.server.topology.HostGroupInfo.getPredicate : $r1 = r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.controller.spi.Predicate predicate>
org.apache.ambari.server.api.predicate.QueryLexer$ComplexValueOperandTokenHandler.validateEndState : $i0 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: int getBracketScore()>()
org.apache.ambari.server.api.predicate.QueryParser$ValueOperandTokenHandler._handleToken : $r4 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.expressions.Expression getPrecedingExpression()>()
org.apache.ambari.server.api.predicate.QueryParser$ValueOperandTokenHandler._handleToken : $r5 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.expressions.Expression getPrecedingExpression()>()
org.apache.ambari.server.api.predicate.QueryParser$ValueOperandTokenHandler._handleToken : return 1
org.apache.ambari.server.api.predicate.QueryParser$ValueOperandTokenHandler._handleToken : $r3 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token[] getTokens()>()
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i2 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getPrecedenceLevel()>()
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r5 = <org.apache.ambari.server.api.predicate.QueryParser: java.util.Map TOKEN_HANDLERS>
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r3 = new org.apache.ambari.server.api.predicate.QueryParser$ParseContext
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i0 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>()
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : return $r3
org.apache.ambari.server.api.predicate.expressions.AbstractExpression.getRightOperand : $r1 = r0.<org.apache.ambari.server.api.predicate.expressions.AbstractExpression: java.lang.Object m_right>
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.getIntermediateTokens : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.Deque m_intermediateTokens>
org.apache.ambari.server.api.predicate.expressions.AbstractExpression.setLeftOperand : r0.<org.apache.ambari.server.api.predicate.expressions.AbstractExpression: java.lang.Object m_left> = r1
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getTokens : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token[] m_tokens>
org.apache.ambari.server.api.predicate.QueryLexer$LogicalUnaryOperatorTokenHandler.handles : $r3 = "!"
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r3 = r2[i2]
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r2 = <org.apache.ambari.server.api.predicate.QueryLexer: java.lang.String[] ALL_DELIMS>
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $i1 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>()
org.apache.ambari.server.api.predicate.QueryLexer.access$1000 : $r0 = <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Map TOKEN_HANDLERS>
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i3)
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : $i2 = virtualinvoke r3.<java.util.regex.Matcher: int start()>()
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : $r5 = new java.util.ArrayList
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : $r7 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group()>()
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : i3 = virtualinvoke r3.<java.util.regex.Matcher: int end()>()
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : r3 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : $i1 = virtualinvoke r3.<java.util.regex.Matcher: int start()>()
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : return $r5
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : i3 = 0
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : r2 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryLexer: java.util.regex.Pattern generatePattern()>()
org.apache.ambari.server.api.predicate.QueryLexer.parseStringTokens : $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>()
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.validateEndState : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.validateEndState : $r3 = staticinvoke <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Map access$1000()>()
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.validateEndState : $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.validateEndState : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler: void validateEndState(org.apache.ambari.server.api.predicate.QueryLexer$ScanContext)>(r0)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.equals : $z0 = r1 instanceof org.apache.ambari.server.controller.predicate.ComparisonPredicate
org.apache.ambari.server.controller.predicate.ComparisonPredicate.equals : $z1 = specialinvoke r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.equals : r2 = (org.apache.ambari.server.controller.predicate.ComparisonPredicate) r1
org.apache.ambari.server.controller.predicate.ComparisonPredicate.equals : if r0 != r1 goto $z0 = r1 instanceof org.apache.ambari.server.controller.predicate.ComparisonPredicate
org.apache.ambari.server.controller.predicate.PropertyPredicate.equals : if r0 != r1 goto $z0 = r1 instanceof org.apache.ambari.server.controller.predicate.PropertyPredicate
org.apache.ambari.server.controller.predicate.PropertyPredicate.equals : r2 = (org.apache.ambari.server.controller.predicate.PropertyPredicate) r1
org.apache.ambari.server.controller.predicate.PropertyPredicate.equals : $z0 = r1 instanceof org.apache.ambari.server.controller.predicate.PropertyPredicate
org.apache.ambari.server.controller.predicate.PropertyPredicate.equals : $r3 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId>
org.apache.ambari.server.api.predicate.expressions.AbstractExpression.getLeftOperand : $r1 = r0.<org.apache.ambari.server.api.predicate.expressions.AbstractExpression: java.lang.Object m_left>
org.apache.ambari.server.api.predicate.QueryParser$TokenHandler.handleToken : $i2 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>()
org.apache.ambari.server.api.predicate.QueryParser$TokenHandler.handleToken : i0 = virtualinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser$TokenHandler: int _handleToken(org.apache.ambari.server.api.predicate.QueryParser$ParseContext)>(r1)
org.apache.ambari.server.api.predicate.QueryParser$TokenHandler.handleToken : $r4 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token$TYPE getPreviousTokenType()>()
org.apache.ambari.server.api.predicate.QueryParser$TokenHandler.handleToken : $r3 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token[] getTokens()>()
org.apache.ambari.server.api.predicate.QueryParser$TokenHandler.handleToken : $r5 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.Token: org.apache.ambari.server.api.predicate.Token$TYPE getType()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : r3 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: java.util.List getExpressions()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: void changeHostNameToLowerCase(java.util.List)>(r3)
org.apache.ambari.server.api.predicate.QueryParser.parse : $i0 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getMaxPrecedence()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.api.predicate.QueryParser.parse : r2 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: org.apache.ambari.server.api.predicate.QueryParser$ParseContext parseExpressions(org.apache.ambari.server.api.predicate.Token[])>(r1)
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getPrecedenceLevel : $i0 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int m_precedence>
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.getPropertyOperand : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.lang.String m_propertyName>
org.apache.ambari.server.api.predicate.operators.EqualsOperator.toPredicate : $r3 = new org.apache.ambari.server.controller.predicate.EqualsPredicate
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.addExpression : $r2 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: java.util.List m_listExpressions>
org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler.validateEndState : $r2 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.Deque getIntermediateTokens()>()
org.apache.ambari.server.api.predicate.Token.getValue : $r1 = r0.<org.apache.ambari.server.api.predicate.Token: java.lang.String m_value>
org.apache.ambari.server.api.predicate.QueryParser$RelationalOperatorTokenHandler.validate : if r1 == null goto $z0 = 1
org.apache.ambari.server.api.predicate.QueryLexer$ValueOperandTokenHandler.handles : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("[^!&\\|<=|>=|!=|=|<|>]+")
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.getBracketScore : $i0 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: int bracketScore>
org.apache.ambari.server.api.predicate.QueryLexer$ValueOperandTokenHandler._handleToken : $r3 = new org.apache.ambari.server.api.predicate.Token
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : $z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("/host_name")
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : $r6 = interfaceinvoke r2.<org.apache.ambari.server.api.predicate.expressions.Expression: java.lang.Object getRightOperand()>()
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : r16 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : $r7 = interfaceinvoke r2.<org.apache.ambari.server.api.predicate.expressions.Expression: java.lang.Object getRightOperand()>()
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : goto [?= return]
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : r3 = interfaceinvoke r2.<org.apache.ambari.server.api.predicate.expressions.Expression: java.lang.Object getLeftOperand()>()
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : $r5 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : goto [?= $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.predicate.QueryParser.changeHostNameToLowerCase : if r3 == null goto (branch)
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.setPropertyOperand : r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.lang.String m_propertyName> = r1
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getPreviousTokenType : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token$TYPE m_previousTokenType>
org.apache.ambari.server.api.predicate.expressions.AbstractExpression.setRightOperand : r0.<org.apache.ambari.server.api.predicate.expressions.AbstractExpression: java.lang.Object m_right> = r1
org.apache.ambari.server.api.predicate.QueryLexer$ValueOperandTokenHandler.getType : $r1 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE VALUE_OPERAND>
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getPrecedingExpression : $r3 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: java.util.List m_listExpressions>
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getPrecedingExpression : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: java.util.List m_listExpressions>
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r3 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.Set getPropertiesToIgnore()>()
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void setPropertyOperand(java.lang.String)>(r1)
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.getPropertiesToIgnore : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.Set m_propertiesToIgnore>
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.setLastTokenType : r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: org.apache.ambari.server.api.predicate.Token$TYPE m_lastType> = r1
org.apache.ambari.server.api.predicate.expressions.AbstractExpression.getOperator : $r1 = r0.<org.apache.ambari.server.api.predicate.expressions.AbstractExpression: org.apache.ambari.server.api.predicate.operators.Operator m_op>
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.access$800 : specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: void setTokenType(org.apache.ambari.server.api.predicate.Token$TYPE)>(r1)
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.setCurrentTokensIndex : r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int m_tokensIdx> = i0
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $i1 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : return r1
org.apache.ambari.server.api.predicate.QueryLexer$ScanContext.getTokenList : $r1 = r0.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List m_listTokens>
org.apache.ambari.server.api.predicate.QueryLexer$RelationalOperatorTokenHandler.getType : $r1 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE RELATIONAL_OPERATOR>
org.apache.ambari.server.topology.HostGroupInfo.getPredicateString : $r1 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String predicateString>
org.apache.ambari.server.api.predicate.PredicateCompiler.compile : $r3 = r0.<org.apache.ambari.server.api.predicate.PredicateCompiler: org.apache.ambari.server.api.predicate.QueryParser parser>
org.apache.ambari.server.api.predicate.QueryParser$PropertyOperandTokenHandler.validate : $r2 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE RELATIONAL_OPERATOR>
org.apache.ambari.server.api.predicate.Token.getType : $r1 = r0.<org.apache.ambari.server.api.predicate.Token: org.apache.ambari.server.api.predicate.Token$TYPE m_type>
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i0 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r5 = new java.text.ParsePosition
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r4 = virtualinvoke r3.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, $r5)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if r1 == null goto return null
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.api.predicate.QueryLexer$RelationalOperatorTokenHandler.handles : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("<=|>=|!=|=|<|>")
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getMaxPrecedence : $i0 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int m_maxPrecedence>
org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler.handleToken : $z0 = virtualinvoke r0.<org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler: boolean handles(java.lang.String,org.apache.ambari.server.api.predicate.QueryLexer$ScanContext)>(r1, r2)
org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler.handleToken : return 1
org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler.handleToken : return 0
org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler.handleToken : virtualinvoke r0.<org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler: void _handleToken(java.lang.String,org.apache.ambari.server.api.predicate.QueryLexer$ScanContext)>(r1, r2)
org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler.handleToken : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler: org.apache.ambari.server.api.predicate.Token$TYPE getType()>()
org.apache.ambari.server.api.predicate.QueryParser$RelationalOperatorTokenHandler._handleToken : return 1
org.apache.ambari.server.api.predicate.QueryParser$RelationalOperatorTokenHandler._handleToken : $r6 = new org.apache.ambari.server.api.predicate.expressions.RelationalExpression
org.apache.ambari.server.api.predicate.QueryParser$RelationalOperatorTokenHandler._handleToken : $r4 = virtualinvoke r1.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: org.apache.ambari.server.api.predicate.Token[] getTokens()>()
org.apache.ambari.server.api.predicate.QueryParser$RelationalOperatorTokenHandler._handleToken : $r5 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.Token: java.lang.String getValue()>()
org.apache.ambari.server.api.predicate.operators.RelationalOperatorFactory.createOperator : $r22 = new org.apache.ambari.server.api.predicate.operators.EqualsOperator
org.apache.ambari.server.api.predicate.operators.RelationalOperatorFactory.createOperator : $r2 = "="
org.apache.ambari.server.api.predicate.operators.RelationalOperatorFactory.createOperator : $r1 = "!="
org.apache.ambari.server.api.predicate.QueryParser$ParseContext.getCurrentTokensIndex : $i0 = r0.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int m_tokensIdx>
org.apache.ambari.server.api.predicate.QueryParser$ValueOperandTokenHandler.validate : $r2 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE PROPERTY_OPERAND>
org.apache.ambari.server.api.predicate.QueryLexer$OpenBracketTokenHandler.handles : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("\\(")
