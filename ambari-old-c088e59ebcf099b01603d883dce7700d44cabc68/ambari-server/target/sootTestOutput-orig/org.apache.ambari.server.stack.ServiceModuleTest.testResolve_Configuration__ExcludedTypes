org.apache.ambari.server.state.ServiceInfo.getConfigDir : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String configDir>
org.apache.ambari.server.stack.ServiceModuleTest.createStackContext : if z0 == 0 goto $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.stack.ServiceModuleTest.createStackContext : return r2
org.apache.ambari.server.stack.ServiceModuleTest.createStackContext : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackContext;")
org.apache.ambari.server.stack.ServiceModuleTest.createStackContext : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.stack.ServiceModuleTest.createStackContext : virtualinvoke r2.<org.apache.ambari.server.stack.StackContext: void registerServiceCheck(java.lang.String)>(r1)
org.apache.ambari.server.state.ServiceInfo.setName : r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String name> = r1
org.apache.ambari.server.state.ServiceInfo.getExcludedConfigTypes : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Set excludedConfigTypes>
org.apache.ambari.server.stack.ConfigurationInfo.getProperties : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationInfo: java.util.Collection properties>
org.apache.ambari.server.state.ServiceInfo.getComponents : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List components>
org.apache.ambari.server.state.ServiceInfo.getComponents : $r3 = new java.util.ArrayList
org.apache.ambari.server.stack.ConfigurationInfo.isValid : $z0 = r0.<org.apache.ambari.server.stack.ConfigurationInfo: boolean valid>
org.apache.ambari.server.state.ServiceInfo.setAdvisorName : r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String advisorName> = r1
org.apache.ambari.server.stack.ServiceModuleTest.createConfigurationModule : $r6 = new org.apache.ambari.server.stack.ConfigurationModule
org.apache.ambari.server.stack.ServiceModuleTest.createConfigurationModule : $r4 = new org.apache.ambari.server.stack.ConfigurationInfo
org.apache.ambari.server.state.ServiceInfo.setKerberosDescriptorFile : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File kerberosDescriptorFile> = r1
org.apache.ambari.server.state.ServiceInfo.setAdvisorFile : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File advisorFile> = r1
org.apache.ambari.server.state.ServiceInfo.getQuickLinksConfigurationsDir : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String quickLinksConfigurationsDir>
org.apache.ambari.server.state.ServiceInfo.setServicePackageFolder : r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String servicePackageFolder> = r1
org.apache.ambari.server.stack.ServiceModuleTest.createConfigurationDirectory : return r2
org.apache.ambari.server.stack.ServiceModuleTest.createConfigurationDirectory : $r4 = virtualinvoke r2.<org.apache.ambari.server.stack.ConfigurationDirectory: java.util.Collection getConfigurationModules()>()
org.apache.ambari.server.stack.ServiceModuleTest.createConfigurationDirectory : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/ConfigurationDirectory;")
org.apache.ambari.server.stack.ServiceModuleTest.createConfigurationDirectory : $r8 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.ServiceInfo.ensureMandatoryServiceProperties : $r2 = specialinvoke r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map ensureVisibilityServiceProperties(java.util.Map)>(r1)
org.apache.ambari.server.state.ServiceInfo.setWidgetsDescriptorFile : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File widgetsDescriptorFile> = r1
org.apache.ambari.server.stack.ServiceModule.getModuleInfo : $r1 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.state.ServiceInfo.setSchemaVersion : r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String schemaVersion> = r1
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r7 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r18 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : $r5 = specialinvoke r0.<org.apache.ambari.server.stack.ServiceModuleTest: org.apache.ambari.server.stack.StackContext createStackContext(java.lang.String,boolean)>(r3, 1)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : r4 = specialinvoke r0.<org.apache.ambari.server.stack.ServiceModuleTest: org.apache.ambari.server.stack.ConfigurationDirectory createConfigurationDirectory(java.util.Collection)>(r2)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : $r7 = virtualinvoke r1.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getConfigDir()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : $r4 = new org.apache.ambari.server.stack.ServiceModule
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : virtualinvoke r1.<org.apache.ambari.server.state.ServiceInfo: void setName(java.lang.String)>("service1")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : $r8 = specialinvoke r0.<org.apache.ambari.server.stack.ServiceModuleTest: org.apache.ambari.server.stack.ServiceModule createServiceModule(org.apache.ambari.server.stack.StackContext,org.apache.ambari.server.state.ServiceInfo,org.apache.ambari.server.stack.ServiceDirectory)>(r3, r1, r5)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : r3 = virtualinvoke r1.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceModule : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModule.populateComponentModules : $r3 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.state.ServiceInfo.getThemes : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List themes>
org.apache.ambari.server.state.ServiceInfo.setTypeAttributes : $r4 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map configTypes>
org.apache.ambari.server.state.ServiceInfo.setTypeAttributes : $r3 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map configTypes>
org.apache.ambari.server.state.ServiceInfo.setTypeAttributes : $r6 = new java.util.HashMap
org.apache.ambari.server.state.ServiceInfo.setRoleCommandOrder : r0.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder> = r1
org.apache.ambari.server.state.ServiceInfo.getThemesDir : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String themesDir>
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r23 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getAlertsFile()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : return r3
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/lang/String;")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r28 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getKerberosDescriptorFile()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r5 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.stack.ConfigurationDirectory getConfigurationDirectory(java.lang.String,java.lang.String)>(r1, "properties")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r37 = newarray (java.lang.Object)[1]
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r33 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getPackageDir()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/ServiceDirectory;")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/lang/String;")
org.apache.ambari.server.state.ServiceInfo.setChecksFolder : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File checksFolder> = r1
org.apache.ambari.server.stack.ConfigurationModule.getModuleInfo : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationModule: org.apache.ambari.server.stack.ConfigurationInfo info>
org.apache.ambari.server.stack.ConfigurationModule.getConfigType : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationModule: java.lang.String configType>
org.apache.ambari.server.state.ServiceInfo.setServerActionsFolder : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File serverActionsFolder> = r1
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r7 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r25 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r10 = r0.<org.apache.ambari.server.stack.ServiceModule: java.util.Map configurationModules>
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $z7 = 1
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : r23 = virtualinvoke r22.<org.apache.ambari.server.stack.ConfigurationModule: org.apache.ambari.server.stack.ConfigurationInfo getModuleInfo()>()
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : r1 = virtualinvoke $r4.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.stack.ConfigurationDirectory getConfigurationDirectory(java.lang.String,java.lang.String)>($r5, "properties")
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r28 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $z6 = virtualinvoke r23.<org.apache.ambari.server.stack.ConfigurationInfo: boolean isValid()>()
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r9 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r6 = virtualinvoke r1.<org.apache.ambari.server.stack.ConfigurationDirectory: java.util.Collection getConfigurationModules()>()
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r17 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $z3 = virtualinvoke r0.<org.apache.ambari.server.stack.ServiceModule: boolean isValid()>()
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : if r1 == null goto return
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r4 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ServiceDirectory serviceDirectory>
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $z5 = virtualinvoke r22.<org.apache.ambari.server.stack.ConfigurationModule: boolean isValid()>()
org.apache.ambari.server.stack.ServiceModule.populateConfigurationModules : $r31 = r0.<org.apache.ambari.server.stack.ServiceModule: java.util.Map configurationModules>
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("supports", $r9)
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r0.<org.apache.ambari.server.stack.ConfigurationInfo: java.util.Map attributes> = $r8
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r9 = new java.util.HashMap
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r8 = new java.util.HashMap
org.apache.ambari.server.state.ServiceInfo.setAlertsFile : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File alertsFile> = r1
org.apache.ambari.server.stack.ServiceModule.validateServiceInfo : $r1 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.state.PropertyInfo.setName : r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String name> = r1
org.apache.ambari.server.state.ServiceInfo.setMetricsFile : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File metricsFile> = r1
org.apache.ambari.server.state.PropertyInfo.setValue : r0.<org.apache.ambari.server.state.PropertyInfo: java.lang.String value> = r1
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r17 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r6 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateQuickLinksConfigurationModules : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r2 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r18 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r13 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r6 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r8 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r4 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : return r1
org.apache.ambari.server.stack.ServiceModule.setValid : r0.<org.apache.ambari.server.stack.ServiceModule: boolean valid> = z0
org.apache.ambari.server.state.ServiceInfo.setExcludedConfigTypes : r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Set excludedConfigTypes> = r1
org.apache.ambari.server.stack.ConfigurationInfo.getAttributes : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationInfo: java.util.Map attributes>
org.apache.ambari.server.state.ServiceInfo.getProperties : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List properties>
org.apache.ambari.server.state.ServiceInfo.getProperties : $r3 = new java.util.ArrayList
org.apache.ambari.server.stack.ConfigurationModule.isValid : $z0 = r0.<org.apache.ambari.server.stack.ConfigurationModule: boolean valid>
org.apache.ambari.server.state.ServiceInfo.setServiceUpgradesFolder : r0.<org.apache.ambari.server.state.ServiceInfo: java.io.File serviceUpgradesFolder> = r1
org.apache.ambari.server.state.ServiceInfo.isValid : $z0 = r0.<org.apache.ambari.server.state.ServiceInfo: boolean valid>
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3)
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r4 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map configTypes>
org.apache.ambari.server.state.ServiceInfo.getConfigTypeAttributes : $r5 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Set excludedConfigTypes>
org.apache.ambari.server.state.ServiceInfo.getName : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.String name>
org.apache.ambari.server.stack.ServiceModule.isValid : $z0 = r0.<org.apache.ambari.server.stack.ServiceModule: boolean valid>
org.apache.ambari.server.state.ServiceInfo.getQuickLinksConfigurations : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List quickLinksConfigurations>
