org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r9 = <org.apache.ambari.server.scheduler.AbstractLinearExecutionJob: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : r6 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.TotalTaskCount")
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : if r82 == null goto $r11 = <org.apache.ambari.server.scheduler.AbstractLinearExecutionJob: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r33 = (java.lang.Integer) r5
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : r4 = virtualinvoke r3.<org.quartz.JobDataMap: java.util.Map getWrappedMap()>()
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r81 = <org.apache.ambari.server.scheduler.AbstractLinearExecutionJob: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $z1 = virtualinvoke r82.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r32 = (java.lang.Integer) r6
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r27 = virtualinvoke $r24.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder usingJobData(java.lang.String,java.lang.Integer)>("BatchRequestJob.FailedTaskCount", $r26)
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r30 = virtualinvoke $r27.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder usingJobData(java.lang.String,java.lang.Integer)>("BatchRequestJob.TotalTaskCount", $r29)
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("BatchRequestJob.FailedTaskCount")
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r18 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>($r17, "LinearExecutionTriggers")
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r22 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : z2 = 0
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r10 = r0.<org.apache.ambari.server.scheduler.AbstractLinearExecutionJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager>
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : virtualinvoke r0.<org.apache.ambari.server.scheduler.AbstractLinearExecutionJob: void doWork(java.util.Map)>(r4)
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : r3 = interfaceinvoke r1.<org.quartz.JobExecutionContext: org.quartz.JobDataMap getMergedJobDataMap()>()
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(java.lang.String,java.lang.String)>(r82, r83)
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : r82 = virtualinvoke r3.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("ExecutionJob.Name")
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r8 = interfaceinvoke r1.<org.quartz.JobExecutionContext: org.quartz.JobDetail getJobDetail()>()
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : i0 = virtualinvoke r3.<org.quartz.JobDataMap: int getIntValue(java.lang.String)>("ExecutionJob.SeparationMinutes")
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r31 = r0.<org.apache.ambari.server.scheduler.AbstractLinearExecutionJob: org.apache.ambari.server.scheduler.ExecutionScheduleManager executionScheduleManager>
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : r83 = virtualinvoke r3.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("ExecutionJob.Group")
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : r7 = virtualinvoke $r30.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
org.apache.ambari.server.scheduler.AbstractLinearExecutionJob.execute : $r12 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
