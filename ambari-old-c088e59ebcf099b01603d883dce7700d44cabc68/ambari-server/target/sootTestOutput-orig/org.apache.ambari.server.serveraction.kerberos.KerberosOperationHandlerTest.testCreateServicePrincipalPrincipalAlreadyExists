org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r2 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String getDefaultRealm()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : if r3 == null goto return
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r2 = new javax.naming.directory.SearchControls
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : $r3 = newarray (java.lang.String)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : virtualinvoke $r2.<javax.naming.directory.SearchControls: void setSearchScope(int)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createSearchControls : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createPrincipal : $r1 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Properties;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler) r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.getAdminCredentials : $r1 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential DEFAULT_ADMIN_CREDENTIALS>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r0 != null goto $r5 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r5 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r10 == null goto r10 = r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r10 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null goto r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalAlreadyExists : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: void setupPrincipalExists(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler,boolean)>(r1, z0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String normalizedPrincipal>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r43 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r3, null)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r3 = new java.util.Properties
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r7 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r14 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r9 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r15 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r16 = class "Lorg/apache/ambari/server/security/InternalSSLSocketFactoryTrusting;"
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r2 != null goto $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean principalExists(java.lang.String,boolean)>(r1, z0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r1 != null goto (branch)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r60 = new org.apache.ambari.server.serveraction.kerberos.KerberosPrincipalAlreadyExistsException
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean principalExists(java.lang.String,boolean)>(r1, z0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if r1 != null goto r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r4 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r34 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $z1 = interfaceinvoke r3.<javax.naming.NamingEnumeration: boolean hasMore()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Ljavax/naming/NamingEnumeration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke r3.<javax.naming.NamingEnumeration: void close()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Ljavax/naming/directory/SearchResult;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r26 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r5 = virtualinvoke r2.<javax.naming.directory.SearchResult: java.lang.String getNameInNamespace()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r17 = interfaceinvoke r3.<javax.naming.NamingEnumeration: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $z2 = interfaceinvoke r3.<javax.naming.NamingEnumeration: boolean hasMore()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.getKerberosEnv : $r1 = <org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.util.Map KERBEROS_ENV_MAP>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r6 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null goto (branch)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = new javax.naming.ldap.LdapName
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null goto (branch)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null goto $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r4 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethods(java.lang.reflect.Method[])>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : return r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r5 = interfaceinvoke $r4.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r1 = newarray (java.lang.reflect.Method)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.createMockedHandler : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.testCreatePrincipalPrincipalAlreadyExists : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: void setupOpenSuccess(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.testCreatePrincipalPrincipalAlreadyExists : $r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdminCredentials()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.testCreatePrincipalPrincipalAlreadyExists : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: void replayAll()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.testCreatePrincipalPrincipalAlreadyExists : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler createMockedHandler()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.testCreatePrincipalPrincipalAlreadyExists : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: void setupPrincipalAlreadyExists(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler,boolean)>(r1, z0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.testCreatePrincipalPrincipalAlreadyExists : $r4 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest: java.lang.String createPrincipal(boolean)>(z0)
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r1 == null goto return r13
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r14 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r13 = virtualinvoke r15.<javax.naming.directory.SearchResult: java.lang.String getNameInNamespace()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : interfaceinvoke r14.<javax.naming.NamingEnumeration: void close()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : return r13
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r13 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r5 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $z0 = interfaceinvoke r14.<javax.naming.NamingEnumeration: boolean hasMore()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r9 = interfaceinvoke r14.<javax.naming.NamingEnumeration: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r14 == null goto (branch)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null goto (branch)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
