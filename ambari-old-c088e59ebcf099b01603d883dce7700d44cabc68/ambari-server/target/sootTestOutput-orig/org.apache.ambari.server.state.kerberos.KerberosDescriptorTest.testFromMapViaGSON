org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getFile : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : r14 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : if r4 == null goto r16 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : $r12 = interfaceinvoke r4.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : $r8 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : if r15 == null goto (branch)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : r16 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : $r9 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : r15 = virtualinvoke r6.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : $r7 = new java.util.HashSet
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>(r15)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>(r14)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>(r16)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : if r14 == null goto $r8 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getAllAuthToLocalProperties : r4 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getComponents()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromJSON : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest.validateFromJSON : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r2 == null goto $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : if r1 == null goto return
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r6 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : $r4 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putIdentity : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations(boolean)>(0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0 goto $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r10 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $r22 = new org.apache.ambari.server.collections.functors.ContainsPredicate
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if $r27 != null goto $z0 = $r27 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : r2 = (java.util.Collection) $r27
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z1 = r4 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z2 = r5 instanceof java.lang.String
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : if r0 != null goto $r27 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("contains")
org.apache.ambari.server.collections.functors.ContainsPredicate.fromMap : $z0 = $r27 instanceof java.util.Collection
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r11)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $i1 = interfaceinvoke r10.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAllAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $r9 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $z4 = interfaceinvoke r11.<java.util.Set: boolean contains(java.lang.Object)>("service.name.rules1")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $i3 = interfaceinvoke r2.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $z3 = interfaceinvoke r11.<java.util.Set: boolean contains(java.lang.Object)>("generic.name.rules")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("keytab_dir")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $z2 = interfaceinvoke r11.<java.util.Set: boolean contains(java.lang.Object)>("component.name.rules1")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>(r13)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r10)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $i2 = interfaceinvoke r11.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getServices()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : $z1 = interfaceinvoke r10.<java.util.Set: boolean contains(java.lang.Object)>("generic.name.rules")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : r13 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromJSON : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest: void validateFromJSON(org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor)>(r3)
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setPrincipalDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getKeytabDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setReference : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String reference> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.isContainer : return 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/kerberos/KerberosPrincipalType;", r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r2 != null goto $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r9 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r3 != null goto virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r7 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : if r1 == null goto return
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putService : $r5 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setParent : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor parent> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r4 = new java.util.TreeSet
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : if r1 == null goto return
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putAuthToLocalProperty : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getGroupAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupName> = r1
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r1 == null goto return
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : if r2 != null goto $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.putComponent : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r1 == null goto return
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : r2 = virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : if r2 != null goto $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.putConfiguration : virtualinvoke r1.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setParent(org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor)>(r0)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isReferredServiceInstalled : if r1 == null goto return 1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setGroupAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String groupAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.getPrincipalDescriptor : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor principal>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null goto $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.setPreconfigure : r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.Boolean preconfigure> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromJSON : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromJSON : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromJSON : $r3 = <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType SERVICE>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.validateFromJSON : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>()
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.setType : virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void setName(java.lang.String)>(r1)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null goto return r30
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = newarray (java.lang.Class)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r31 != null goto $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r30]
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r3 != null goto $r12 = newarray (java.lang.Class)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r2)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r30 = null
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.putProperty : if r1 != null goto $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : $r4 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.putProperty : if r1 != null goto $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setCachable : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean cachable> = z0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : if r1 == null goto return
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.removeIdentity : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.KerberosDescriptor.getServices : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map services>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getAuthToLocalProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getType : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerAccess : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setWhen : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.collections.Predicate when> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.getOwnerName : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerAccess : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerAccess> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.collections.functors.PredicateClassFactory.getPredicateClass : if r0 != null goto $r1 = <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.util.Map NAME_TO_CLASS>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab> = r1
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r3 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor.setKeytabDescriptor : $r2 = r0.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor keytab>
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r5)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site")
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $r11 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.component.property2")
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $r9 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.component.property1")
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : r4 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $i2 = interfaceinvoke r4.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $r13 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $i1 = interfaceinvoke r2.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities()>()
org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest.validateFromJSON : $i3 = interfaceinvoke r5.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor.getComponents : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map components>
org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor.getProperties : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map properties>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null goto return null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Boolean getBooleanValue(java.util.Map,java.lang.String,java.lang.Boolean)>(r0, r1, null)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : r3 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getBooleanValue : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r23)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r6 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.property2")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r15 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $i1 = interfaceinvoke r19.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : r22 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $i3 = interfaceinvoke r2.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosComponentDescriptorTest: void validateFromJSON(org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor)>(r18)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : goto [?= $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r16 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r19)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $i4 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : r20 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r12 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r22)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("service.property1")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : r2 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : r19 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.List getIdentities()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $r7 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getComponents()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptorTest: void validateFromJSON(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor)>(r21)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorTest.validateFromJSON : $i2 = interfaceinvoke r22.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.isContainer : return 1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null goto $r2 = null
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor.setOwnerName : r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String ownerName> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : r11 = r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if z0 == 0 goto r11 = r4
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r11 == null goto (branch)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : if r1 == null goto $z2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: boolean isReferredServiceInstalled(org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor,java.util.Map)>(r4, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getIdentities : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List getIdentities(boolean,java.util.Map)>(0, null)
