org.apache.ambari.server.orm.entities.KerberosKeytabEntity.setOwnerAccess : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void _persistence_set_ownerAccess(java.lang.String)>(r1)
org.apache.ambari.server.orm.dao.KerberosKeytabDAO.create : $r2 = r0.<org.apache.ambari.server.orm.dao.KerberosKeytabDAO: com.google.inject.Provider entityManagerProvider>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r47 = class "Lorg/apache/ambari/server/serveraction/kerberos/ConfigureAmbariIdentitiesServerAction;"
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : interfaceinvoke r5.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r11)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r50 = interfaceinvoke $r49.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.reflect.Method)>(r10)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r13 = new java.io.File
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r68 = virtualinvoke r77.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r65 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r52 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : if z0 == 0 goto r77 = null
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r51 = interfaceinvoke $r50.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest: void verifyAll()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r35 = virtualinvoke r7.<org.apache.ambari.server.orm.dao.KerberosKeytabPrincipalDAO: org.apache.ambari.server.orm.entities.KerberosKeytabPrincipalEntity merge(org.apache.ambari.server.orm.entities.KerberosKeytabPrincipalEntity)>(r8)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r59 = new org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r41 = class "Lorg/apache/ambari/server/serveraction/kerberos/ConfigureAmbariIdentitiesServerAction;"
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r56 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r64 = virtualinvoke $r13.<java.io.File: java.lang.String getPath()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r48 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/ConfigureAmbariIdentitiesServerAction;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r60 = <org.apache.ambari.server.controller.RootService: org.apache.ambari.server.controller.RootService AMBARI>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r18 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getHostName()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest: void replayAll()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r62 = <org.apache.ambari.server.controller.RootComponent: org.apache.ambari.server.controller.RootComponent AMBARI_SERVER>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r17 = interfaceinvoke r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r49 = interfaceinvoke $r48.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.reflect.Method)>(r9)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : r5 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest: com.google.inject.Injector createInjector()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r67 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/HostEntity;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r23 = interfaceinvoke r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/KerberosKeytabPrincipalDAO;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r12 = r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest: org.junit.rules.TemporaryFolder testFolder>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r73 = virtualinvoke r6.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findById(long)>(1L)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.installAmbariServerIdentity : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/KerberosKeytabPrincipalEntity;")
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap serviceMapping>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : if r3 != null goto (branch)
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.addComponentMapping : if r4 != null goto $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap serviceMapping>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/KerberosHelper;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/KerberosKeytabPrincipalDAO;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/audit/AuditLogger;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;")
org.apache.ambari.server.orm.entities.KerberosKeytabEntity.setKeytabPath : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void _persistence_set_keytabPath(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : virtualinvoke $r35.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void setOwnerAccess(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r28 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r41 = "rw"
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : virtualinvoke $r35.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void setOwnerName(java.lang.String)>(r4)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r31 = r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: org.apache.ambari.server.orm.dao.KerberosKeytabPrincipalDAO kerberosKeytabPrincipalDAO>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : virtualinvoke $r35.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void setGroupName(java.lang.String)>(r6)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : virtualinvoke $r35.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void setGroupAccess(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r22 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap getServiceMapping()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r33 = r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: org.apache.ambari.server.orm.dao.KerberosKeytabPrincipalDAO kerberosKeytabPrincipalDAO>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : virtualinvoke r15.<org.apache.ambari.server.orm.entities.KerberosKeytabPrincipalEntity: boolean putServiceMapping(java.lang.String,java.lang.String)>(r12, r13)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r27 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : r45 = null
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r40 = "rw"
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: java.lang.Long ambariServerHostID()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r35 = new org.apache.ambari.server.orm.entities.KerberosKeytabEntity
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r39 = "rw"
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: void copyFile(java.lang.String,java.lang.String)>(r2, r3)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r16 = "w"
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r17 = "r"
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r37 = r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: org.apache.ambari.server.orm.dao.KerberosKeytabDAO kerberosKeytabDAO>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : if r8 == null goto (branch)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: void setFileACL(java.lang.String,java.lang.String,boolean,boolean,java.lang.String,boolean,boolean)>(r3, r4, z0, z14, r6, $z17, z1)
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : return 1
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : goto [?= $z18 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r24 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r26 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r20 = r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: org.apache.ambari.server.orm.dao.KerberosKeytabDAO kerberosKeytabDAO>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction.installAmbariServerIdentity : $r29 = r0.<org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerAction: org.apache.ambari.server.orm.dao.KerberosPrincipalDAO kerberosPrincipalDAO>
org.apache.ambari.server.orm.dao.KerberosKeytabDAO.exists : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.dao.KerberosKeytabDAO: org.apache.ambari.server.orm.entities.KerberosKeytabEntity find(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.KerberosKeytabEntity.setGroupName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void _persistence_set_groupName(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.ambariServerHostID : if r2 != null goto $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.ambariServerHostID : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.ambariServerHostID : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.ambariServerHostID : r1 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getHostName()>()
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.hashCode : $r1 = newarray (java.lang.Object)[7]
org.apache.ambari.server.orm.dao.KerberosKeytabDAO.find : $r2 = r0.<org.apache.ambari.server.orm.dao.KerberosKeytabDAO: com.google.inject.Provider entityManagerProvider>
org.apache.ambari.server.orm.dao.KerberosPrincipalDAO.find : $r2 = r0.<org.apache.ambari.server.orm.dao.KerberosPrincipalDAO: com.google.inject.Provider entityManagerProvider>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.getPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: java.lang.String principal>
org.apache.ambari.server.serveraction.kerberos.ConfigureAmbariIdentitiesServerActionTest.createInjector : $r1 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.entities.KerberosKeytabEntity.setGroupAccess : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void _persistence_set_groupAccess(java.lang.String)>(r1)
org.apache.ambari.server.utils.StageUtils.getHostName : $r0 = <org.apache.ambari.server.utils.StageUtils: java.lang.String server_hostname>
org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal.getServiceMapping : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: com.google.common.collect.Multimap serviceMapping>
org.apache.ambari.server.orm.entities.KerberosKeytabEntity.setOwnerName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.KerberosKeytabEntity: void _persistence_set_ownerName(java.lang.String)>(r1)
