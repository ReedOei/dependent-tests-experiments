org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r5 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.InMemoryCredentialStore temporaryCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r2 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r6 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.FileBasedCredentialStore persistedCredentialStore>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : return r3
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r4 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r5 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : goto [?= $r5 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : goto [?= return r3]
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r5 = new java.lang.String
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r12 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher dcipher>
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r7 = new javax.crypto.spec.SecretKeySpec
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r10 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher dcipher>
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : if r1 == null goto $r3 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_KSTR_DIR>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.setCredential : specialinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: void validateInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r4)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.setCredential : $r5 = specialinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.CredentialStore getCredentialStore(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r4)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.setCredential : virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: void removeCredential(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = staticinvoke <java.lang.System: java.util.Map getenv()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("AMBARI_SECURITY_MASTER_KEY")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r19 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r19 == null goto $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null goto return r19
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null goto return r19
org.apache.ambari.server.security.encryption.AbstractCredentialStore.setMasterKeyService : r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService> = r1
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStorePath : $r1 = r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.io.File keyStoreFile>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PrincipalKeyCredential")
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : $r4 = new com.google.gson.Gson
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r3 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r4 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r9 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r7 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : return r12
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.getMasterSecret : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r3 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r4 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : return r12
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.createAliasPrefix : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : virtualinvoke r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: void addCredential(java.security.KeyStore,java.lang.String,org.apache.ambari.server.security.credential.Credential)>(r4, r1, r2)
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : $r7 = r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: com.google.common.cache.Cache cache>
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : interfaceinvoke r3.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : goto [?= return]
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : r4 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: java.security.KeyStore loadKeyStore(java.io.InputStream,java.lang.String)>(null, "JCEKS")
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: java.util.concurrent.locks.Lock getLock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : if r1 == null goto $r6 = new java.lang.IllegalArgumentException
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.addCredential : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : if r2 == null goto return r2
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : return r2
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1)
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : goto [?= return r7]
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r7 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : return r7
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBKDF2WithHmacSHA1")
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r7 = null
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : $r4 = new javax.crypto.spec.PBEKeySpec
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if $r11 == null goto r12 = null
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if r1 == null goto return
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r5 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : goto [?= return]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if r3 != null goto $r11 = interfaceinvoke r3.<org.apache.ambari.server.security.credential.Credential: char[] toValue()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r7 = new javax.crypto.spec.SecretKeySpec
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $i0 = lengthof $r11
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r66 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r68.<java.nio.channels.FileChannel: void close()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r68.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(0L)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r22 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] cipher>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= (branch)]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r1 == null goto $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r68 == null goto (branch)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r68 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r31 = new java.io.FileOutputStream
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>(r0, "UTF8", $r6)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= return 1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void protectAccess(java.io.File)>(r0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $l0 = virtualinvoke r0.<java.io.File: long length()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r14 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] salt>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r75)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r37 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.ambari.server.security.encryption.AESEncryptor aes>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r66 == null goto return 1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : return 1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r28 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r6 = new java.util.ArrayList
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r18 = r66.<org.apache.ambari.server.security.encryption.EncryptionResult: byte[] iv>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r4 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z4 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z6 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z2 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : if r1 == null goto return
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : r2 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: java.util.concurrent.locks.Lock getLock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : $r4 = r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: com.google.common.cache.Cache cache>
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : goto [?= return]
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r19 = r4[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r24 = virtualinvoke $r15.<java.lang.String: char[] toCharArray()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : r4 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("::")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : r26 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.lang.String)>(r1, "UTF8")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : goto [?= return]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r5 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r7 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r15 = new java.lang.String
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r11 = new java.lang.String
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.SecurePasswordHelper: java.lang.String createSecurePassword(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>(null, null, null, null, null, null)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r38 != null goto (branch)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i36 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r11 = <org.apache.ambari.server.security.SecurePasswordHelper: char[][] SECURE_PASSWORD_CHARACTER_CLASSES>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r28 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_UPPERCASE_LETTERS>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i39 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i34 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r6 = r0.<org.apache.ambari.server.security.SecurePasswordHelper: java.security.SecureRandom secureRandom>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r35 != null goto (branch)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r24 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_DIGITS>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i38 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r12 = r0.<org.apache.ambari.server.security.SecurePasswordHelper: java.security.SecureRandom secureRandom>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r34 == null goto r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r32 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_LOWERCASE_LETTERS>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r3 = new java.util.ArrayList
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $i10 = virtualinvoke r34.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i37 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $z6 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r20 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_PUNCTUATION>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $i5 = interfaceinvoke $r3.<java.util.List: int size()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r37 != null goto (branch)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r39 != null goto $r3 = new java.util.ArrayList
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r16 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_WHITESPACE>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i41 = 0
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : $r5 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : goto [?= return l0]
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty TEMPORARYSTORE_RETENTION_MINUTES>
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : return l0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/security/SecurePasswordHelper;")
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r2 = new java.util.Properties
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : $r8 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : if r1 == null goto r7 = r1
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : r2 = staticinvoke <org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: java.lang.String createAliasPrefix(java.lang.String)>(r0)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : if r0 == null goto r7 = r1
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return r3
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r3 = new org.apache.ambari.server.security.encryption.EncryptionResult
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8")
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return $r3
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AESEncryptor: org.apache.ambari.server.security.encryption.EncryptionResult encrypt(byte[])>(r2)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.validateInitialized : $r2 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.validateInitialized : $r4 = virtualinvoke r1.<org.apache.ambari.server.security.encryption.CredentialStoreType: java.lang.String name()>()
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.validateInitialized : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r1)
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $r18 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : return 1
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty TEMPORARYSTORE_ACTIVELY_PURGE>
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $r3 = "true"
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredentialStore : $r5 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.InMemoryCredentialStore temporaryCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredentialStore : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredentialStore : $r2 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r1)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r7 = virtualinvoke r2.<java.nio.CharBuffer: char[] array()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r8 = virtualinvoke r3.<java.nio.ByteBuffer: byte[] array()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : return r4
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : if r1 != null goto r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r1)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8")
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r6 = virtualinvoke r3.<java.nio.ByteBuffer: byte[] array()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : $i1 = virtualinvoke $r4.<java.io.FileReader: int read(char[])>(r14)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : goto [?= return z0]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : $z2 = 1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : r13 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : $r4 = new java.io.FileReader
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : $r5 = "#1.0# "
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : virtualinvoke $r4.<java.io.FileReader: void close()>()
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializePersistedCredentialStore : $r5 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.FileBasedCredentialStore persistedCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializePersistedCredentialStore : $r4 = new org.apache.ambari.server.security.encryption.FileBasedCredentialStore
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializePersistedCredentialStore : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getLock : $r1 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializeTemporaryCredentialStore : $r6 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.InMemoryCredentialStore temporaryCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializeTemporaryCredentialStore : $r3 = new org.apache.ambari.server.security.encryption.InMemoryCredentialStore
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializeTemporaryCredentialStore : $r2 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r3)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $r4 = specialinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.CredentialStore getCredentialStore(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r3)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $r4 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
