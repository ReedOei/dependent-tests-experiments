org.apache.ambari.server.state.AutoDeployInfo.setCoLocate : r0.<org.apache.ambari.server.state.AutoDeployInfo: java.lang.String m_coLocate> = r1
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>("hdfs-site")
org.apache.ambari.server.state.AutoDeployInfo.setEnabled : r0.<org.apache.ambari.server.state.AutoDeployInfo: boolean m_enabled> = z0
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r11 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r0, r1, 0)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i9 = virtualinvoke r33.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i18 = i18 + 1]
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 >= 0 goto $r6 = "${ambariVersion}"
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i24)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r9 = virtualinvoke r30.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([0-9]+).([0-9]+).([0-9]+).?([0-9]+)?.*", "$1.$2.$3.$4")
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21)
org.apache.ambari.server.utils.VersionUtils.compareVersions : i18 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i2 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i12 = lengthof r2
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i7 = virtualinvoke r33.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r6 = "${ambariVersion}"
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i5 = interfaceinvoke $r10.<java.util.List: int size()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : return -1
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r28 != null goto r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r27)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r8 = virtualinvoke r29.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([0-9]+).([0-9]+).([0-9]+).?([0-9]+)?.*", "$1.$2.$3.$4")
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r27 != null goto (branch)
org.apache.ambari.server.utils.VersionUtils.compareVersions : r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r27)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r17 = r1[i18]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i24)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z1 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i11 = lengthof r1
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 == 0 goto $i16 = i15
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r16 = r2[i18]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r10 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : r30 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r28)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i4 = lengthof r1
org.apache.ambari.server.utils.VersionUtils.compareVersions : i24 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i1 = virtualinvoke r29.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z0 = virtualinvoke r29.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r1 == null goto $r7 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r85 = interfaceinvoke r101.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r82 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r104 == null goto (branch)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z28 = 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r13 = new java.util.HashMap
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("oozie-env")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r5 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r81 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z27 != 0 goto $z29 = staticinvoke <org.apache.ambari.server.utils.SecretReference: boolean isSecret(java.lang.String)>(r104)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r73 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r10 = interfaceinvoke r105.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r87 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z28 == 0 goto $r7 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r79 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z2 = interfaceinvoke r117.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r24 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r80 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r26 = new org.apache.ambari.server.topology.InvalidTopologyException
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r20 = interfaceinvoke r117.<java.util.Map: java.lang.Object get(java.lang.Object)>("oozie_database")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z1 = virtualinvoke r111.<java.lang.String: boolean equals(java.lang.Object)>("MYSQL_SERVER")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z29 = staticinvoke <org.apache.ambari.server.utils.SecretReference: boolean isSecret(java.lang.String)>(r104)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r70 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r7 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r11 = new java.util.HashSet
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r12 = new java.util.HashMap
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r14 = interfaceinvoke r106.<org.apache.ambari.server.topology.HostGroup: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r17 = interfaceinvoke r110.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r117 == null goto (branch)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r22 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r72 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r16 = interfaceinvoke r106.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r86 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean getGplLicenseAccepted()>()
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : virtualinvoke r1.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r0)
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : virtualinvoke r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : return r0
org.apache.ambari.server.topology.BlueprintImplTest.setupConfigurationWithGPLLicense : $r8 = class "Lorg/apache/ambari/server/topology/BlueprintValidatorImpl;"
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.utils.SecretReference.isSecret : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.ambari.server.utils.SecretReference.isSecret : $i0 = lengthof r1
