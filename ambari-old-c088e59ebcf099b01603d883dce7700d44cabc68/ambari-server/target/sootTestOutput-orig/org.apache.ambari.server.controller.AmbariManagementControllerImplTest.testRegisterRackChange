org.apache.ambari.server.state.ServiceInfo.setRestartRequiredAfterRackChange : r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean restartRequiredAfterRackChange> = r1
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.ServiceInfo.isRestartRequiredAfterRackChange : $r1 = r0.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean restartRequiredAfterRackChange>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r19 = interfaceinvoke r6.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r21 = interfaceinvoke r9.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r14 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r18 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean isRestartRequiredAfterRackChange()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r22 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r13 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponentHost: void setRestartRequired(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r23 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r17 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke $r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r1 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken
org.apache.ambari.server.state.ServiceInfo.ensureMandatoryServiceProperties : $r2 = specialinvoke r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map ensureVisibilityServiceProperties(java.util.Map)>(r1)
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r2 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r18 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_INSTALLABLE_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r13 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r6 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r8 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MONITORED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : $r4 = <org.apache.ambari.server.state.ServiceInfo: java.util.AbstractMap$SimpleEntry DEFAULT_SERVICE_MANAGED_PROPERTY>
org.apache.ambari.server.state.ServiceInfo.ensureVisibilityServiceProperties : return r1
org.apache.ambari.server.state.RepositoryInfo.setRepoName : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName> = r1
