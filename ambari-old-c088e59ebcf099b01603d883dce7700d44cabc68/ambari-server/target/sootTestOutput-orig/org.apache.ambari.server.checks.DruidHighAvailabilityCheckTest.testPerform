org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.checks.DruidHighAvailabilityCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheckTest$1: org.apache.ambari.server.checks.DruidHighAvailabilityCheckTest this$0>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_targetRepositoryVersion>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason>
org.apache.ambari.server.checks.DruidHighAvailabilityCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : $r9 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("DRUID")
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : $r5 = new java.util.HashSet
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : $r10 = interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : $r6 = r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : if r13 == null goto (branch)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : goto [?= return r12]
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.getHostsForComponent : return r12
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r12 = <org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.lang.String[] DRUID_COMPONENT_NAMES>
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r4 = r12[i2]
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r13 = virtualinvoke r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r7 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.util.Set getHostsForComponent(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r2, r4)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $i1 = interfaceinvoke r5.<java.util.Set: int size()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r8 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
