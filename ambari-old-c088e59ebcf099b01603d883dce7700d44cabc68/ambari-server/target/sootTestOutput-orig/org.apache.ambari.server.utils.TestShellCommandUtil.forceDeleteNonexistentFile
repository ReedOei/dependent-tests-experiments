org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r7 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>()
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r5 = new java.io.BufferedReader
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.ShellCommandUtil.streamToString : $r4 = new java.io.InputStreamReader
org.apache.ambari.server.utils.ShellCommandUtil.delete : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("-f")
org.apache.ambari.server.utils.ShellCommandUtil.delete : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("/bin/rm")
org.apache.ambari.server.utils.ShellCommandUtil.delete : $r3 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.util.List,java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>($r2, null, null, z1)
org.apache.ambari.server.utils.ShellCommandUtil.delete : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0)
org.apache.ambari.server.utils.ShellCommandUtil.delete : $z2 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.delete : $r2 = new java.util.ArrayList
org.apache.ambari.server.utils.ShellCommandUtil.delete : if z0 == 0 goto interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0)
org.apache.ambari.server.utils.ShellCommandUtil$Result.getStderr : $r1 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String stderr>
org.apache.ambari.server.utils.ShellCommandUtil$Result.isSuccessful : $i0 = r0.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int exitCode>
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r30 = virtualinvoke r22.<java.lang.Process: java.io.InputStream getErrorStream()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : i6 = virtualinvoke r22.<java.lang.Process: int exitValue()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if z0 == 0 goto r19 = r0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r22 = virtualinvoke $r6.<java.lang.ProcessBuilder: java.lang.Process start()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r29 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: java.lang.String streamToString(java.io.InputStream)>(r24)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r24 = virtualinvoke r22.<java.lang.Process: java.io.InputStream getInputStream()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r2 == null goto virtualinvoke r22.<java.lang.Process: int waitFor()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i0 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r1 == null goto $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r32 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r6 = new java.lang.ProcessBuilder
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r19 = r0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : virtualinvoke r22.<java.lang.Process: int waitFor()>()
