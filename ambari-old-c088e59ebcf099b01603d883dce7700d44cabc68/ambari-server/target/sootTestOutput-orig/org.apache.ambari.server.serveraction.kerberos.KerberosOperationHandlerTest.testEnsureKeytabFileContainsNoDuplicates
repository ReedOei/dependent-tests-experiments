org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r2 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return $r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r18 = new org.apache.directory.server.kerberos.shared.keytab.KeytabEntry
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r13 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r7 = staticinvoke <org.apache.directory.server.kerberos.shared.crypto.encryption.KerberosKeyFactory: java.util.Map getKerberosKeys(java.lang.String,java.lang.String,java.util.Set)>(r1, r2, $r11)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r11 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r14 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z1 = interfaceinvoke $r11.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r15 = new org.apache.directory.shared.kerberos.KerberosTime
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r2 != null goto $r11 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r7 == null goto return $r14
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : virtualinvoke $r14.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>($r13)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r16 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r3 != null goto $b1 = virtualinvoke r3.<java.lang.Integer: byte byteValue()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r17 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null goto r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.beforeMITKerberosOperationHandlerTest : $r1 = class "Lorg/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler;"
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytabFile : return 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytabFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.directory.server.kerberos.shared.keytab.Keytab readKeytabFile(java.io.File)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytabFile : if r2 != null goto $r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.directory.server.kerberos.shared.keytab.Keytab readKeytabFile(java.io.File)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytabFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.directory.server.kerberos.shared.keytab.Keytab createKeytab(java.lang.String,java.lang.String,java.lang.Integer)>(r1, r2, r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()", "org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs")]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r27 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r12 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r16 = virtualinvoke r8.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r22.<java.util.Iterator: void remove()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r22 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r28 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r1 != null goto r25 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z5 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r9 = virtualinvoke r1.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r2 != null goto r26 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r14 = virtualinvoke r8.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r27.<java.util.List: boolean addAll(java.util.Collection)>($r21)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : return r28
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r10 = virtualinvoke r2.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r27.<java.util.List: boolean addAll(java.util.Collection)>(r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r27.<java.util.List: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z1 = interfaceinvoke $r21.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : virtualinvoke r28.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r27)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.readKeytabFile : goto [?= return r4]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.readKeytabFile : $z1 = virtualinvoke r1.<java.io.File: boolean canRead()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.readKeytabFile : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.readKeytabFile : r4 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.readKeytabFile : r4 = staticinvoke <org.apache.directory.server.kerberos.shared.keytab.Keytab: org.apache.directory.server.kerberos.shared.keytab.Keytab read(java.io.File)>(r1)
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null goto (branch)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r6 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r7 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r8 = r2[i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r9)
