org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststoreType>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : if r3 != null goto $r6 = r3
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromStore(java.lang.String)>(r2)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : if r1 == null goto $r3 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_KSTR_DIR>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r5 = specialinvoke r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String getPassword(org.apache.ambari.server.configuration.Configuration)>(r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = staticinvoke <java.lang.System: java.util.Map getenv()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("AMBARI_SECURITY_MASTER_KEY")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r19 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r19 == null goto $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null goto return r19
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null goto return r19
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : r1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : if r1 == null goto $z1 = 0
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r14 = null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r14
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized> = 1
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r12 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r7 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z0 = r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r2 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> = null
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r9 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r7 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : return r12
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r6 = new java.util.Properties
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : return $r21
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r18 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r20 = new org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$TestConfiguration
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r21 = new org.apache.ambari.server.configuration.ComponentSSLConfiguration
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke $r21.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void init(org.apache.ambari.server.configuration.Configuration)>($r20)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r9 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Value of {} is not set, using {}", $r10, $r11)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r7 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : return r12
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke $r7.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return $r7
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r7 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : r7 = null
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
