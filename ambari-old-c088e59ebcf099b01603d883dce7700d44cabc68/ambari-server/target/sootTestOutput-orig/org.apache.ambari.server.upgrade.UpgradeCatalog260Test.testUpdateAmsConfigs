org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null goto r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r11 == null goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r58 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r26 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r72 goto $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r15 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map removeProperties(java.util.Map,java.util.Set,com.google.common.collect.Multimap)>(r69, r4, r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r27 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null goto return
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r67 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r71 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r68, r69)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i1 = interfaceinvoke r9.<com.google.common.collect.Multimap: int size()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r69 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r68, r3, z0, r9)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null goto r68 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r72 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : return r2
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : if r2 == null goto $r3 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : if r1 == null goto $r3 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.getCheckedClusterMap : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.getTargetVersion : return "2.6.0"
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeConfigurationPropertiesFromCluster : $r4 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r12 = <org.apache.ambari.server.upgrade.UpgradeCatalog260: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r3 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r10 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r2 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("ssl.client.truststore.alias")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-ssl-client")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : if r6 == null goto (branch)
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : $z2 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>("ssl.client.truststore.alias")
org.apache.ambari.server.upgrade.UpgradeCatalog260.updateAmsConfigs : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED>
