org.apache.ambari.server.state.OperatingSystemInfo.setOsType : r0.<org.apache.ambari.server.state.OperatingSystemInfo: java.lang.String osType> = r1 >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.getOsType : $r1 = r0.<org.apache.ambari.server.state.OperatingSystemInfo: java.lang.String osType>
org.apache.ambari.server.state.OperatingSystemInfo.getOsType : $r1 = r0.<org.apache.ambari.server.state.OperatingSystemInfo: java.lang.String osType> >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.getOsType : return $r1
org.apache.ambari.server.state.OperatingSystemInfo.getOsType : return $r1 >>>>>>>> org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : $r1 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : $r1 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : $r1[0] = "HIVE"
org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : $r1[0] = "HIVE" >>>>>>>> org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : $r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r1)
org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : $r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : return $r2
org.apache.ambari.server.checks.HiveNotRollingWarning.getApplicableServices : return $r2 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : $r1 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : $r1 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : return $r1
org.apache.ambari.server.checks.AbstractCheckDescriptor.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.equals : if r0 != r1
org.apache.ambari.server.state.OperatingSystemInfo.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.equals : if r1 != null
org.apache.ambari.server.state.OperatingSystemInfo.equals : if r1 != null >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.OperatingSystemInfo.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.OperatingSystemInfo.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.equals : if $r3 == $r4
org.apache.ambari.server.state.OperatingSystemInfo.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.state.OperatingSystemInfo.equals : return 0
