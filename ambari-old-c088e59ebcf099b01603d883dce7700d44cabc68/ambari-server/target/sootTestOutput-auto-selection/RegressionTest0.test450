org.apache.ambari.server.view.RemoteAmbariCluster.getClusterName : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String getUrl()>() >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity.getUrl : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String _persistence_get_url()>()
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity.getUrl : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String _persistence_get_url()>() >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_get_url : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: void _persistence_checkFetched(java.lang.String)>("url")
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_get_url : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: void _persistence_checkFetched(java.lang.String)>("url") >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_get_url : $r1 = r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String url>
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_get_url : $r1 = r0.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String url> >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_get_url : return $r1
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity._persistence_get_url : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity.getUrl : return $r1
org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity.getUrl : return $r1 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getClusterName : r2 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
