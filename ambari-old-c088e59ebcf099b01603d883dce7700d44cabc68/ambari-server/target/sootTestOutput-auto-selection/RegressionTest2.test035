org.apache.ambari.server.api.services.ServiceService.updateArtifacts : $r6 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type PUT> >>>>>>>> org.apache.ambari.server.api.services.ServiceService.updateArtifacts : $r5 = r0.<org.apache.ambari.server.api.services.ServiceService: java.lang.String m_clusterName>
org.apache.ambari.server.api.services.ServiceService.updateArtifacts : $r5 = r0.<org.apache.ambari.server.api.services.ServiceService: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.api.services.ServiceService.updateArtifacts : $r7 = virtualinvoke r0.<org.apache.ambari.server.api.services.ServiceService: org.apache.ambari.server.api.resources.ResourceInstance createArtifactResource(java.lang.String,java.lang.String,java.lang.String)>($r5, r4, null)
org.apache.ambari.server.api.services.ServiceService.updateArtifacts : $r7 = virtualinvoke r0.<org.apache.ambari.server.api.services.ServiceService: org.apache.ambari.server.api.resources.ResourceInstance createArtifactResource(java.lang.String,java.lang.String,java.lang.String)>($r5, r4, null) >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r5 = new java.util.HashMap
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r5 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1)
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2)
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2) >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r10 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact>
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r10 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact> >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3)
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3) >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r12 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact>
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r12 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact> >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r13 = virtualinvoke r0.<org.apache.ambari.server.api.services.ServiceService: org.apache.ambari.server.api.resources.ResourceInstance createResource(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>($r12, $r5)
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : $r13 = virtualinvoke r0.<org.apache.ambari.server.api.services.ServiceService: org.apache.ambari.server.api.resources.ResourceInstance createResource(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>($r12, $r5) >>>>>>>> org.apache.ambari.server.api.services.BaseService.createResource : $r3 = r0.<org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.api.resources.ResourceInstanceFactory m_resourceFactory>
org.apache.ambari.server.api.services.BaseService.createResource : $r3 = r0.<org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.api.resources.ResourceInstanceFactory m_resourceFactory> >>>>>>>> org.apache.ambari.server.api.services.BaseService.createResource : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.api.resources.ResourceInstanceFactory: org.apache.ambari.server.api.resources.ResourceInstance createResource(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)
org.apache.ambari.server.api.services.BaseService.createResource : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.api.resources.ResourceInstanceFactory: org.apache.ambari.server.api.resources.ResourceInstance createResource(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if $z0 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r5 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: java.util.Map resourceDefinitions>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r5 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: java.util.Map resourceDefinitions> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z0 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r6 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r6 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES>
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2
org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0]
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i0 = virtualinvoke $r7.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i0 = virtualinvoke $r7.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i1 = $r6[$i0]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i1 = $r6[$i0] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : tableswitch($i1) {     case 1:
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r231 = new org.apache.ambari.server.api.resources.SimpleResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r231 = new org.apache.ambari.server.api.resources.SimpleResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r43 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r43 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r42 = newarray (org.apache.ambari.server.controller.spi.Resource$Type)[0]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r42 = newarray (org.apache.ambari.server.controller.spi.Resource$Type)[0] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r231.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,java.lang.String,org.apache.ambari.server.controller.spi.Resource$Type[])>($r43, "artifact", "artifacts", $r42)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r231.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,java.lang.String,org.apache.ambari.server.controller.spi.Resource$Type[])>($r43, "artifact", "artifacts", $r42) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r9 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r155 = r231
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r155 = r231 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= return r155]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= return r155] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : return r155
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : return r155 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r4 = new org.apache.ambari.server.api.query.QueryImpl
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r4 = new org.apache.ambari.server.api.query.QueryImpl >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r1 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : if $r1 != null >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r3 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: java.lang.String PROVIDER_MODULE_CLASS>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r3 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: java.lang.String PROVIDER_MODULE_CLASS> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3)
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.Service$Type.values : $r0 = <org.apache.ambari.server.state.Service$Type: org.apache.ambari.server.state.Service$Type[] $VALUES>
org.apache.ambari.server.state.Service$Type.values : $r0 = <org.apache.ambari.server.state.Service$Type: org.apache.ambari.server.state.Service$Type[] $VALUES> >>>>>>>> org.apache.ambari.server.state.Service$Type.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.Service$Type.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.Service$Type.values : $r2 = (org.apache.ambari.server.state.Service$Type[]) $r1
org.apache.ambari.server.state.Service$Type.values : $r2 = (org.apache.ambari.server.state.Service$Type[]) $r1 >>>>>>>> org.apache.ambari.server.state.Service$Type.values : return $r2
org.apache.ambari.server.state.Service$Type.values : return $r2 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r4 = virtualinvoke r14.<java.lang.Class: java.lang.Object newInstance()>()
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r4 = virtualinvoke r14.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r2 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory>
org.apache.ambari.server.utils.AmbariPath.getPath : $r2 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r2 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r2 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r8 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r8 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController>
org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : return $r0
org.apache.ambari.server.controller.AmbariServer.getController : return $r0 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r5 = (org.apache.ambari.server.controller.spi.ProviderModule) $r4
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r5 = (org.apache.ambari.server.controller.spi.ProviderModule) $r4 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r0 = staticinvoke <org.apache.ambari.server.view.ViewProviderModule: org.apache.ambari.server.view.ViewProviderModule getViewProviderModule(org.apache.ambari.server.controller.spi.ProviderModule)>($r5)
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : r0 = staticinvoke <org.apache.ambari.server.view.ViewProviderModule: org.apache.ambari.server.view.ViewProviderModule getViewProviderModule(org.apache.ambari.server.controller.spi.ProviderModule)>($r5) >>>>>>>> org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : $r1 = new org.apache.ambari.server.view.ViewProviderModule
org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : $r1 = new org.apache.ambari.server.view.ViewProviderModule >>>>>>>> org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : specialinvoke $r1.<org.apache.ambari.server.view.ViewProviderModule: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0)
org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : specialinvoke $r1.<org.apache.ambari.server.view.ViewProviderModule: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0) >>>>>>>> org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : return $r1
org.apache.ambari.server.view.ViewProviderModule.getViewProviderModule : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r6 = new org.apache.ambari.server.controller.internal.ClusterControllerImpl
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r6 = new org.apache.ambari.server.controller.internal.ClusterControllerImpl >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : specialinvoke $r6.<org.apache.ambari.server.controller.internal.ClusterControllerImpl: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0)
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : specialinvoke $r6.<org.apache.ambari.server.controller.internal.ClusterControllerImpl: void <init>(org.apache.ambari.server.controller.spi.ProviderModule)>(r0) >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> = $r6
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> = $r6 >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : goto [?= $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>]
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : goto [?= $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>] >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller>
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : $r2 = <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController controller> >>>>>>>> org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2
org.apache.ambari.server.controller.utilities.ClusterControllerHelper.getClusterController : return $r2 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r2, r19, $r5)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r2, r19, $r5) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap>
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : return $r4
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : return $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseService.createResource : return $r4
org.apache.ambari.server.api.services.BaseService.createResource : return $r4 >>>>>>>> org.apache.ambari.server.api.services.ServiceService.createArtifactResource : return $r13
org.apache.ambari.server.api.services.ServiceService.createArtifactResource : return $r13 >>>>>>>> org.apache.ambari.server.api.services.ServiceService.updateArtifacts : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.ServiceService: javax.ws.rs.core.Response handleRequest(javax.ws.rs.core.HttpHeaders,java.lang.String,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.resources.ResourceInstance)>(r2, r1, r3, $r6, $r7)
org.apache.ambari.server.api.services.ServiceService.updateArtifacts : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.services.ServiceService: javax.ws.rs.core.Response handleRequest(javax.ws.rs.core.HttpHeaders,java.lang.String,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.resources.ResourceInstance)>(r2, r1, r3, $r6, $r7) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r6 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseService: javax.ws.rs.core.Response handleRequest(javax.ws.rs.core.HttpHeaders,java.lang.String,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,javax.ws.rs.core.MediaType,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r4, null, r5)
org.apache.ambari.server.api.services.BaseService.handleRequest : $r6 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseService: javax.ws.rs.core.Response handleRequest(javax.ws.rs.core.HttpHeaders,java.lang.String,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,javax.ws.rs.core.MediaType,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r4, null, r5) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r9 = new org.apache.ambari.server.api.services.RequestBody
org.apache.ambari.server.api.services.BaseService.handleRequest : $r9 = new org.apache.ambari.server.api.services.RequestBody >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r9.<org.apache.ambari.server.api.services.RequestBody: void <init>()>()
org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r9.<org.apache.ambari.server.api.services.RequestBody: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : virtualinvoke $r9.<org.apache.ambari.server.api.services.RequestBody: void setBody(java.lang.String)>(r2)
org.apache.ambari.server.api.services.BaseService.handleRequest : virtualinvoke $r9.<org.apache.ambari.server.api.services.RequestBody: void setBody(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.api.services.RequestBody.setBody : if r1 == null
org.apache.ambari.server.api.services.RequestBody.setBody : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.RequestBody.setBody : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.api.services.RequestBody.setBody : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.setBody : if $z0 != 0
org.apache.ambari.server.api.services.RequestBody.setBody : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.RequestBody.setBody : r0.<org.apache.ambari.server.api.services.RequestBody: java.lang.String m_body> = r1
org.apache.ambari.server.api.services.RequestBody.setBody : r0.<org.apache.ambari.server.api.services.RequestBody: java.lang.String m_body> = r1 >>>>>>>> org.apache.ambari.server.api.services.RequestBody.setBody : $r2 = r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Map m_requestInfoProps>
org.apache.ambari.server.api.services.RequestBody.setBody : $r2 = r0.<org.apache.ambari.server.api.services.RequestBody: java.util.Map m_requestInfoProps> >>>>>>>> org.apache.ambari.server.api.services.RequestBody.setBody : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("RAW_REQUEST_BODY", r1)
org.apache.ambari.server.api.services.RequestBody.setBody : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("RAW_REQUEST_BODY", r1) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r10 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.api.services.RequestFactory getRequestFactory()>()
org.apache.ambari.server.api.services.BaseService.handleRequest : $r10 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.api.services.RequestFactory getRequestFactory()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.getRequestFactory : $r1 = new org.apache.ambari.server.api.services.RequestFactory
org.apache.ambari.server.api.services.BaseService.getRequestFactory : $r1 = new org.apache.ambari.server.api.services.RequestFactory >>>>>>>> org.apache.ambari.server.api.services.BaseService.getRequestFactory : specialinvoke $r1.<org.apache.ambari.server.api.services.RequestFactory: void <init>()>()
org.apache.ambari.server.api.services.BaseService.getRequestFactory : specialinvoke $r1.<org.apache.ambari.server.api.services.RequestFactory: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.getRequestFactory : return $r1
org.apache.ambari.server.api.services.BaseService.getRequestFactory : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : r51 = virtualinvoke $r10.<org.apache.ambari.server.api.services.RequestFactory: org.apache.ambari.server.api.services.Request createRequest(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, $r9, r3, r4, r6)
org.apache.ambari.server.api.services.BaseService.handleRequest : r51 = virtualinvoke $r10.<org.apache.ambari.server.api.services.RequestFactory: org.apache.ambari.server.api.services.Request createRequest(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, $r9, r3, r4, r6) >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : $r6 = <org.apache.ambari.server.api.services.RequestFactory$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type>
org.apache.ambari.server.api.services.RequestFactory.createRequest : $r6 = <org.apache.ambari.server.api.services.RequestFactory$1: int[] $SwitchMap$org$apache$ambari$server$api$services$Request$Type> >>>>>>>> org.apache.ambari.server.api.services.Request$Type.values : $r0 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type[] $VALUES>
org.apache.ambari.server.api.services.Request$Type.values : $r0 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type[] $VALUES> >>>>>>>> org.apache.ambari.server.api.services.Request$Type.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.api.services.Request$Type.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.api.services.Request$Type.values : $r2 = (org.apache.ambari.server.api.services.Request$Type[]) $r1
org.apache.ambari.server.api.services.Request$Type.values : $r2 = (org.apache.ambari.server.api.services.Request$Type[]) $r1 >>>>>>>> org.apache.ambari.server.api.services.Request$Type.values : return $r2
org.apache.ambari.server.api.services.Request$Type.values : return $r2 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : $i0 = virtualinvoke r4.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>()
org.apache.ambari.server.api.services.RequestFactory.createRequest : $i0 = virtualinvoke r4.<org.apache.ambari.server.api.services.Request$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : $i1 = $r6[$i0]
org.apache.ambari.server.api.services.RequestFactory.createRequest : $i1 = $r6[$i0] >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : tableswitch($i1) {     case 1:
org.apache.ambari.server.api.services.RequestFactory.createRequest : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : $r10 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: org.apache.ambari.server.api.services.Request createPutRequest(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r5)
org.apache.ambari.server.api.services.RequestFactory.createRequest : $r10 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: org.apache.ambari.server.api.services.Request createPutRequest(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r5) >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPutRequest : $r5 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type PUT>
org.apache.ambari.server.api.services.RequestFactory.createPutRequest : $r5 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type PUT> >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPutRequest : specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: boolean applyDirectives(org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>($r5, r2, r3, r4)
org.apache.ambari.server.api.services.RequestFactory.createPutRequest : specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: boolean applyDirectives(org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>($r5, r2, r3, r4) >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : r5 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: java.util.Map getQueryParameters(javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.RequestBody)>(r3, r2)
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : r5 = specialinvoke r0.<org.apache.ambari.server.api.services.RequestFactory: java.util.Map getQueryParameters(javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.RequestBody)>(r3, r2) >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r7 = new java.util.HashMap
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r8 = interfaceinvoke r1.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r8 = interfaceinvoke r1.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $r5 = r0.<org.apache.ambari.server.api.services.LocalUriInfo: java.net.URI uri>
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $r5 = r0.<org.apache.ambari.server.api.services.LocalUriInfo: java.net.URI uri> >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : r1 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>($r5, "UTF-8")
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : r1 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>($r5, "UTF-8") >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $r6 = new com.sun.jersey.core.util.MultivaluedMapImpl
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $r6 = new com.sun.jersey.core.util.MultivaluedMapImpl >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : specialinvoke $r6.<com.sun.jersey.core.util.MultivaluedMapImpl: void <init>()>()
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : specialinvoke $r6.<com.sun.jersey.core.util.MultivaluedMapImpl: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : if $z0 == 0
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : return $r6
org.apache.ambari.server.api.services.LocalUriInfo.getQueryParameters : return $r6 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r9 = interfaceinvoke $r8.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $r9 = interfaceinvoke $r8.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r19 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r19 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if $z0 == 0
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r21 = virtualinvoke r2.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>()
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : r21 = virtualinvoke r2.<org.apache.ambari.server.api.services.RequestBody: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getQueryString : $r1 = r0.<org.apache.ambari.server.api.services.RequestBody: java.lang.String m_query>
org.apache.ambari.server.api.services.RequestBody.getQueryString : $r1 = r0.<org.apache.ambari.server.api.services.RequestBody: java.lang.String m_query> >>>>>>>> org.apache.ambari.server.api.services.RequestBody.getQueryString : return $r1
org.apache.ambari.server.api.services.RequestBody.getQueryString : return $r1 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if r21 == null
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : if r21 == null >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : return $r7
org.apache.ambari.server.api.services.RequestFactory.getQueryParameters : return $r7 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : z2 = 1
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : z2 = 1 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : if $z0 != 0
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.applyDirectives : return z2
org.apache.ambari.server.api.services.RequestFactory.applyDirectives : return z2 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPutRequest : $r6 = new org.apache.ambari.server.api.services.PutRequest
org.apache.ambari.server.api.services.RequestFactory.createPutRequest : $r6 = new org.apache.ambari.server.api.services.PutRequest >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPutRequest : specialinvoke $r6.<org.apache.ambari.server.api.services.PutRequest: void <init>(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r4)
org.apache.ambari.server.api.services.RequestFactory.createPutRequest : specialinvoke $r6.<org.apache.ambari.server.api.services.PutRequest: void <init>(javax.ws.rs.core.HttpHeaders,org.apache.ambari.server.api.services.RequestBody,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createPutRequest : return $r6
org.apache.ambari.server.api.services.RequestFactory.createPutRequest : return $r6 >>>>>>>> org.apache.ambari.server.api.services.RequestFactory.createRequest : return $r10
org.apache.ambari.server.api.services.RequestFactory.createRequest : return $r10 >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r11 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.services.BaseService.handleRequest : $r11 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r12 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.services.BaseService.handleRequest : $r12 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r13 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS OK>
org.apache.ambari.server.api.services.BaseService.handleRequest : $r13 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS OK> >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r12.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS)>($r13)
org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r12.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS)>($r13) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r11.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r12)
org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r11.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r12) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : r52 = $r11
org.apache.ambari.server.api.services.BaseService.handleRequest : r52 = $r11 >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r14 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.api.services.parsers.RequestBodyParser getBodyParser()>()
org.apache.ambari.server.api.services.BaseService.handleRequest : $r14 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.api.services.parsers.RequestBodyParser getBodyParser()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.getBodyParser : $r1 = new org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser
org.apache.ambari.server.api.services.BaseService.getBodyParser : $r1 = new org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser >>>>>>>> org.apache.ambari.server.api.services.BaseService.getBodyParser : specialinvoke $r1.<org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser: void <init>()>()
org.apache.ambari.server.api.services.BaseService.getBodyParser : specialinvoke $r1.<org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.getBodyParser : return $r1
org.apache.ambari.server.api.services.BaseService.getBodyParser : return $r1 >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : r53 = interfaceinvoke $r14.<org.apache.ambari.server.api.services.parsers.RequestBodyParser: java.util.Set parse(java.lang.String)>(r2)
org.apache.ambari.server.api.services.BaseService.handleRequest : r53 = interfaceinvoke $r14.<org.apache.ambari.server.api.services.parsers.RequestBodyParser: java.util.Set parse(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r15 = new java.util.HashSet
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r15 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r15.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r15.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r16 = new org.apache.ambari.server.api.services.RequestBody
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r16 = new org.apache.ambari.server.api.services.RequestBody >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r16.<org.apache.ambari.server.api.services.RequestBody: void <init>()>()
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r16.<org.apache.ambari.server.api.services.RequestBody: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : virtualinvoke $r16.<org.apache.ambari.server.api.services.RequestBody: void setBody(java.lang.String)>(r1)
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : virtualinvoke $r16.<org.apache.ambari.server.api.services.RequestBody: void setBody(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : if r1 == null
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : if $i0 == 0
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : if $i0 == 0 >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r17 = new org.codehaus.jackson.map.ObjectMapper
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r17 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r17.<org.codehaus.jackson.map.ObjectMapper: void <init>()>()
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r17.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r18 = specialinvoke r0.<org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser: java.lang.String ensureArrayFormat(java.lang.String)>(r1)
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r18 = specialinvoke r0.<org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser: java.lang.String ensureArrayFormat(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("[")
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("[") >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : if $z0 == 0
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : return $r6
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.ensureArrayFormat : return $r6 >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : r35 = virtualinvoke $r17.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.lang.String)>($r18)
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : r35 = virtualinvoke $r17.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r31 = <org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r31 = <org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $z9 = interfaceinvoke $r31.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $z9 = interfaceinvoke $r31.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : if $z9 == 0
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : if $z9 == 0 >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r32 = new org.apache.ambari.server.api.services.parsers.BodyParseException
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : $r32 = new org.apache.ambari.server.api.services.parsers.BodyParseException >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r32.<org.apache.ambari.server.api.services.parsers.BodyParseException: void <init>(java.lang.Exception)>($r30)
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : specialinvoke $r32.<org.apache.ambari.server.api.services.parsers.BodyParseException: void <init>(java.lang.Exception)>($r30) >>>>>>>> org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : throw $r32
org.apache.ambari.server.api.services.parsers.JsonRequestBodyParser.parse : throw $r32 >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r40 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.services.BaseService.handleRequest : $r40 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r41 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.services.BaseService.handleRequest : $r41 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r42 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.services.BaseService.handleRequest : $r42 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r43 = virtualinvoke $r39.<org.apache.ambari.server.api.services.parsers.BodyParseException: java.lang.String getMessage()>()
org.apache.ambari.server.api.services.BaseService.handleRequest : $r43 = virtualinvoke $r39.<org.apache.ambari.server.api.services.parsers.BodyParseException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r41.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r42, $r43)
org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r41.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r42, $r43) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r40.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r41)
org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r40.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r41) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : r52 = $r40
org.apache.ambari.server.api.services.BaseService.handleRequest : r52 = $r40 >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r45 = <org.apache.ambari.server.api.services.BaseService: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseService.handleRequest : $r45 = <org.apache.ambari.server.api.services.BaseService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r44 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.BaseService.handleRequest : $r44 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r44.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.BaseService.handleRequest : specialinvoke $r44.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad request received: ")
org.apache.ambari.server.api.services.BaseService.handleRequest : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad request received: ") >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r47 = virtualinvoke $r39.<org.apache.ambari.server.api.services.parsers.BodyParseException: java.lang.String getMessage()>()
org.apache.ambari.server.api.services.BaseService.handleRequest : $r47 = virtualinvoke $r39.<org.apache.ambari.server.api.services.parsers.BodyParseException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47)
org.apache.ambari.server.api.services.BaseService.handleRequest : $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.BaseService.handleRequest : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r49)
org.apache.ambari.server.api.services.BaseService.handleRequest : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r49) >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : $r50 = <org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.audit.request.RequestAuditLogger requestAuditLogger>
org.apache.ambari.server.api.services.BaseService.handleRequest : $r50 = <org.apache.ambari.server.api.services.BaseService: org.apache.ambari.server.audit.request.RequestAuditLogger requestAuditLogger> >>>>>>>> org.apache.ambari.server.api.services.BaseService.handleRequest : interfaceinvoke $r50.<org.apache.ambari.server.audit.request.RequestAuditLogger: void log(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r51, $r40)
