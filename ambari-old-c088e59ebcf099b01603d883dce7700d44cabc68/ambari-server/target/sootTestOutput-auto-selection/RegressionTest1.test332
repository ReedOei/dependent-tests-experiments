org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $z9 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if $z9 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if $z9 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z0 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $s8 = 400
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $s8 = 400 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= (branch)]
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z1 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z1 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $s9 = 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $s9 = 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i1 = $s8 + $s9
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i1 = $s8 + $s9 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z2 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z2 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b10 = 100
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b10 = 100 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= $i2 = $i1 + $b10]
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= $i2 = $i1 + $b10] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i2 = $i1 + $b10
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i2 = $i1 + $b10 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z3 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z3 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b11 = 40
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b11 = 40 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= $i3 = $i2 + $b11]
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= $i3 = $i2 + $b11] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i3 = $i2 + $b11
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i3 = $i2 + $b11 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z4 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z4 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b12 = 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b12 = 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i4 = $i3 + $b12
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i4 = $i3 + $b12 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z5 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z5 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b13 = 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b13 = 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i5 = $i4 + $b13
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i5 = $i4 + $b13 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z6 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z6 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b14 = 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b14 = 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i6 = $i5 + $b14
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i6 = $i5 + $b14 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z7 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z7 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b15 = 2
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b15 = 2 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= $i7 = $i6 + $b15]
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : goto [?= $i7 = $i6 + $b15] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i7 = $i6 + $b15
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $i7 = $i6 + $b15 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z8 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : if z8 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b16 = 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $b16 = 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : i0 = $i7 + $b16
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : i0 = $i7 + $b16 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r7[0] = $r8
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%04d", $r7)
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%04d", $r7) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9 = newarray (java.lang.String)[3]
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9[0] = "chmod"
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9[0] = "chmod" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9[1] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9[1] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9[2] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r9[2] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r10 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>($r9, null, null, 1)
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r10 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>($r9, null, null, 1) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if z0 == 0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i3 = lengthof r0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i3 = lengthof r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i4 = $i3 + 1
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i4 = $i3 + 1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r19 = newarray (java.lang.String)[$i4]
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r19 = newarray (java.lang.String)[$i4] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r19[0] = "ambari-sudo.sh"
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r19[0] = "ambari-sudo.sh" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i5 = lengthof r0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i5 = lengthof r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r19, 1, $i5)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r19, 1, $i5) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : goto [?= $r6 = new java.lang.ProcessBuilder]
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : goto [?= $r6 = new java.lang.ProcessBuilder] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r6 = new java.lang.ProcessBuilder
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r6 = new java.lang.ProcessBuilder >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : specialinvoke $r6.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>(r19)
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : specialinvoke $r6.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>(r19) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r1 == null
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r1 == null >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if $z1 == 0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r22 = virtualinvoke $r6.<java.lang.ProcessBuilder: java.lang.Process start()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r22 = virtualinvoke $r6.<java.lang.ProcessBuilder: java.lang.Process start()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r13 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r13 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r12 = newarray (java.lang.Object)[2]
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r12 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r12[0] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r12[1] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r12[1] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chmod %s %s", $r12)
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chmod %s %s", $r12) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r14, $r11)
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r14, $r11) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r15 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r15 = new org.apache.ambari.server.utils.ShellCommandUtil$Result >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot perform operation: ")
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot perform operation: ") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r18 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getLocalizedMessage()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r18 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getLocalizedMessage()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : specialinvoke $r15.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", $r20)
org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : specialinvoke $r15.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", $r20) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileMode : return $r15
