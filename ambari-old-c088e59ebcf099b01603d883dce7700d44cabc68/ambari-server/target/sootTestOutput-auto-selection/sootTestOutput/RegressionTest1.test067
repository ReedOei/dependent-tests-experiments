org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : return $r0
org.apache.ambari.server.controller.AmbariServer.getController : return $r0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : $r2 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map resourceProviders>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : $r2 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map resourceProviders> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : if $z0 != 0
org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: void registerResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getResourceProvider : virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: void registerResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.registerResourceProvider : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.spi.ResourceProvider createResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.registerResourceProvider : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.spi.ResourceProvider createResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.DefaultProviderModule.createResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.DefaultProviderModule: org.slf4j.Logger LOGGER>
org.apache.ambari.server.controller.internal.DefaultProviderModule.createResourceProvider : $r2 = <org.apache.ambari.server.controller.internal.DefaultProviderModule: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.controller.internal.DefaultProviderModule.createResourceProvider : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating resource provider for the type: {}", r1)
org.apache.ambari.server.controller.internal.DefaultProviderModule.createResourceProvider : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating resource provider for the type: {}", r1) >>>>>>>> org.apache.ambari.server.controller.internal.DefaultProviderModule.createResourceProvider : $r3 = <org.apache.ambari.server.controller.internal.DefaultProviderModule$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.controller.internal.DefaultProviderModule.createResourceProvider : $r3 = <org.apache.ambari.server.controller.internal.DefaultProviderModule$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES>
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2
org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2 >>>>>>>> org.apache.ambari.server.controller.internal.DefaultProviderModule.createResourceProvider : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>()
