org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if r1 == null >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if $z0 == 0
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r6 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r6 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock> >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.security.KeyStore loadCredentialStore()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.security.KeyStore loadCredentialStore()>() >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.loadCredentialStore : $r1 = r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.io.File keyStoreFile>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.loadCredentialStore : $r1 = r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.io.File keyStoreFile> >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.loadCredentialStore : $r2 = specialinvoke r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.security.KeyStore getKeyStore(java.io.File,java.lang.String)>($r1, "JCEKS")
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.loadCredentialStore : $r2 = specialinvoke r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.security.KeyStore getKeyStore(java.io.File,java.lang.String)>($r1, "JCEKS") >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : if $z0 == 0
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $r6 = <org.apache.ambari.server.security.encryption.FileBasedCredentialStore: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $r6 = <org.apache.ambari.server.security.encryption.FileBasedCredentialStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $r7 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $r7 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Key store file not found in {}. Returning new (non-persisted) KeyStore", $r7)
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Key store file not found in {}. Returning new (non-persisted) KeyStore", $r7) >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : r19 = null
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : r19 = null >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.security.KeyStore loadKeyStore(java.io.InputStream,java.lang.String)>(r19, r2)
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.security.KeyStore loadKeyStore(java.io.InputStream,java.lang.String)>(r19, r2) >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r4 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r4 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService> >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : if $r4 != null
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : if $r4 != null >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r7 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r7 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Master Key Service is not set for this Credential store.")
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Master Key Service is not set for this Credential store.") >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : throw $r7
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : throw $r7 >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r19)
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r19) >>>>>>>> org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : throw $r13
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : throw $r13 >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r9 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r9 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock> >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : throw $r8
