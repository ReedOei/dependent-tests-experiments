org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.stack.ConfigUpgradePack: java.util.Map enumerateConfigChangesByID()>()
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r5 = virtualinvoke r2.<org.apache.ambari.server.state.stack.ConfigUpgradePack: java.util.Map enumerateConfigChangesByID()>() >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : if $z0 == 0
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $i0 = r0.<org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest: int validatedConfigCount>
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6 = newarray (java.lang.Object)[4]
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[0] = r1
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[0] = r1 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[1] = r4
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[1] = r4 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>()
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r7 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>() >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[2] = $r7
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[2] = $r7 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>()
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>() >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[3] = $r8
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r6[3] = $r8 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Missing %s in upgrade from %s to %s (%s)", $r6)
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Missing %s in upgrade from %s to %s (%s)", $r6) >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : staticinvoke <junit.framework.Assert: void fail(java.lang.String)>($r9)
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : staticinvoke <junit.framework.Assert: void fail(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : return
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $i0 = r0.<org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest: int validatedConfigCount> >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $i1 = $i0 + 1
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : r0.<org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest: int validatedConfigCount> = $i1
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : r0.<org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest: int validatedConfigCount> = $i1 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r11 = <org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r11 = <org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10[0] = r1
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10[0] = r1 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r12 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>()
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r12 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>() >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10[1] = $r12
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10[1] = $r12 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10[2] = r4
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : $r10[2] = r4 >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Validated {} from upgrade pack {} for {}", $r10)
org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Validated {} from upgrade pack {} for {}", $r10) >>>>>>>> org.apache.ambari.server.state.stack.ConfigUpgradeValidityTest.assertIdDefinitionExists : return
