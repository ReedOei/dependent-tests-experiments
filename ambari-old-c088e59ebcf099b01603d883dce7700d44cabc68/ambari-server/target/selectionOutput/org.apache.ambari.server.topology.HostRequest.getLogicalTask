org.apache.ambari.server.topology.HostRequest.getLogicalTask : $r1 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTask : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.topology.HostRequest.getLogicalTask : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTask : $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)
org.apache.ambari.server.topology.HostRequest.getLogicalTask : $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTask : $r4 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r3
org.apache.ambari.server.topology.HostRequest.getLogicalTask : $r4 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r3 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTask : return $r4
