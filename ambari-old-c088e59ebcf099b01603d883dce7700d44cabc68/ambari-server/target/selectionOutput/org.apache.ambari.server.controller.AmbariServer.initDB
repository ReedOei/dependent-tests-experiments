org.apache.ambari.server.controller.AmbariServer.initDB : $r3 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.orm.PersistenceType getPersistenceType()>()
org.apache.ambari.server.controller.AmbariServer.initDB : $r4 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.orm.PersistenceType getPersistenceType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r5 = <org.apache.ambari.server.orm.PersistenceType: org.apache.ambari.server.orm.PersistenceType IN_MEMORY>
org.apache.ambari.server.controller.AmbariServer.initDB : $r5 = <org.apache.ambari.server.orm.PersistenceType: org.apache.ambari.server.orm.PersistenceType IN_MEMORY> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : if $r4 == $r5
org.apache.ambari.server.controller.AmbariServer.initDB : if $r4 == $r5 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $z0 = r0.<org.apache.ambari.server.controller.AmbariServer: boolean dbInitNeeded>
org.apache.ambari.server.controller.AmbariServer.initDB : if $r4 == $r5 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r6 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariServer.initDB : $r6 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Database init needed - creating default data")
org.apache.ambari.server.controller.AmbariServer.initDB : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Database init needed - creating default data") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r7 = r0.<org.apache.ambari.server.controller.AmbariServer: com.google.inject.Injector injector>
org.apache.ambari.server.controller.AmbariServer.initDB : $r7 = r0.<org.apache.ambari.server.controller.AmbariServer: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/Users;")
org.apache.ambari.server.controller.AmbariServer.initDB : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/authorization/Users;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : r1 = (org.apache.ambari.server.security.authorization.Users) $r8
org.apache.ambari.server.controller.AmbariServer.initDB : r1 = (org.apache.ambari.server.security.authorization.Users) $r8 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke r1.<org.apache.ambari.server.security.authorization.Users: void createUser(java.lang.String,java.lang.String)>("admin", "admin")
org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke r1.<org.apache.ambari.server.security.authorization.Users: void createUser(java.lang.String,java.lang.String)>("admin", "admin") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke r1.<org.apache.ambari.server.security.authorization.Users: void createUser(java.lang.String,java.lang.String)>("user", "user")
org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke r1.<org.apache.ambari.server.security.authorization.Users: void createUser(java.lang.String,java.lang.String)>("user", "user") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r9 = new org.apache.ambari.server.orm.entities.MetainfoEntity
org.apache.ambari.server.controller.AmbariServer.initDB : $r9 = new org.apache.ambari.server.orm.entities.MetainfoEntity >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : specialinvoke $r9.<org.apache.ambari.server.orm.entities.MetainfoEntity: void <init>()>()
org.apache.ambari.server.controller.AmbariServer.initDB : specialinvoke $r9.<org.apache.ambari.server.orm.entities.MetainfoEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke $r9.<org.apache.ambari.server.orm.entities.MetainfoEntity: void setMetainfoName(java.lang.String)>("version")
org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke $r9.<org.apache.ambari.server.orm.entities.MetainfoEntity: void setMetainfoName(java.lang.String)>("version") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r10 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariServer.initDB : $r10 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r11 = virtualinvoke $r10.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getServerVersion()>()
org.apache.ambari.server.controller.AmbariServer.initDB : $r11 = virtualinvoke $r10.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getServerVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r12 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: java.lang.String getVersionSubstring(java.lang.String)>($r11)
org.apache.ambari.server.controller.AmbariServer.initDB : $r12 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: java.lang.String getVersionSubstring(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke $r9.<org.apache.ambari.server.orm.entities.MetainfoEntity: void setMetainfoValue(java.lang.String)>($r12)
org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke $r9.<org.apache.ambari.server.orm.entities.MetainfoEntity: void setMetainfoValue(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r13 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.orm.dao.MetainfoDAO metainfoDAO>
org.apache.ambari.server.controller.AmbariServer.initDB : $r13 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.orm.dao.MetainfoDAO metainfoDAO> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke $r13.<org.apache.ambari.server.orm.dao.MetainfoDAO: void create(org.apache.ambari.server.orm.entities.MetainfoEntity)>($r9)
org.apache.ambari.server.controller.AmbariServer.initDB : virtualinvoke $r13.<org.apache.ambari.server.orm.dao.MetainfoDAO: void create(org.apache.ambari.server.orm.entities.MetainfoEntity)>($r9) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : return
org.apache.ambari.server.controller.AmbariServer.initDB : $z0 = r0.<org.apache.ambari.server.controller.AmbariServer: boolean dbInitNeeded> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : if $z0 == 0
org.apache.ambari.server.controller.AmbariServer.initDB : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : $r6 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariServer.initDB : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.initDB : return
